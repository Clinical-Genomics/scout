#!/usr/bin/env python
# encoding: utf-8
"""
scout

Script for using the scout tool

Created by MÃ¥ns Magnusson on 2015-02-04.
Copyright (c) 2015 __TheScoutTeam__. All rights reserved.
"""
import click
import pkg_resources

from mongoengine import connect

from scout import logger
from scout.log import init_log
from scout.commands import load, transfer, wipe_and_load, wipe, delete_case
from scout.ext.backend.mongo import MongoAdapter

version = pkg_resources.require("scout")[0].version


def print_version(ctx, param, value):
    """Callback function for printing version and exiting
    Args:
        ctx (object) : Current context
        param (object) : Click parameter(s)
        value (boolean) : Click parameter was supplied or not
    Returns:
        None:
    """
    if not value or ctx.resilient_parsing:
        return
    click.echo('scout version: ' + version)
    ctx.exit()


@click.group()
@click.option('--version', is_flag=True, callback=print_version,
              expose_value=False, is_eager=True)
@click.option('-l', '--logfile', type=click.Path(exists=False),
              help="Path to log file. If none logging is printed to stderr.")
@click.option('--loglevel', type=click.Choice(['DEBUG', 'INFO', 'WARNING',
                                               'ERROR', 'CRITICAL']),
              help="Set the level of log output.")
@click.option('-db', '--mongo-db', default='variantDatabase')
@click.option('-u', '--username', type=str)
@click.option('-p', '--password', type=str)
@click.option('-port', '--port', default=27017,
              help='Specify the port where to look for the mongo database.')
@click.option('-h', '--host', default='localhost',
              help='Specify the host where to look for the mongo database.')
@click.pass_context
def cli(ctx, mongo_db, username, password, host, port, logfile, loglevel):
    """Manage Scout interactions."""
    init_log(logger, logfile, loglevel)
    ctx.db = MongoAdapter()
    connect(mongo_db, host=host, port=port, username=username,
            password=password)


cli.add_command(load)
cli.add_command(transfer)
cli.add_command(wipe)
cli.add_command(wipe_and_load)
cli.add_command(delete_case)


if __name__ == '__main__':
    cli()
