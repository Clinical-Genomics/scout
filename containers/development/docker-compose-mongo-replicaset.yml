# Howto (from this fantastic tutorial: https://github.com/UpSync-Dev/docker-compose-mongo-replica-set):
# 1) From Scout main folder, run:
# docker-compose -f containers/development/docker-compose-mongo-replicaset.yml up (-d)
#
# 2) Modify /etc/hosts by adding the following lines ():
# Added to enable connections to a local, containerized MongoDB replicaset
# 127.0.0.1       mongo1
# 127.0.0.1       mongo2
# 127.0.0.1       mongo3
#
# 3) The connection to the replicaset has the following string (wait a few seconds before connecing):
# mongo mongodb://127.0.0.1:27011,127.0.0.1:27012,127.0.0.1:27013/scout?replicaSet=rs0
#
# 7) Remove used images, containers and volumes by running:
# docker-compose down
# (docker system prune)
# (docker volume prune)

version: "3.8"

services:
  mongo1:
    image: mongo:4.4.9
    container_name: mongo1
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27011"]
    ports:
      - 27011:27011
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'rs0',members:[{_id:0,host:\"mongo1:27011\"},{_id:1,host:\"mongo2:27012\"},{_id:2,host:\"mongo3:27013\"}]}).ok || rs.status().ok" | mongo --port 27011 --quiet) -eq 1
      interval: 10s
      start_period: 30s

  mongo2:
    image: mongo:4.4.9
    container_name: mongo2
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27012"]
    ports:
      - 27012:27012

  mongo3:
    image: mongo:4.4.9
    container_name: mongo3
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27013"]
    ports:
      - 27013:27013
