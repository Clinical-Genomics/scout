name: Publish to PyPI, Docker Hub and GitHub IO

on:
 release:
  types:
   - created

jobs:
 build-n-publish:
  name: Build and publish Python distribution to PyPI
  runs-on: ubuntu-latest
  steps:
   - name: Check out git repository
     uses: actions/checkout@v4

   - name: Set up Python 3.7
     uses: actions/setup-python@v4
     with:
      python-version: 3.7

   - name: Install build tools
     run: >-
        python -m
        pip install
        wheel
        twine
        --user

   - name: Build a binary wheel and a source tarball
     run: >-
        python
        setup.py
        sdist
        bdist_wheel

   - name: Publish distribution ðŸ“¦ to PyPI
     uses: pypa/gh-action-pypi-publish@release/v1
     with:
       user: __token__
       password: ${{ secrets.pypi_password }}

 docker-image-CI:
   name: Docker Image CI
   runs-on: ubuntu-latest
   steps:

    - name: Check out git repository
      uses: actions/checkout@v3

    - name: Publish main image (Dockerfile) to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: clinicalgenomics/scout
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        tags: "latest,${{ github.event.release.tag_name }}"

    - name: Publish server image (Dockerfile-server) to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: clinicalgenomics/scout-server
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        dockerfile: Dockerfile-server
        tags: "latest,${{ github.event.release.tag_name }}"

 deploy-docs:
   name: Deploy Docs to GitHubIO
   runs-on: ubuntu-latest
   steps:
    - name: Checkout repo
      uses: actions/checkout@v4
    - name: Setup environment for docs deployment
      uses: actions/setup-python@v4
      with:
        python-version: 3.x
    - name: Install mkdocs
      run: pip install mkdocs mkdocs-material markdown-include
    - name: Deploy documentation
      run: mkdocs gh-deploy --force
