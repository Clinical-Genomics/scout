---

name: Deploy release to production environment

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: 'Branch name'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout to master
        uses: actions/checkout@master
      - name: Install
        run: yarn install
      - name: Run lint check
        run: yarn lint
      - name: Test
        run: yarn test
  docker-image-push-prod:
    runs-on: ubuntu-latest
    needs: build
    name: Push staging docker image
    steps:
      - name: Check out git repository
        uses: actions/checkout@v2

      - name: Extract branch name and remove illegal chars
        id: get_branch_name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo "$(tr "/" "-" <<<${GITHUB_REF#refs/heads/})")"

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: "clinicalgenomics/scout-react:master, clinicalgenomics/scout-react:latest"
  create_deployment:
    needs: docker-image-push-prod
    runs-on: ubuntu-latest
    steps:
      - run: |
          curl \
            --fail \
            -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.BUMPVERSION_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/deployments \
            -d '{
            "ref": "${{ github.event.inputs.branch_name }}",
            "environment": "production",
            "auto_merge": false,
            "description": "${{secrets.DEPLOYMENT_INFO}}"}'