{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p> Analyze VCFs and collaborate on solving rare diseases quicker </p>"},{"location":"#what-is-scout","title":"What is Scout?","text":"<ul> <li>Simple - Analyze variants in a simple to use web interface.</li> <li>Aggregation - Combine results from multiple analyses and VCFs into a centralized database.</li> <li>Collaboration - Write comments and share cases between users and institutes.</li> </ul> <p>Latest entry in the blog: What's new in 4.72?</p> <p>Version migration issues: Breaking</p>"},{"location":"faq/","title":"FAQ","text":""},{"location":"faq/#my-email-is-white-listed-but-i-cant-log-into-scout","title":"My email is white listed but I can't log into Scout","text":"<p>You can be logged into multiple Google accounts at the same time. If you are only logged into one account, it will automatically be used when you click \"Login with Google\".</p> <p>Visit Google and click your avatar in the top right corner and \"Add account\" and log with your Scout connected account. Next time you access Scout you will be presented with an option of which Google account to use.</p>"},{"location":"faq/#what-should-my-vcf-format-look-like-in-detail","title":"What should my VCF format look like in detail?","text":"<p>Scout will work to some degree with many a generic (ideally VEP annotated) VCF as input, but, if you have a choice, for best results out of the box, use an already well integrated pipeline. The most well tested pipelines for Scout viewing currently are MIP (RD SR) or Nextflow-wgs (RD SR), Balsamic (somatic), nf-core/RNAfusion (RNA fusion) and tomte (RNA expression) We fully support nf-core/raredisease and nf-core/Nallo (RD LRS). We also have compatibility with at least earlier versions of other pipelines e.g. sarek (somatic) and poorpipe (RD LRS).</p> <p>To use the full features of Scout, try to load pre-ranked variants (see genmod). An important take home for variant triage, especially of SVs, is that you need to get good local database frequency annotation going. We use SVDB and/or loqusdb.</p> <p>Say hi to the developers in a GitHub issue or discussion, describe your pipeline and situation and we may be able to direct you.</p>"},{"location":"install/","title":"Install Scout","text":"<p>This guide will walk you through how to setup a working instance of scout by cloning the repository from GitHub and installing it with the <code>pip install command</code>. For instructions on how to deploy Scout command line and server using containers check the Deploy Scout in containers page The instructions are divided into multiple sections. One section describes how to set up a demo version with some cases just to see how it could look like.</p>"},{"location":"install/#0-intro","title":"0. Intro","text":"<p>Make sure you have a <code>mongod</code> process running. First install mongodb and follow the instructions.</p>"},{"location":"install/#1-install","title":"1. Install","text":"<p>Installation of Scout is possible via PyPi, GitHub or Dockerhub. Let's start by pulling down the GitHub repository with the source code.</p>"},{"location":"install/#github","title":"GitHub","text":"<p>Use <code>git</code> to clone from GitHub, either the <code>https</code> or <code>ssh</code> route. Scout is configured to use <code>uv</code>: either run, install, or install as a tool.</p> <pre><code>git clone https://github.com/Clinical-Genomics/scout\ncd scout\n\nuv sync --frozen\nuv run scout\n</code></pre> <p>Or if you rather, the project definition is compatible with pip, so instead of the <code>uv</code> statement above you can just</p> <pre><code>pip install --editable .\n</code></pre>"},{"location":"install/#pip","title":"Pip","text":"<p>To get the latest development (<code>main</code>) version, use the above. When using pip the latest stable release will be installed.</p> <pre><code>pip install scout-browser\n</code></pre>"},{"location":"install/#2-configure","title":"2. Configure","text":"<p>In order to make full use of Scout, you will want to integrate with both external resources and a number of available extensions, e.g. <code>chanjo</code> for coverage analysis and <code>gens</code> for seamless visualisation and triage of larger CNVs.</p> <p>You will want to sign up for access to a few web APIs like Google OAuth and OMIM. The keys and secrets should be added to the Flask instance config. To learn more about possible settings, take a look in the <code>scout/settings.py</code> module.</p>"},{"location":"install/#autentication","title":"Autentication","text":"<p>If you intend to use authentication, which you should, there are several options!</p> <p>OAuth2 via an ODIC provider (we have good experience with Google) or a KeyCloak server of you own. Scout also supports LDAP. See the admin-guide for details.</p>"},{"location":"install/#google-oauth","title":"Google OAuth","text":"<p>Create a new project in your Google Developer console. Under your project, click \"APIs &amp; auth\" &gt; \"Credentials\". Here you will find your \"CLIENT ID\" and \"CLIENT SECRET\". You also need to add some \"REDIRECT URLS\" and \"JAVASCRIPT ORIGINS\".</p> <p>REDIRECT URLS:</p> <ul> <li>http://localhost:5023/authorized</li> <li>https://localhost:5023/authorized</li> </ul> <p>JAVASCRIPT ORIGINS:</p> <ul> <li>http://localhost:5023</li> <li>https://localhost:5023</li> </ul> <p>Remember that it might take a while for the tokens to start working.</p>"},{"location":"install/#omim-api","title":"OMIM API","text":"<p>You can register for free OMIM API access. You will be sent the authentication token eventually :)</p>"},{"location":"install/#gmail","title":"Gmail","text":"<p>The Sanger email feature requires credentials for a Gmail account. Any account should work so you don't need to sign up for any special access.</p>"},{"location":"install/#mongodb","title":"MongoDB","text":"<p>If you are using a password protected Mongo database you also need to add the authentication details to the instance config.</p>"},{"location":"install/#2-setup","title":"2. Setup","text":""},{"location":"install/#demo-setup","title":"Demo setup","text":"<p>This option is used to quickly get a operating instance with some example data</p> <pre><code>scout setup demo\nscout --demo serve\n</code></pre> <p>The previous command setup the database with a truncated collection of gene definitions with links to OMIM along with HPO phenotype terms.</p>"},{"location":"install/#full-setup","title":"Full setup","text":"<p>For more info, run <code>scout --help</code>!</p> <p>To initialize a working instance - a database where you store genes, diseases, cases, variants etc run</p> <pre><code>scout setup database\n</code></pre> <p>You will want to make sure you have a full complement of these genes, diseases etc before you start working on cases.</p> <pre><code>scout download everything --api-key YOUR_OMIM_API_KEY\nscout update hpo --hpoterms hpo.obo --hpo-to-genes phenotype_to_genes.txt\nscout update diseases -f .\nscout update genes -f .\n</code></pre> <p>A common task is to have a couple of broad screening panels for rare disease genomics set up. We provide automation for two such in silico panels out of the box, one with OMIM morbid genes, and one with all PanelApp <code>Green</code> genes. Here you provide the name of an institute you created that will serve as responsible for these panels (<code>cust002</code> below):</p> <pre><code>scout update omim --institute cust002 --genemap2 genemap2.txt --mim2genes mim2genes.txt\nscout update panelapp-green -i cust002 --force\n</code></pre> <p>For more information about populating and updating the database, please see admin-guide.</p> <pre><code>scout load panel scout/demo/panel_1.txt\nscout load case scout/demo/643594.config.yaml\n</code></pre>"},{"location":"admin-guide/","title":"Admin Guide","text":"<p>This includes instructions for bioinformaticians to install, manage and update a scout instance</p> <ul> <li>Admin Guide</li> <li>Deploy Scout in containers</li> <li>Setup</li> <li>Creating a new institute</li> <li>Creating a new user</li> <li>Loading a case</li> <li>Load Config File</li> <li>Updating case individuals tracks</li> <li>Updating a case</li> <li>Genes, transcripts and exons</li> <li>HPO terms</li> <li>Annotations</li> <li>IGV browser settings</li> <li>Server</li> <li>Chanjo coverage integration</li> <li>Loqusdb integration</li> <li>Matchmaker Exchange integration</li> <li>BioNano Genomics Access FSHD integration</li> <li>Indexes</li> <li>Scripts folder</li> <li>Backup and restore</li> <li>Migration instructions for major and semi major releases</li> </ul>"},{"location":"admin-guide/annotations/","title":"Annotations","text":"<p>Scout is a primarily a visualisation tool with some other functionality. One could imagine that in the future, some or all annotations could be performed by Scout. For now scout will look for some known keys when uploading a VCF and extract information for those. VEP is the tool supported for functional and regional annotations at the moment, SnpEff will be added in the near future. For the other types of annotations Scout will look for certain keys in the INFO field of the vcf and expect the value to be of a specific type. This means that there is not a dependency on any other specific annotation tool besides VEP, just make sure that the key and values are correct according to the specification below.</p>"},{"location":"admin-guide/annotations/#rank-score","title":"Rank score","text":"<p>One of the hard problem when dealing with whole genome data is the huge amount variants that are generated in every analysis. Scout was developed to be used in rare variant analysis, this means that there is ony a small number of variants that are actually interesting to look at. We do not want to store all variants from each case in a database that should be able to controll thousands of cases. To solve this problem we are working with rank scores, each variant is scored according to a scoring schema then we only upload and sort the variants based on their rank score. In this way the users can start by looking at the variants that looks potentially most dangerous from a bioinformatic perspective. We use the tool genmod to (among other things) score the variant, but as long as there is a <code>RankScore</code>-field in the <code>INFO</code> field of the VCF with a float as value it is handeled by Scout.</p>"},{"location":"admin-guide/annotations/#annotation-keys-and-tool-suggestions","title":"Annotation keys and tool suggestions","text":"<p>In this section all the different annotation keys and suggestions of tools that can be used to annotate them are listed. If nothing else is stated Scout will search in the INFO field to locate the key value pair.</p>"},{"location":"admin-guide/annotations/#frequencies","title":"Frequencies","text":""},{"location":"admin-guide/annotations/#1000g","title":"1000G","text":"<p>The frequency from the 1000G population database.</p> <ul> <li>Key: <code>1000G</code></li> <li>Value: <code>Float</code></li> <li>Tools: VEP, SnpEff, genmod, vcfanno</li> </ul>"},{"location":"admin-guide/annotations/#1000g_max_af","title":"1000G_MAX_AF","text":"<p>The maximum allele frequency of all populations in the 1000G population database.</p> <ul> <li>Key: <code>1000G_MAX_AF</code></li> <li>Value: <code>Float</code></li> <li>Tools: custom made, we have modified the 1000G file and use genmod</li> </ul>"},{"location":"admin-guide/annotations/#exac","title":"ExAC","text":"<p>The frequency from the ExAC population database.</p> <ul> <li>Key: <code>EXACAF</code></li> <li>Value: <code>Float</code></li> <li>Tools: VEP, SnpEff, genmod, vcfanno</li> </ul>"},{"location":"admin-guide/annotations/#exac_max_af","title":"ExAC_MAX_AF","text":"<p>The maximum allele frequency of all populations in the ExAC population database.</p> <ul> <li>Key: <code>EXAC_MAX_AF</code></li> <li>Value: <code>Float</code></li> <li>Tools: custom made, we have modified the exac file and use genmod</li> </ul>"},{"location":"admin-guide/annotations/#gnomad","title":"GnomAD","text":"<p>The maximum allele frequency of all populations in gnomAD population database.</p> <ul> <li>Key: <code>gnomAD_AF</code> in VEP <code>CSQ</code> field</li> <li>Value: <code>Float</code></li> <li>Tools: VEP</li> </ul>"},{"location":"admin-guide/annotations/#severity","title":"Severity","text":""},{"location":"admin-guide/annotations/#cadd-score","title":"CADD score","text":"<p>The Combined Annotation Dependent Depletion(CADD) score. A prediction of the deleterioussness for a variant.</p> <ul> <li>Key: <code>CADD</code> or <code>cadd</code> in VEP <code>CSQ</code> field</li> <li>Value: <code>Float</code></li> <li>Tools: VEP, SnpEff, genmod, vcfanno</li> </ul>"},{"location":"admin-guide/annotations/#sift","title":"SIFT","text":"<p>The SIFT prediction for how a variation affects the protein.</p> <ul> <li>Key: <code>SIFT</code> in VEP <code>CSQ</code> field</li> <li>Value: <code>String</code></li> <li>Tools: VEP</li> </ul>"},{"location":"admin-guide/annotations/#polyphen","title":"PolyPhen","text":"<p>The PolyPhen prediction for how a variation affects the protein.</p> <ul> <li>Key: <code>PolyPhen</code> in VEP <code>CSQ</code> field</li> <li>Value: <code>String</code></li> <li>Tools: VEP</li> </ul>"},{"location":"admin-guide/annotations/#spliceai","title":"SpliceAI","text":"<p>The SpliceAI prediction for how a variant affects splicing. SpliceAI transcript delta score, defined as max of all transcipt delta scores DS, can be interpreted as a probabilty of splicing being affected for the current transcript. Jaganathan 2019 consider thresholds 0.2 high recall, 0.5 recommended, and 0.8 high precision. The DS and DP pairs describe probability and relative position scores, with negative position values being upstream. E.g. donor gain DS_DG 0.08 at DP_DG -31, acceptor loss DS_AL 0.58 at DP_AL -2.</p> <ul> <li>Key <code>CSQ</code> - <code>SpliceAI_pred_DS_AG</code>, <code>SpliceAI_pred_DP_AG</code>, <code>SpliceAI_pred_DS_AL</code>, <code>SpliceAI_pred_DP_AL</code>,     <code>SpliceAI_pred_DS_DG</code>, <code>SpliceAI_pred_DP_DG</code>, <code>SpliceAI_pred_DS_DL</code>, <code>SpliceAI_pred_DP_DL</code></li> <li>Value: <code>Float</code> in <code>DS</code> and <code>Int</code> in <code>DP</code></li> <li>Tools: SpliceAI</li> </ul>"},{"location":"admin-guide/annotations/#rank-score_1","title":"Rank score","text":"<p>The combined rank score for a variant. For exact info see test</p> <ul> <li>Key: <code>RankScore</code></li> <li>Value: <code>Float</code></li> <li>Tools: genmod</li> </ul>"},{"location":"admin-guide/annotations/#normalised-rank-score","title":"Normalised Rank Score","text":"<ul> <li>Key: <code>RankScoreNormalized</code></li> <li>Value: <code>Float</code> (0-1)</li> <li>Tools: genmod</li> </ul>"},{"location":"admin-guide/annotations/#conservation","title":"Conservation","text":""},{"location":"admin-guide/annotations/#gerp","title":"Gerp","text":"<p>The Genomic Evolutionary Rate Profiling(GERP) conservation string. An estimation of how conserved this position is.</p> <ul> <li>Key: <code>GERP++_RS_prediction_term</code></li> <li>Value: <code>String</code></li> <li>Tools: SnpSift</li> </ul>"},{"location":"admin-guide/annotations/#phastcons","title":"phastCons","text":"<p>The PHASTcons conservation string.</p> <ul> <li>Key: <code>phastCons100way_vertebrate_prediction_term</code></li> <li>Value: <code>String</code></li> <li>Tools: SnpSift</li> </ul>"},{"location":"admin-guide/annotations/#phylop","title":"phylop","text":"<p>The phylop 100 way predicted conservation string.</p> <ul> <li>Key: <code>phyloP100way_vertebrate_prediction_term</code></li> <li>Value: <code>String</code></li> <li>Tools: SnpSift</li> </ul>"},{"location":"admin-guide/annotations/#inheritance","title":"Inheritance","text":""},{"location":"admin-guide/annotations/#genetic-models","title":"Genetic models","text":"<p>What genetics models are followed for the variant in the particular family</p> <ul> <li>Key: <code>GeneticModels</code></li> <li>Value: list of <code>String</code></li> <li>Tools: genmod</li> </ul>"},{"location":"admin-guide/annotations/#autosomal-recessive-compounds","title":"Autosomal Recessive Compounds","text":"<p>What variants is this variant in Autosomal Recessive Compound with?</p> <ul> <li>Key: <code>Compounds</code></li> <li>Value: list of <code>String</code></li> <li>Tools: genmod</li> </ul>"},{"location":"admin-guide/backup/","title":"Backing up Scout","text":"<p>In general it is best practice to follow the mongodb official recommendations for backing up a database. For a \"light\" backup there is a command in scout which works as a wrapper around <code>mongodump</code>. This command was added to ease the process of backing up without including static information. Some of the collections are better to recreate than to backup including genes, transcripts and especially the gigantic variants collection. Please make sure [<code>mongodump</code>] is on your <code>PATH</code> before running this backup command.</p>"},{"location":"admin-guide/backup/#backup-command","title":"Backup command","text":"<p>To do an incomplete backup run:</p> <pre><code>scout export database -o &lt;path/to/folder/&gt;\n</code></pre> <p>This command will backup all non-static collections that saves user input data, namely:</p> <pre><code>        user_collection\n        institute_collection\n        event_collection\n        case_collection\n        case_group_collection\n        panel_collection\n        acmg_collection\n        clinvar_submission_collection\n        filter_collection\n</code></pre> <p>The following will not be backed up but can easily be recreated:</p> <pre><code>        hgnc_collection\n        hpo_term_collection\n        disease_term_collection\n        variant_collection\n        clinvar_collection\n        exon_collection\n        transcript_collection\n        filter_collection\n</code></pre> <p>IF a user want to backup the whole database use the flag <code>--all-collections</code>, however in that case we recommend to follow mongodbs recommendations on database backups</p>"},{"location":"admin-guide/backup/#recreate-database","title":"Recreate database","text":"<p>To recreate do the following steps:</p> <ol> <li>Use a fully operational instance of scout, either an existing one or create one with <code>scout setup database</code></li> <li>Run command <code>mongorestore --gzip path/to/dump</code>. Read docs for mongorestore for more information</li> <li>Everything should now be in place except for the variants. Add the variants for a case with <code>scout upload variants &lt;case_id&gt;</code>. See <code>--help</code> for more info.</li> </ol>"},{"location":"admin-guide/bionano_access_integration/","title":"BioNano Genomics Access FSHD integration","text":""},{"location":"admin-guide/bionano_access_integration/#bionano-access-server-integration","title":"BioNano Access Server Integration","text":"<p>Starting from Scout release 4.71 the software can be configured to fetch FSHD reports for individual samples from a BioNano Genomics Access server. Currently, a single user account is used for accessing all project samples. Depending on your setup, this user may need admin privileges to read all. We find that a <code>read_only</code> user account works well.</p>"},{"location":"admin-guide/bionano_access_integration/#basic-configuration-for-bionano-access-integration","title":"Basic configuration for BioNano Access Integration","text":"<p>Edit Scout config file adding the following parameters:</p> <pre><code># BioNano Access Server extension\nBIONANO_ACCESS = \"https://bionano-access.scilifelab.se\"\nBIONANO_USERNAME = \"USER\"\nBIONANO_PASSWORD = \"PASS\"\n</code></pre> <p>The server address <code>https://bionano-access.scilifelab.se</code> is an externally available URL</p>"},{"location":"admin-guide/bionano_access_integration/#adding-bionano-access-project-and-sample-to-the-case-config","title":"Adding BioNano Access project and sample to the case config","text":"<p>Scout will look up samples using the BioNano Access project- and sample keys given for the individual. The preferred way is by case config file, adding <code>bionano_access</code> <code>project</code> and <code>sample</code> fields to the individual (sample):</p> <pre><code>bionano_access:\n    project: \"230303_customer_projectA1\"\n    sample: \"2023-12345\"\n</code></pre> <p>The <code>scout update individual</code> command can alternatively be directly used to update individuals that are already loaded.</p> <pre><code>scout update individual -c internal_id -i ADM1059A2 bionano_access.project 230303_customer_projectA1\nscout update individual -c internal_id -i ADM1059A2 bionano_access.sample 2023-12345\n</code></pre> <p>It is advised to give the original (not a copy) project and sample name, as this can cause issues on the API. A copy can still exist and be used to restrict project read credentials on the Access server web interface appropriately.</p> <p>Results appear in Scout as a tab for each case, reachable from the case page for cases that have <code>bionano_access</code> <code>project</code> and <code>sample</code> configured for at least one individual. Results are not cached in Scout, but re-retrieved on page load.</p>"},{"location":"admin-guide/breaking/","title":"Breaking changes - migration instructions for major and semi-major releases","text":"<p>Initial setup should always be smooth, but you do not have to reinstall from scratch when a new release is out. Essentially always it is safe to go to a new patch or minor version with your current setup. This is one of the beautiful things with using a document database and REST interfaces. Occasionaly, especially when interaction with other components change, a few steps will have to be taken. We will try to detail them here.</p> <p>A quick revert to an older version is mostly possible. There are however often foreseen or unforeseen issues with reverting to older release versions, especially if external data has been loaded or cases and events have been added. We try not to make it too difficult to revert in a stage environment, but we always believe the way is forward, and do not actively test the effects of reverting.</p>"},{"location":"admin-guide/breaking/#migrating-to-version-421","title":"Migrating to version 4.21","text":""},{"location":"admin-guide/breaking/#optional-configuration-of-multiple-loqusdb-instances","title":"Optional configuration of multiple loqusdb instances","text":"<p>The documentation for loqusdb integration has been updated to reflect the new configuration options. See also PR #1984 and issue #1921.</p>"},{"location":"admin-guide/chanjo_coverage_integration/","title":"Considerations","text":"<p>Scout is well integrated with the Chanjo software for coverage reporting. While Chanjo is efficient and speedy in calculating metrics over transcript data, making it a valuable tool for visualizing statistics in WES analyses, the incorporation of support for other types of analyses (WGS, WTS) in Scout has rendered Chanjo outdated. In particular, updating the reference transcript set in an active Chanjo instance is challenging.</p> <p>In response to this, efforts at Clinical Genomics led to the development of Chanjo2, an updated tool designed to calculate coverage and coverage completeness statistics with the advantage of utilizing the .d4 (Dense Depth Data Dump) format.</p> <p>For further information on d4tools and the .d4 format, please visit the relevant project pages. Instructions on setting up a Chanjo2 server can be found in the documentation available on the Chanjo2 GitHub pages.</p> <p>For system administrators configuring communication with either of these tools, we recommend integrating with Chanjo2, as the Chanjo repository is likely to be deprecated.</p>"},{"location":"admin-guide/chanjo_coverage_integration/#chanjo2-coverage-integration","title":"Chanjo2 coverage integration","text":"<p>Integration with Chanjo2 does not require the installation of any specific libraries. However, it needs the availability of a Chanjo2 instance with access to the disk folder where scout case data files are stored.</p> <p>Once the Chanjo2 server is accessible, simply modify one line in the Scout configuration file to set the value of 'CHANJO2_URL' to the root endpoint of your Chanjo2 API.</p>"},{"location":"admin-guide/chanjo_coverage_integration/#loading-of-d4-file-in-case-data","title":"Loading of .d4 file in case data","text":"<p>To enable a Scout case to display links to Chanjo2 pages such as gene coverage reports and genes coverage overviews, the .yaml case load config file must specify the path to .d4 files for at least one of the case individuals/samples.</p> <p>Prior to loading a case into Scout, it's essential to create .d4 files. Instructions on how to generate these files using the d4tools software can be found in the software's documentation.</p> <p>The path to the .d4 files should be provided in the .yaml Scout load config, as outlined in the scout documentation.</p>"},{"location":"admin-guide/chanjo_coverage_integration/#chanjo-coverage-integration-soon-deprecated","title":"Chanjo coverage integration (soon deprecated)","text":"<p>Scout may be configured to visualize coverage reports produced by Chanjo. To do so it is necessary to install the python package Chanjo and its report visualization app, chanjo-report.</p> <p>Both these programs require a database to store samples names, transcript specifications and statistics relative to the trascript coverage for all samples. Note that chanjo can be used as a standalone but chanjo-report needs to have access to the data produced by chanjo to generate coverage reports. Scout does not require chanjo installed in the path to visualize coverage reports, but it is necessary to install chanjo-report and set up the connection to a database containing coverage data in order to use this fuctionality.</p>"},{"location":"admin-guide/chanjo_coverage_integration/#chanjo-database","title":"Chanjo database","text":"<p>Chanjo-report (and chanjo) work with MySQL and SQLite databases. This guide explains how to set up a MySQL database since this database is the one used in production at Clinical Genomics. For a guide on how to install MySQL on your server click here.  Once the database and the administrator user and password are configured, you can create the new database to contain the chanjo structures. To do so, from a terminal type:</p> <pre><code>mysql -u admin_user -padmin_password #no space between -p and password\nmysql&gt; create database chanjo4_demo;\nmysql&gt; exit\n</code></pre> <p>To create a new empty database download the empty schema <code>chanjo4_structure.sql</code> under <code>scout/demo/resources</code>. The command to restore the database from this dump file is:</p> <pre><code>mysql -u admin_user -padmin_password chanjo4_demo &lt; path/to/chanjo4_structure.sql #no space between -p and password\n</code></pre> <p>To create instead a demo database containing coverage data for genes in panel1 for the samples used in the demo version of scout, you might download the schema <code>chanjo4_demo.sql</code>. This file is present in the folder <code>scout/demo</code>, along with the rest of the demo data. The syntax to create the database is the same as above.</p> <p>Chanjo database consists of 3 tables: - sample:</p> Field Type Null Key Default Extra id varchar(32) NO PRI NULL group_id varchar(128) YES MUL NULL source varchar(256) YES NULL created_at datetime YES NULL name varchar(128) YES NULL group_name varchar(128) YES NULL <ul> <li>transcript:</li> </ul> Field Type Null Key Default Extra id varchar(32) NO PRI NULL gene_id int(11) NO MUL NULL gene_name varchar(32) YES MUL NULL chromosome varchar(10) YES NULL length int(11) YES NULL <ul> <li>transcript_stat:</li> </ul> Field Type Null Key Default Extra id int(11) NO PRI NULL auto_increment mean_coverage float NO NULL completeness_10 float YES NULL completeness_15 float YES NULL completeness_20 float YES NULL completeness_50 float YES NULL completeness_100 float YES NULL threshold int(11) YES NULL _incomplete_exons text YES NULL sample_id varchar(32) NO MUL NULL transcript_id varchar(32) NO MUL NULL"},{"location":"admin-guide/chanjo_coverage_integration/#chanjo-report","title":"chanjo-report","text":"<p>This package might be downloaded and installed via <code>git clone</code> and using <code>pip install</code> command (instructions here), but perhaps the easiest way to make sure that it will serve pages once the app is invoked by scout is to install it with this command:</p> <pre><code>pip install scout-browser[coverage]\n</code></pre> <p>Just make sure that both scout and chanjo-report are installed on the same virtual environment (if you are using one). Note that chanjo-report requires the package pymysql if it will be connecting to a MySQL database. So if it is not found in the environment you can install it with this command:</p> <pre><code>pip install pymysql\n</code></pre>"},{"location":"admin-guide/chanjo_coverage_integration/#enabling-the-chanjo-coverage-integration-in-scout","title":"Enabling the chanjo coverage integration in scout","text":"<p>In order to enable the support for the coverage report visualization in scout the configuration file named <code>config.py</code> under <code>scout/server</code> must be modified to include the following line:</p> <pre>\nSQLALCHEMY_DATABASE_URI = 'mysql+pymysql://username:password@host:port/chanjo4_demo'\n</pre> <p>The database URI provided in the line above refers to the MySQL database with the coverage data, so user and password are those used to connect to the database. Default database host and port are <code>localhost</code> and <code>3306</code> respectively. If your scout implementation is using another configuration file other than the default <code>config.py</code> then the database connection URI must be added to this file instead.</p> <p> Once all the above steps are executed you should see the \"Coverage report\" option on the left side bar under the scout case page. The buttons allow to generate HTML and PDF reports for the case samples.</p>"},{"location":"admin-guide/deleting-variants/","title":"Deleting Variants","text":"<p>The Scout command line provides instructions to remove variants from one or more cases using the <code>scout delete variants</code> command.</p>"},{"location":"admin-guide/deleting-variants/#usage","title":"Usage","text":"<p>To view available options, run:</p> <pre><code>scout delete variants --help\n</code></pre> <p>This will display:</p> <pre><code>Usage: scout delete variants [OPTIONS]\n\n  Delete variants for one or more cases.\n\nOptions:\n  -u, --user TEXT                 User running this command (email) [required]\n  -c, --case-id TEXT              Case ID (e.g., expertpoodle or helpedgoat)\n  -f, --case-file PATH            Path to file containing a list of case IDs\n  -i, --institute TEXT            Restrict to cases with the specified institute ID\n  --status [prioritized|inactive|active|solved|archived|ignored]\n                                  Restrict to cases with the specified status\n  --older-than INTEGER            Remove variants from cases older than (months)\n  --analysis-type [external|mixed|ogm|panel|panel-umi|unknown|wes|wgs|wts]\n                                  Restrict to cases with the specified analysis type\n  --rank-threshold INTEGER        Remove only variants with a rank lower than this threshold\n  --variants-threshold INTEGER    Remove variants only from cases containing at least this number of variants\n  --rm-ctg [cancer|cancer_sv|fusion|mei|outlier|snv|str|sv]\n                                  Remove only the specified variant categories\n  --keep-ctg [cancer|cancer_sv|fusion|mei|outlier|snv|str|sv]\n                                  Keep only the specified variant categories\n  --dry-run                       Perform a simulation without removing any variants\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"admin-guide/deleting-variants/#parameter-descriptions","title":"Parameter Descriptions","text":"Option Description <code>--user (-u)</code> Required. The email of the user executing the command. The user must exist in the Scout database. <code>--case-id (-c)</code> Optional. The case ID (e.g., <code>expertpoodle</code> or <code>helpedgoat</code>). <code>--case-file (-f)</code> Optional. Path to a file containing a list of case IDs. <code>--institute (-i)</code> Optional. Institute ID. Not required if a case ID is provided. <code>--status</code> Optional. Restrict removal to cases with the specified status (e.g., <code>solved</code>). <code>--older-than</code> Optional. Remove variants from cases older than the specified number of months (e.g., <code>12</code> for cases older than a year). <code>--analysis-type</code> Optional. Restrict removal to cases with the specified analysis type. <code>--rank-threshold</code> Optional. Remove only variants with a rank lower than this threshold. <code>--variants-threshold</code> Optional. Remove variants only from cases containing at least this number of variants. <code>--rm-ctg</code> Optional. Remove only the specified variant categories. Example: <code>--rm-ctg snv --rm-ctg sv</code>. <code>--keep-ctg</code> Optional. Keep only the specified variant categories. Cannot be used together with <code>--rm-ctg</code>. Use multiple times to specify more than one category. <code>--dry-run</code> Optional. Runs a simulation, showing an estimate of the number of variants to be removed without actually deleting anything. <p>Note: If you are removing variants from Scout for the first time, it is strongly recommended to run a simulation first using the <code>--dry-run</code> option.</p>"},{"location":"admin-guide/deleting-variants/#example-command","title":"Example Command","text":"<p>To simulate the deletion of variants that:</p> <ul> <li>Have a rank lower than <code>5</code></li> <li>Belong to cases with <code>wgs</code> analysis type</li> <li>Contain at least <code>100,000</code> variants</li> <li>Are older than <code>24</code> months</li> </ul> <p>Run:</p> <pre><code>scout delete variants --loglevel WARNING \\\n  -u youremail \\\n  --rank-threshold 5 \\\n  --analysis-type wgs \\\n  --variants-threshold 100000 \\\n  --older-than 24 \\\n  --dry-run\n</code></pre>"},{"location":"admin-guide/export/","title":"Exporting Data from Scout","text":"<p>There are many scenarios where users may want to export information from Scout. This document outlines the available export options and how to use them via the command line.</p>"},{"location":"admin-guide/export/#main-export-command","title":"Main <code>export</code> command:","text":"<pre><code>scout export\n</code></pre>"},{"location":"admin-guide/export/#available-export-commands","title":"Available Export Commands","text":"<p>Scout provides the following subcommands for data export:</p> <pre><code>Options:\n  --help  Show this message and exit.\n\nCommands:\n  cases        Export case data\n  database     Export the Scout MongoDB database\n  exons        Export exon regions\n  genes        Export genes\n  hpo_genes    Export HPO-associated genes\n  managed      Export managed variants\n  mt_report    Export a mitochondrial variants report\n  panel        Export gene panels\n  transcripts  Export transcripts\n  variants     Export variants\n  verified     Export verified variants\n</code></pre> <p>Each command is described in detail below.</p>"},{"location":"admin-guide/export/#exporting-cases-cases","title":"Exporting Cases (<code>cases</code>)","text":"<p>Export case information based on institute, status, or various filters. When exporting cases, it is possible to restrict the list of he exported data by adding optional parameters:</p> <pre><code>Options:\n  --case-id TEXT                  Case ID to search for\n  -i, --institute TEXT            Institute ID\n  -r, --reruns                    Include rerun-requested cases\n  -f, --finished                  Include archived or solved cases\n  --causatives                    Include cases with causative variants\n  --research-requested            Include cases with research requested\n  --rerun-monitor                 Include cases with continuous rerun monitoring\n  --is-research                   Include cases in research mode\n  -s, --status [prioritized|inactive|active|solved|archived|ignored]\n                                  Filter by case status\n  --within-days INTEGER           Filter by event date (days ago)\n  --json                          Output result in JSON format\n</code></pre> <p>The command's output is a list of case documents in the same format as they are saved into the database (dictionaries). By specifying the <code>--json</code>, documents are printed in json format.</p>"},{"location":"admin-guide/export/#exporting-the-database-database","title":"Exporting the Database (<code>database</code>)","text":"<p>Dump the entire Scout MongoDB database (or subsets).</p> <pre><code>Options:\n  -o, --out PATH       Output directory for the dump [default: ./dump]\n  --uri TEXT           MongoDB connection URI\n  --all-collections    Include variant collections\n  --help               Show this message and exit\n</code></pre>"},{"location":"admin-guide/export/#exporting-exons-exons","title":"Exporting Exons (<code>exons</code>)","text":"<p>Export all exons or limit to a specific gene. Default format is a .bed file, but they can be exported as a json file by using the <code>--json</code> option.</p> <pre><code>Options:\n  -b, --build [37|38]             Genome build version\n  -hgnc, --hgnc-id INTEGER        Filter by HGNC ID\n  --json                          Output in JSON format\n</code></pre> <p>Output Format: A tab-delimited list with the following header:</p> <pre><code>#Chrom  Start   End ExonId  Transcripts HgncIDs HgncSymbols\n</code></pre>"},{"location":"admin-guide/export/#exporting-genes-genes","title":"Exporting Genes (<code>genes</code>)","text":"<p>Export all genes from the database. Default format is a .bed file, but they can be exported as a json file by using the <code>--json</code> option.</p> <pre><code>Options:\n  -b, --build [37|38|GRCh38]      Genome build version [default: 37]\n  --json                          Output in JSON format\n</code></pre> <p>Output Format: A tab-delimited list with the following header:</p> <pre><code>#Chromosome Start   End Hgnc_id Hgnc_symbol\n</code></pre>"},{"location":"admin-guide/export/#exporting-hpo-associated-genes-hpo_genes","title":"Exporting HPO-Associated Genes (<code>hpo_genes</code>)","text":"<p>Export HGNC IDs for all genes associated with a given HPO term.</p> <p>Example Usage:</p> <pre><code>scout export hpo_genes HP:0000371\n</code></pre> <p>Result:</p> <pre><code>#Gene_id    Count\n9986    1\n9987    1\n9988    1\n6193    1\n7067    1\n</code></pre>"},{"location":"admin-guide/export/#exporting-managed-variants-managed","title":"Exporting Managed Variants (<code>managed</code>)","text":"<p>Export managed variants in VCF format.</p> <p>Example Output (VCF):</p> <pre><code>##fileformat=VCFv4.2\n##INFO=&lt;ID=END,Number=1,Type=Integer,Description=\"End position of the variant\"&gt;\n##INFO=&lt;ID=TYPE,Number=1,Type=String,Description=\"Type of variant\"&gt;\n#CHROM  POS ID  REF ALT QUAL    FILTER  INFO\n1   1295250 .   C   T   .   .   END=1295250;TYPE=SNV\n..\n</code></pre>"},{"location":"admin-guide/export/#exporting-mitochondrial-reports-mt_report","title":"Exporting Mitochondrial Reports (<code>mt_report</code>)","text":"<p>Export a mitochondrial report for a given case.</p> <pre><code>Options:\n  --case_id TEXT    Required case ID\n  --outpath TEXT    Path to the output file\n  --test            Run in test mode\n</code></pre>"},{"location":"admin-guide/export/#exporting-gene-panels-panel","title":"Exporting Gene Panels (<code>panel</code>)","text":"<p>Export gene panels with clinical annotation in BED format.</p> <pre><code>Options:\n  -b, --build [37|38|GRCh38]      Genome build version [default: 37]\n  --version FLOAT                 Specify panel version\n  --bed                           Export in BED-like format\n</code></pre> <p>Output Header (default format):</p> <pre><code>#hgnc_id    symbol  disease_associated_transcripts  reduced_penetrance  mosaicism   database_entry_version  inheritance_models  custom_inheritance_models   comment\n</code></pre>"},{"location":"admin-guide/export/#exporting-transcripts-transcripts","title":"Exporting Transcripts (<code>transcripts</code>)","text":"<p>Export a list of transcripts in BED format. Use the following command: <code>scout export transcripts</code></p> <pre><code>Options:\n  -b, --build [37|38|GRCh38]      Genome build version [default: 37]\n</code></pre>"},{"location":"admin-guide/export/#exporting-causative-variants-causatives-alias-variants","title":"Exporting Causative Variants (<code>causatives</code>, alias: <code>variants</code>)","text":"<p>Export causative variants for a case or an institute. Output is VCF by default, or JSON if specified.</p> <pre><code>Options:\n  -c, --collaborator TEXT         Collaborator ID [default: cust000]\n  -d, --document-id TEXT          Search for a specific variant\n  --case-id TEXT                  Case ID to search for\n  --json                          Output in JSON format\n</code></pre>"},{"location":"admin-guide/export/#exporting-verified-variants-verified","title":"Exporting Verified Variants (<code>verified</code>)","text":"<p>Similar to the <code>variants</code> export, but limited to verified variants. Output is VCF by default, or JSON if specified.</p> <pre><code>Options:\n  -c, --collaborator TEXT         Collaborator ID [default: cust000]\n  -d, --document-id TEXT          Search for a specific variant\n  --case-id TEXT                  Case ID to search for\n  --json                          Output in JSON format\n</code></pre>"},{"location":"admin-guide/genes/","title":"Genes, transcripts and exons","text":"<p>As described in the user guide, Scout creates it's own definition of genes and transcripts by connecting information from some different sources. In the world of bioinformatics information is often collected from a wide variety of sources that may be inconsistent. Therefore we try to create our own definitions as far as possible and then map the information back. The base for gene information is collected from HGNC since it is a well curated source of gene information. Coordinates for genes, transcripts and exons are collected from Ensembl biomart. Links to disease phenotypes are collected from OMIM, incomplete penetrance information is collected from HPO and intolerance to variation (pLI-scores) from ExAC.</p>"},{"location":"admin-guide/genes/#update-genes-and-transcripts","title":"Update genes and transcripts","text":"<p>To update the gene definitions use command</p> <pre><code>scout update genes\n</code></pre> <p>When running this command the latest version of all the above described sources is fetched and that database gets updated.</p>"},{"location":"admin-guide/genes/#updateload-exons","title":"Update/load exons","text":"<p>The exons are fetched from ensembl through the ensembl biomart. To load or update the exon information please run command</p> <pre><code>scout load exons\n</code></pre> <p>where you can specify what build to use, default is <code>37</code>.</p> <p>There has been some problems to download from the ensembl biomart for build <code>38</code>, in this case one can download a flatfile from the ensembl martview and selecting:</p> <ul> <li>database: ensembl genes (current version)</li> <li>dataset: Human Genes (current version)</li> <li>Filters:<ul> <li>Region: Chromosomes/scaffold (Choose 1-22, X, Y and MT)</li> </ul> </li> <li>Attributes:<ul> <li>Features: Unbox everything</li> <li>Structures: GENE (Choose Gene stable ID, Transcript stable ID, Strand, 5'UTR start, 5'UTR end,                     3'UTR start, 3'UTR end)</li> <li>Structures: EXON (Choose Exon region start, Exon region end, Exon rank in transcript, Exon stable ID)</li> </ul> </li> </ul> <p>Download this file and use command</p> <pre><code>scout load exons --exons-file path/to/mart_export.txt --build 38\n</code></pre>"},{"location":"admin-guide/gens_integration/","title":"Gens integration","text":"<p>Gens is a interactive web-based tool to visualize copy number profiles using wgs data. It display the normalized read depth and alternative allele frequency in relation to transcripts, variants and previously annotated marker panels.</p>"},{"location":"admin-guide/gens_integration/#setup","title":"Setup","text":"<p>To avoid dependency conflicts Gens should be installed in an environment separate from scout. Install Gens according to the instructions on the tool homepage.</p>"},{"location":"admin-guide/gens_integration/#config-parameters","title":"Config Parameters","text":"<ul> <li><code>GENS_HOST</code>: The IP or hostname of the server where Gens is hosted.</li> <li><code>GENS_PORT</code>: Port number where gens is hosted (optional).</li> </ul>"},{"location":"admin-guide/gens_integration/#configure-gens-integration","title":"Configure Gens integration","text":"<p>In the scout config <code>config.py</code> provide the connection settings like:</p> <pre><code>GENS_HOST = \"127.0.0.1\"\nGENS_PORT = 5001\n</code></pre>"},{"location":"admin-guide/gens_integration/#result","title":"Result","text":"<p>Now scout will display a button called \"GENS\" or \"Show CN profile\" in the case view and in the variant view for structural variants.</p>"},{"location":"admin-guide/hpo/","title":"HPO terms","text":"<p>Scout stores HPO terms that are defined in the Human Phenotype Ontology.</p>"},{"location":"admin-guide/hpo/#usage","title":"Usage","text":"<p>The terms are added on case level to describe the phenotype. There is also an option to use phenotype groups. The idea behind the groups are that cases can be ordered when performing meta analysies</p>"},{"location":"admin-guide/hpo/#update","title":"Update","text":"<p>To update the HPO terms use command</p> <pre><code>scout update hpo\n</code></pre> <p>When running this command the latest version of the hpo terms are fetched and loaded into scout</p>"},{"location":"admin-guide/igv-settings/","title":"IGV browser settings","text":""},{"location":"admin-guide/igv-settings/#igv-browser-settings","title":"IGV browser settings","text":""},{"location":"admin-guide/igv-settings/#default-tracks","title":"Default tracks","text":"<p>The default file formats for viewing alignments in Scout is BAM or CRAM. Scout utilizes the embeddable interactive genome visualization tool igv.js to display sample tracks and the following default tracks, available in the IGV browser by default for both genome builds GRCh37 (hg19) and GRCh38 (hg38):</p> <ul> <li>Reference genome track</li> <li>Genes track</li> <li>ClinVar SNVs track</li> <li>ClinVar CNVs track</li> </ul> <p>Reference genome and genes track are collected from the Broad Institute Amazon S3 storage, while the ClinVar tracks are available in the UCSC Genomics Institute Sequence and Annotation Downloads</p>"},{"location":"admin-guide/igv-settings/#custom-tracks","title":"Custom tracks","text":"<p>One or more custom tracks could be additionally loaded and visualized in the Scout IGV browser by including them in the general Scout configuration file. To add a public track of type \"variant\" to Scout use the following example line:</p> <pre><code>CLOUD_IGV_TRACKS = [\n    {\n        \"name\": \"custom_public_bucket\",\n        \"access\": \"public\",\n        \"tracks\": [\n            {\n                \"name\": \"Display name of track\",\n                \"type\": \"variant\",\n                \"format\": \"vcf\",\n                \"build\": \"37\", # or \"38\"\n                \"url\": \"url_to_resource\",\n                \"indexURL\": \"url_to_resource_index\",\n            }\n        ],\n    },\n]\n</code></pre>"},{"location":"admin-guide/indexes/","title":"Indexes","text":""},{"location":"admin-guide/indexes/#indexes","title":"Indexes","text":"<p>The indexes that are used is displayed in <code>scout/constants/indexes.md</code>. If indexes are to be updated, added or removed this is the place to modify.</p> <p>To update indexes simply run the cli command <code>scout index</code>.</p> <p>Existing indexes can be viewed by <code>scout view index</code>.</p>"},{"location":"admin-guide/institute/","title":"Institutes","text":""},{"location":"admin-guide/institute/#institutes","title":"Institutes","text":"<p>Institutes are objects that group users and cases. Users belong to an institute and in this way permissions to view cases can be handled. Cases are always \"owned\" by an institute and thereby grants access for all users within that institute to view and work with a case. Cases can be shared with other institutes.</p> <p>Institutes have a unique internal id and a display name that is what the users see when browsing. One or several users can be Sanger recipients for a institute which means that when a user is pushing the  \"Order Sanger\" button on the variant page an email is sent to all Sanger recipients with relevant information, such as coordinates for a variant.</p>"},{"location":"admin-guide/institute/#updating-institutes","title":"Updating institutes","text":"<p>All variables except <code>'internal_id'</code> can be updated for a institute.</p> <p>Please run <code>scout update institute</code> for more information.</p> <p>Users can also update some settings for their institute, eg phenotype groups on the Institute Settings page - see user guide - Institute settings.</p>"},{"location":"admin-guide/institute/#phenotype-groups","title":"Phenotype Groups","text":"<p>Phenotype groups is a feature on institute level. Each institute can have their own set of phenotype groups. There is a default set of phenotype groups that all institutes will have access to, those are described in <code>scout.constants.phenotype</code>. To overwrite or add phenotype groups use the CLI function <code>scout update groups</code>. If specifying groups in a file, use a <code>csv</code> file where column one holds HPO-ids on the format <code>HP:0000001</code>. A second column is optional and can include abbreviations for the phenotype groups.</p> <p>Phenotype groups can then be assigned to a case in a Scout load config, but be advised that the term must first be defined as described previously in this section.</p> <pre><code>$scout update groups --help\nUsage: scout update groups [OPTIONS] INSTITUTE_ID\n\n  Update the phenotype for a institute. If --add the groups will be added to\n  the default groups. Else the groups will be replaced.\n\nOptions:\n  -p, --phenotype-group TEXT     Add one or more phenotype groups to institute\n  -a, --group-abbreviation TEXT  Specify a phenotype group abbreviation\n  -f, --group-file FILENAME      CSV file with phenotype groups\n  -a, --add                      If groups should be added instead of\n                                 replacing existing groups\n  --help                         Show this message and exit.\n</code></pre>"},{"location":"admin-guide/load-config/","title":"The Load Config File","text":"<p>A case and its individuals (or samples, in cancer track) can be uploaded into Scout using specially formatted .yaml config files. Config files contain information about the analysis, panels used, path to VCF and eventual alignment files and more. The following template illustrates the basic structure of the .yaml config file:</p> <p>The format is Yaml.</p> <p>Example configuration files are found here: <code>&lt;scout root dir&gt;/scout/demo/643594.config.yaml</code> or on Github.</p>"},{"location":"admin-guide/load-config/#deprecation-warnings","title":"Deprecation Warnings:","text":"<p><code>bam_file</code>, <code>bam_path</code> and <code>alignment_path</code> are redundant in internal usage. Future versions of Scout will only support <code>alignment_path</code>.</p>"},{"location":"admin-guide/load-config/#configuration-parameters","title":"Configuration Parameters","text":"<p>Below are available configuration parameters for a Scout case. Names marked with asterix (*) are mandatory.</p> <ul> <li>analysis_date(*) Datetime Time for analysis in datetime format. Defaults to time of uploading. Example <code>2016-10-12 14:00:46</code>.</li> <li>cnv_report String Path to the CNV report file.</li> <li>coverage_qc_report String Path to static coverage and QC report file.</li> <li>cohorts List of strings Meta organising study participants or cases.</li> <li>collaborators List of strings List of collaborators.</li> <li>coverage_qc_report String Path to HTML file with coverage and QC report.</li> <li>default_gene_panels List of strings List of default gene panels. Variants from the genes in the gene panels specified will be shown when opening the case in scout.</li> <li>delivery_report String: Path to HTML delivery report.</li> <li>exe_ver: Pipeline detailed software versions (YAML)</li> <li>family(*) String Unique ID of the case.</li> <li>family_name String Optional name of the case.</li> <li>gene_fusion_report String Path to a static gene fusion report produced by Arriba containing only clinical fusions (a subset of all detected fusions).</li> <li>gene_fusion_report_research String Path to a static gene fusion report produced by Arriba containing all detected fusions.</li> <li>gene_panels List of strings List of gene panels. Specifies what panels the case has been run with.</li> <li>human_genome_build String Version of genome version used, 37 or 38. Defaults to 37.</li> <li>lims_id String Case ID in Lims</li> <li>madeline String Path to a madeline pedigree file in XML format.</li> <li>multiqc String Path to a multiqc report with arbitrary information.</li> <li>multiqc_rna String Path to a nf-core/rnafusion multiqc report with arbitrary information.</li> <li>omics_files List List of multiomics results files for the case:<ul> <li>fraser String Path to TSV file to parse WTS DROP FRASER splice outlier omics variants as produded by e.g. Tomte</li> <li>outrider String Path to TSV file to parse WTS DROP OUTRIDER expression outlier omics variants as produded by e.g. Tomte</li> </ul> </li> <li>owner(*) String Institute who owns current case. Must refer to existing institute.</li> <li>peddy_check String Path to a peddy ped check file.</li> <li>peddy_ped String Path to a peddy ped file with an analysis of the pedigree based on variant information.</li> <li>peddy_sex String Path to a peddy ped sex check file.</li> <li>phenotype_terms List of strings List of phenotype terms.</li> <li>rank model version String Which rank model that was used when scoring the variants.</li> <li>rank_score_threshold Float Only include variants with a rank score above this threshold.</li> <li>reference_info: Pipeline detailed reference file versions (YAML)</li> <li>RNAfusion_inspector String Path to HTML nf-core/rnafusion inspector report containing only clinical fusions (a subset of all detected fusions).</li> <li>RNAfusion_inspector_research String Path to HTML nf-core/rnafusion inspector report containing all detected fusions.</li> <li>RNAfusion_report String Path to HTML nf-core/rnafusion report containing only clinical fusions (a subset of all detected fusions).</li> <li>RNAfusion_report_research String Path to HTML nf-core/rnafusion report containing all detected fusions.</li> <li>rna_human_genome_build String Version of reference genome used for RNA components of build. \"37\" or \"38\", default \"38\".</li> <li>rna_delivery_report String: Path to HTML RNA delivery report.</li> <li>samples List List of samples included in the case:<ul> <li>alignment_path String Path to BAM/CRAM file to view alignments.</li> <li>analysis_type String Specifies the analysis type for the sample. Options: {wgs, wes, panel, unknown, external}.</li> <li>assembly_alignment_path String Path to BAM/CRAM file to view de novo assembly alignments.</li> <li>bam_file String Path to BAM/CRAM file to view alignments WARNING: Soon to be deprecated, use alignment_path.</li> <li>bam_path String Path to BAM/CRAM file to view alignments WARNING: Soon to be deprecated, use alignment_path.</li> <li>capture_kit String Exome specifies the capture kit.</li> <li>chromograph_images List<ul> <li>autozygous String Path to file.</li> <li>coverage String Path to file.</li> <li>upd_regions String Path to file.</li> <li>upd_sites String Path to file.</li> </ul> </li> <li>confirmed_parent Bool True if parent confirmed.</li> <li>d4_path String Path to .d4 file. Required for Chanjo2 integration</li> <li>expected_coverage Int The level of expected coverage.</li> <li>father String/Int Sample ID for father or 0.</li> <li>hrd Int Homologous recombination deficiency.</li> <li>is_sma Bool/None if SMA status determined - None if not done.</li> <li>is_sma_carrier Bool/None  # True / False if SMA carriership determined - None if not done.</li> <li>minor_allele_frequency_wig String Path to minor allele frequency bigwig Reference.</li> <li>mitodel String Path to mitodel file.</li> <li>mother String/Int Sample ID for mother or 0.</li> <li>msi Int Microsatellite instability [0-60].</li> <li>mt_bam String Path to the reduced mitochondrial BAM/CRAM alignment file.</li> <li>paraphase_alignment_path String Path to BAM/CRAM file to view Paraphase alignments Reference.</li> <li>phenotype(*) String Specifies the affection status {affected, unaffected, unknown}.</li> <li>reviewer List Reference</li> <li>alignment String Path to BAM/CRAM file to view STR alignments</li> <li>alignment_index String Path to BAM/CRAM index file to view STR alignments</li> <li>trgt Bool Boolean indicating if individual has trgt data (indicates alignment is spanning, catalog is BED)</li> <li>vcf String Path to STR VCF file to view STR alignments</li> <li>catalog String Path or URL to REViewer catalog JSON or BED file to view STR alignments</li> <li>reference String Path or URL for REViewer to reference sequence for the individual STR alignment</li> <li>rna_alignment_path String Path to RNA alignment file (BAM/CRAM)</li> <li>rna_coverage_bigwig String Path to coverage islands file generated</li> <li>omics_sample_id String Sample ID for RNA, as in outliers files</li> <li>rhocall_bed String Path to BED file to view alignments Reference.</li> <li>rhocall_wig String Path to WIG file to view alignments Reference.</li> <li>samlple_id(*) String Identifyer for a sample.</li> <li>sample_name: String Name of sample.</li> <li>sex (*) String One of: {male, female, unknown}. Sex of the sample in human readable format.</li> <li>smn1_cn Int Copynumber.</li> <li>smn2_cn Int Copynumber.</li> <li>smn2delta78_cn Int Copynumber.</li> <li>splice_junctions_bed String Path to indexed junctions .bed.gz file</li> <li>subject_id String Individual identifier - multiple samples could belong to the same individual</li> <li>tiddit_coverage_wig or coverage_wig String Path to WIG file to view alignment coverage overview from e.g. Reference or Reference.</li> <li>tissue_type String Sample tissue origin i.e. blood, muscle.</li> <li>tmb Int Tumor mutational burden [0, 1000] (tumor case only).</li> <li>tumor_purity Float Purity of tumor sample [0.1, 1.0] (tumor case only).</li> <li>tumor_type String Type of tumor (tumor case only).</li> <li>upd_regions_bed String Path to BED file to view alignments Reference.</li> <li>upd_sites_bed String Path to BED file to view alignments Reference.</li> <li>vcf2cytosure String Path to CGH file to allow download per individual. Such SV files can be visualized using standard arrayCGH analysis tools. See vcf2cytosure.</li> </ul> </li> <li>smn_tsv String Path to an SMN TSV file.</li> <li>somalier_ancestry String Path to a Somalier ancestry tsv file.</li> <li>somalier_pairs String Path to a Somalier pairs tsv file.</li> <li>somalier_samples String Path to a Somalier samples tsv file.</li> <li>status String Any of the following strings: 'prioritized', 'inactive', 'ignored', 'active', 'solved' or 'archived'.</li> <li>synopsis String Synopsis of case.</li> <li>sv_rank_model_version String Rank model that was used when scoring the variants.</li> <li>track String Type of track: {\"rare\", \"cancer\"}. Default: \"rare\".</li> <li>sv_rank_model_version String SV rank model version used when scoring SV variants.</li> <li>vcf_cancer String Path to canver VCF file (tumor case only).</li> <li>vcf_cancer_research String Path to VCF file with all variants (tumor case only).</li> <li>vcf_snv String Path to SNV VCF file  containing only clinical variants (a subset of all variants).</li> <li>vcf_snv_research String Path to VCF file with all variants.</li> <li>vcf_sv String Path to SV VCF file containing only clinical variants (a subset of all variants).</li> <li>vcf_sv_research String Path to VCF file with all SV variants.</li> </ul>"},{"location":"admin-guide/load-config/#example-minimal-config","title":"Example Minimal config","text":"<p>Here is an example of a minimal load config:</p> <pre><code>---\n\nowner: cust004\n\nfamily: '1'\nsamples:\n  - analysis_type: wes\n    sample_id: NA12878\n    capture_kit: Agilent_SureSelectCRE.V1\n    father: 0\n    mother: 0\n    sample_name: NA12878\n    phenotype: affected\n    sex: male\n    expected_coverage: 30\n\nvcf_snv: scout/demo/643594.clinical.vcf.gz\n</code></pre>"},{"location":"admin-guide/loading-case/","title":"Loading Scout cases","text":"<p>When loading a case into scout it is possible to use either a config file or to specify parameters on the command line.</p>"},{"location":"admin-guide/loading-case/#scout-load-config","title":"Scout Load Config","text":"<p>The loading config is a <code>.yaml</code> file and can include all the necessary information to scout. Command line options will overload information in the config file. For a complete spec of the config file see load config</p> <p>An example file, (this file is located in <code>scout/demo/643594.config.yaml</code>):</p> <pre><code>---\n\nowner: cust000\n\nfamily: '643594'\nsamples:\n  - analysis_type: wes\n    sample_id: ADM1059A2\n    capture_kit: Agilent_SureSelectCRE.V1\n    father: ADM1059A1\n    mother: ADM1059A3\n    sample_name: NA12882\n    phenotype: affected\n    sex: male\n    bam_path: path/to/bam\n    expected_coverage: 30\n  - analysis_type: wes\n    sample_id: ADM1059A1\n    capture_kit: Agilent_SureSelectCRE.V1\n    father: '0'\n    mother: '0'\n    sample_name: NA12877\n    phenotype: unaffected\n    sex: male\n    bam_path: path/to/bam\n    expected_coverage: 30\n  - analysis_type: wes\n    sample_id: ADM1059A3\n    capture_kit: Agilent_SureSelectCRE.V1\n    father: '0'\n    mother: '0'\n    sample_name: NA12878\n    phenotype: unaffected\n    sex: female\n    bam_path: path/to/bam\n    expected_coverage: 30\n\nvcf_snv: scout/demo/643594.clinical.vcf.gz\nvcf_sv: scout/demo/643594.clinical.SV.vcf.gz\nvcf_snv_research: scout/demo/643594.research.vcf.gz\nvcf_sv_research: scout/demo/643594.research.SV.vcf.gz\n\nmadeline: scout/demo/madeline.xml\ndefault_gene_panels: [panel1]\ngene_panels: [panel1]\n\n# metadata\nrank_model_version: '1.12'\nsv_rank_model_version: '1.5'\nrank_score_threshold: -100\nanalysis_date: 2016-10-12 14:00:46\nhuman_genome_build: '37'\n\n</code></pre>"},{"location":"admin-guide/loading-case/#adding-custom-reports-to-the-case","title":"Adding custom reports to the case","text":"<p>A number of case-associated reports (supported formats: HTML, PDF, Excel) can be loaded and displayed/downloaded on the case sidebar page:</p> <p></p> <p>While case General report and mtDNA report (the latter only available for non-cancer cases) are generated the moment a user clicks on their link, other types of reports are pre-existing documents that can be associated with the case immediately when it is loaded in Scout (by adding them to the case load config file) or later, using the command line.</p> <p>Available types or case reports: - cnv: Copy Number Variants Report (PDF), available only for cancer cases - cov_qc: Coverage QC Report (HTML), available only for cancer cases - delivery: Delivery Report (HTML) - exe_ver: Pipeline detailed software versions (YAML) - gene_fusion: A report (PDF) showing gene fusions from RNA-Seq data, analysis limited to the clinical gene list - gene_fusion_research: A report (PDF) showing gene fusions from RNA-Seq data, performed on all genes - multiqc: MultiQC Report (HTML) - multiqc_rna: MultiQC RNA report (HTML) - reference_info: Pipeline detailed reference file versions (YAML) - RNAfusion_inspector: nf-core rnafusion RNA Fusion Inspector file (HTML) - RNAfusion_inspector_research: nf-core rnafusion research RNA Fusion Inspector file (HTML) - RNAfusion_report: nf-core rnafusion RNA fusion report file (HTML) - RNAfusion_report_research: nf-core rnafusion research RNA fusion report file (HTML)</p> <p>All these reports reflect the items present in this dictionary</p> <p>Use the following command to load/update a report for a pre-existing case:</p> <pre><code>scout load report -t &lt;report-type&gt;\n\nUsage: scout load report [OPTIONS] CASE_ID REPORT_PATH\n\n  Load a report document for a case.\n\nOptions:\n  -t, --report-type [delivery|cnv|cov_qc|exe_ver|multiqc|multiqc_rna|gene_fusion|gene_fusion_research|reference_info|RNAfusion_inspector|RNAfusion_inspector_research|RNAfusion_report|RNAfusion_report_research]\n                                  Type of report  [required]\n</code></pre>"},{"location":"admin-guide/loading-case/#adding-custom-images-to-a-case","title":"Adding custom images to a case","text":"<p>Scout can display custom images as new panels on the case view or variant view which could be used to display analysis results from a separate pipeline. The custom images are defined in the case config file and stored in the database. Scout currently supports     <code>gif</code>, <code>jpeg</code>, <code>png</code> and <code>svg</code> images.</p> <p>The syntax for loading an image differed depending on where they are going to be displayed. Images on the caes view can be grouped into different groups that are displayed as accordion-type UI elemment named after the group. Images can be associated with stru    ctural variants with a given hgnc symbol.</p> <p>The fields <code>title</code>, <code>description</code> and <code>path</code> are mandatory regarless of location. The image size can be defined with the optional parameters <code>width</code> and <code>height</code>. If you dont specify a unit its going to default to use pixels as unit. Note: adding images lar    ger than 16mb are not reccomended as it might degrade the performance.</p> <pre><code>\ncustom_images:\n  case_images:\n    group_one:\n      - title: &lt;string&gt; title of image [mandatory]\n        description: &lt;string&gt; replacement description of image [mandatory]\n        width: &lt;string&gt; 500px\n        height: &lt;string&gt; 100px\n        path: &lt;string&gt; scout/demo/images/custom_images/640x480_one.png [mandatory]\n      - title: &lt;string&gt; A jpg image [mandatory]\n        description: &lt;string&gt; A very good description [mandatory]\n        width: &lt;string&gt; 500px\n        path: &lt;string&gt; scout/demo/images/custom_images/640x480_two.jpg [mandatory]\n    group_two:\n      - title: &lt;string&gt; An SVG image [mandatory]\n        description: &lt;string&gt; Another very good description\n        path: &lt;string&gt; scout/demo/images/custom_images/640x480_three.svg [mandatory]\n  str_variants_images:\n    - title: &lt;string&gt; title of image [mandatory]\n      str_repid: AFF2 [mandatory]\n      description: &lt;string&gt; replacement description of image [mandatory]\n      width: &lt;string&gt; 500px\n      height: &lt;string&gt; 100px\n      path: &lt;string&gt; scout/demo/images/custom_images/640x480_one.png [mandatory]\n    - title: &lt;string&gt; A jpg image [mandatory]\n      str_repid: AFF2 [mandatory]\n      description: &lt;string&gt; A very good description [mandatory]\n      width: &lt;string&gt; 500px\n      path: &lt;string&gt; scout/demo/images/custom_images/640x480_two.jpg [mandatory]\n\n</code></pre>"},{"location":"admin-guide/loading-case/#loading-multiple-images-with-wildcards","title":"Loading multiple images with wildcards","text":"<p>If you have multiple images you would like to associate with a different variants you can use wildcards to reduce the number of lines in the load config file. For example, you have two images <code>640x480_AR.svg</code> and <code>640x480_ATN1.svg</code> that should be attaced to variants in replicions AR and ATN1. Instead of writing a long list with one entry per image you could use wildcards to flag which parts of the path name that corresponds to the repid. Wildcards are a variable name surrounded by curly brackets, <code>{VARIALBE_NAME}</code>. The varible name can contain letters, numbers and underscore and score.</p> <p>When the images are loaded into the database the algorithm finds files matching the pattern and substitutes the wildcard with the sting. In other words will this enable the user to extract information encoded in the path and populate the configuration with it.</p> <p>Given the two files above will this configuration</p> <pre><code>custom_images:\n  str_variants_images:\n    - title: &lt;string&gt; A jpg image {REPID} [mandatory]\n      str_repid: {REPID} [mandatory]\n      path: &lt;string&gt; scout/demo/images/custom_images/640x480_{REPID}.jpg [mandatory]\n</code></pre> <p>be equivalent to</p> <pre><code>custom_images:\n  str_variants_images:\n    - title: &lt;string&gt; An image of AR\n      str_repid: AR\n      path: &lt;string&gt; scout/demo/images/custom_images/640x480_AR.jpg\n    - title: &lt;string&gt; An image of ATN1\n      str_repid: ATN1\n      path: &lt;string&gt; scout/demo/images/custom_images/640x480_ATN1.jpg\n</code></pre>"},{"location":"admin-guide/loading-case/#load-case-from-cli-without-config","title":"Load case from CLI without config","text":"<p>Cases can be loaded without config file, in that case the user needs to specify a ped file and optionally one or several VCF files. An example could look like</p> <pre><code>scout load case --ped path/to/file.ped --vcf-snv path/to/file.vcf\n</code></pre> <p>Please use</p> <pre><code>scout load case --help\n</code></pre> <p>for more instructions</p>"},{"location":"admin-guide/loading-institutes/","title":"Loading Institutes in Scout","text":"<p>To load a institute into scout use the command <code>scout load institute</code>. As mentioned in the user guide an institute has to have a unique internal id, this is specified on the command line with <code>-i/--internal-id</code>. Also a display name could be used if there is a need for that: specify with <code>-d/--display-name</code>. If no display name is chosen it will default to internal id. Note that internal id is unique.</p>"},{"location":"admin-guide/loading-users/","title":"Loading Scout users","text":"<p>To load a user into scout use the command <code>scout load user</code>. A user has to:</p> <ul> <li>belong to an institute</li> <li>have a name</li> <li>have a email adress</li> </ul> <p>An example could look like:</p> <pre><code>scout load user --institute-id cust000 --user-name \"Clark Kent\" --user-mail clark@mail.com\n</code></pre> <p>See <code>scout load user --help</code> or the user guide user section for more information.</p>"},{"location":"admin-guide/loading-users/#managing-users-from-the-web-interface","title":"Managing users from the web interface","text":"<p>Since Scout v4.104, it is also possible for an admin user to add, edit, or remove users directly from the general Users page in the web interface.</p> <p>\u26a0\ufe0f Note: This page is accessible via the global users page, accessible from the top-left dropdown menu on the top bar and the top level institutes overview sidebar menu. Do not confuse it with the Users link on the institute level sidebar menu, which only lists users for a specific institute.</p> <p></p>"},{"location":"admin-guide/loading-variants/","title":"Variant loading","text":"<p>This document will describe the process of variant loading, how it is done and why.</p>"},{"location":"admin-guide/loading-variants/#loading","title":"Loading","text":"<p>Variants are loaded as part of the case load process. The location of variant call format files (VCF) is given in the case load config, and are parsed using CyVCF. Variants can be annotated to display a lot more useful information beyond genomics nucleotide change. See Annotations.</p>"},{"location":"admin-guide/loading-variants/#rank-score","title":"Rank Score","text":"<p>In Scout rank score is a central theme. Rank Scores is a estimation on how potentially dangerous a variant is, similar to the CADD score with the intention of work with all types of variation. The uploading of variants is based on a rank score threshold, this is to avoid to clog the database with millions of variants that we at the moment have a hard time to say anything about.</p> <p>The rank score is a summary of the annotations of a variant. Rank scores are calculated and annotated by GENMOD</p>"},{"location":"admin-guide/loading-variants/#clinical-and-research-variants","title":"Clinical and Research variants","text":"<p>The system is designed to accept <code>clinical</code> and <code>research</code> level variants in separate files. Clinical variants are accompanied with clinical gene panels defined on the case. This separation further lowers the risk of incidental findings, and clarifies when genetic research is performed in contrast to clinical testing or screening.</p>"},{"location":"admin-guide/loading-variants/#variant-category","title":"Variant category","text":"<p>A variant belongs to a category, and is displayed in distinct variantS and variant views accordingly. Categories include \"snv\", \"sv\", \"mei\", \"str\", \"cancer\" and \"cancer_sv\". Variants of different category are loaded from different VCF files.</p>"},{"location":"admin-guide/loading-variants/#omics-variants","title":"OMICS variants","text":"<p>Scout can load OMICS variants, similar to variants but from other sources than genomic DNA sequencing, e.g. DROP WTS expression outliers. These are displayed in a different view, similar to the DNA variants.</p>"},{"location":"admin-guide/loading-variants/#loading-variants-for-a-preexisting-case-without-a-load-config","title":"Loading variants for a preexisting case without a load config","text":"<p>Note that the files have to be linked with the case - if they are not use <code>scout update case</code>.</p> <pre><code>scout update case -n case_name -i institue --vcf-str /my_pipeline/my_case/my_case.str.vcf.gz\nscout load variants --str-clinical\n</code></pre>"},{"location":"admin-guide/loading-variants/#loading-omics-variants-for-a-preexisting-case-without-a-load-config","title":"Loading OMICS variants for a preexisting case without a load config","text":"<p>Note that the files have to be linked with the case - if they are not use <code>scout update case</code>. If the sample IDs in your OMICS files do not correspond to your DNA sample IDs, and they are not provided in the case config, use <code>scout update individual</code> to set the <code>omics_sample_id</code> for each of the individuals.</p> <pre><code>scout update individual -c case_id -n individual_display_name omics_sample_id my_rna_sample_id\nscout update case -n case_name -i institue --fraser /my_pipeline/my_case/my_rna_sample.drop.fraser.tsv --outrider /my_pipeline/my_case/my_rna_sample.drop.outrider.tsv\nscout load variants --outlier\n</code></pre>"},{"location":"admin-guide/login-system/","title":"Setting up a user login system","text":"<p>Scout currently supports 4 types of login systems:   - keycloak authentication via OpenID Connect   - Google authentication via OpenID Connect   - LDAP authentication   - Simple authentication using userid</p> <p>Login systems are mutually exclusive so when you choose a system, it will become be the only way all users will have access to the Scout app.</p>"},{"location":"admin-guide/login-system/#keycloak-openid-connect-login-system","title":"Keycloak OpenID Connect Login System","text":"<p>If your organization uses Keycloak as a login provider, Scout can be configured to authenticate users (who are already registered in the Scout database) using Keycloak in a few simple steps.</p> <p>A small tutorial with basic settings (intended for testing only, not for production) is available on this page.</p> <p>Assuming a Keycloak realm containing users is available, you can edit the Scout configuration file to enable this authentication method:</p> <pre><code>KEYCLOAK = dict(\n    client_id=\"&lt;name_of_client&gt;\",\n    client_secret=\"secret\", # available on Keycloak's admin console, under client credentials\n    discovery_url=\"http://&lt;url_to_keycloak_instance&gt;/realms/&lt;name_of_realm&gt;/.well-known/openid-configuration\",\n    logout_url=\"http://&lt;url_to_keycloak_instance&gt;/realms/&lt;name_of_realm&gt;/protocol/openid-connect/logout\",\n)\n</code></pre> <p>Please note: For this setup to work, the Keycloak client must include the following parameter:</p> <p><code>Valid redirect URIs: \"http://&lt;scout-uri&gt;/authorized\"</code></p> <p>Users attempting to log in to Scout will be redirected to the Keycloak instance for authentication.</p>"},{"location":"admin-guide/login-system/#google-openid-connect-login-system","title":"Google OpenID Connect login system","text":"<p>Scout supports Google account login via OpenID Connect. Before setting up the Google authentication system in Scout it is necessary to register the Scout application in the Google API console and obtain OAuth 2.0 credentials. A detailed guide on how to do this is available at this link.</p> <p>In brief:</p>"},{"location":"admin-guide/login-system/#create-credentials-for-your-demo-app","title":"Create credentials for your demo app:","text":"<ul> <li> <p>Go to this page:  https://console.developers.google.com/apis/credentials?project=my-project-1507807614573&amp;folder=&amp;organizationId=</p> </li> <li> <p>Click on <code>credentials</code> and choose the second option: <code>OAuth Client ID</code> </p> </li> <li> <p>Fill in this page with the following info:  name: A name for your app  Authorized JavaScript origins: https://your-scout-implementation-url:port  Authorized redirect URIs: http://your-scout-implementation-url:port/authorized</p> </li> <li> <p>Save these settings by clicking on the \"Save\" button</p> </li> <li> <p>Note that a client_id and a client_secret are generated.</p> </li> </ul>"},{"location":"admin-guide/login-system/#edit-the-scout-config-file-adding-the-following-lines","title":"Edit the scout config file adding the following lines:","text":"<pre><code>GOOGLE = dict(\n    client_id=\"client_id\",\n    client_secret=\"client_secret\",\n    discovery_url=\"https://accounts.google.com/.well-known/openid-configuration\"\n)\n</code></pre> <ul> <li>Make sure that all users that should be allowed to log in in the app are already present in the Scout database with an id corresponding to a valid google email address.</li> </ul> <p>The following command can be used to add a create a new user into the database: <code>scout load user -i institute-id -u \"User Name\" -m user_emaill@email.com</code></p>"},{"location":"admin-guide/login-system/#login-using-lightweight-directory-access-protocol","title":"Login using Lightweight Directory Access Protocol","text":"<p>Institutional directory services authentication via LDAP is supported by Scout.</p> <p>LDAP authentication in Scout is achieved by using the flask-ldapconn library.</p> <p>Pre-requisites in order to authenticate users using LDAP:</p> <ul> <li>An existing LDAP authentication server (external from Scout)</li> <li>All users that should be logged in Scout using the LDAP should be previously saved into the scout database with an ID corresponding to a valid LDAP user.</li> </ul> <p>The following command can be used to add a create a new user into the database: <code>scout load user -id ldap_id (could be an email address) -i cust000 -u \"User Name\" -m useremail@email.com</code></p> <p>Please note that the while the <code>-id ldap_id</code> option is not a mandatory parameter in the command used for adding users to the database, it is necessary for the LDAP login to successfully recognize the user in the system.</p> <p>LDAP server instances are different from case to case. Some basic LDAP config options (with example values) that can be used on the in the Scout config file are the following:</p> <pre><code># LDAP_HOST = \"localhost\" # Can also be named LDAP_SERVER\n# LDAP_PORT = 389\n# LDAP_BASE_DN = 'cn=admin,dc=example,dc=com # Can also be named LDAP_BINDDN\n# LDAP_USER_LOGIN_ATTR = \"mail\" # Can also be named LDAP_SEARCH_ATTR\n# LDAP_USE_SSL = False\n# LDAP_USE_TLS = True\n</code></pre> <p>A complete list of accepted parameters that can be used to reflect your LDAP server configuration is available in the flask-ldapconn readme page.</p>"},{"location":"admin-guide/login-system/#considerations-regarding-the-ldap-login-in-scout","title":"Considerations regarding the LDAP login in Scout.","text":"<p>Since Scout software needs to define internal user objects for functioning properly, the LDAP login check against the server is only the first step of the login process. The second step would be making sure that a user authenticated by a certain password exists also in the <code>user</code> collection of the Scout database. Because of this latter authentication step, it is not strictly necessary to define a stringent set of rules (for instance which groups the user must belong to) for the LDAP login system, because a user from any group will be logged into Scout, as long as it's previously saved in the Scout database.</p> <p>This entails that if a user should be removed from the system, it is enough just to remove it from the Scout database.</p>"},{"location":"admin-guide/login-system/#example-of-ldap-login-setup-using-docker","title":"Example of LDAP login setup using Docker","text":"<p>In order to understand how the LDAP authentication works, we are providing a docker-based example of a setup with a demo LDAP server containing pre-defined users. The LDAP auth server used here is based on the test server docker-test-openldap, that contains a number of pre-defined users and organizational user roles from the Futurama Wiki that are also described in the main page of the repository.</p> <p>1) You could start the data-populated LDAP server running the Docker command:</p> <pre><code>docker run --rm -p 10389:10389 -p 10636:10636 rroemhild/test-openldap\n</code></pre> <p>2) From the LDAP server, let's choose one character from Futurama that we would like to add as a user in a local instance of Scout, for instance Dr. Zoidberg</p> <p></p> <p>Let's start adding the user to Scout with the command:</p> <pre><code>scout --demo load user -i cust000 -u \"Dr. Zoidberg\" -m zoidberg@planetexpress.com -id zoidberg@planetexpress.com\n</code></pre> <p>Note that the created ID is an email address that is defined for the user in the demo LDAP server: https://github.com/rroemhild/docker-test-openldap#cnjohn-a-zoidbergoupeopledcplanetexpressdccom. Note also that the password for this user is <code>zoidberg</code>.</p> <p>3) Finally, let's modify the Scout demo config file by adding the following lines:</p> <pre><code>LDAP_HOST = \"localhost\"\nLDAP_PORT = 10389\nLDAP_BASE_DN = \"dc=planetexpress,dc=com\"\nLDAP_USER_LOGIN_ATTR = \"mail\"\nLDAP_USE_SSL = False\nLDAP_USE_TLS = True\n</code></pre> <p>Let's start the demo server with the command <code>scout --demo serve</code>.</p> <p>4) It should be now possible to login the new user into Scout using email and password defined in the LDAP server!</p>"},{"location":"admin-guide/login-system/#simple-login-with-userid","title":"Simple login with userid","text":"<p>Basic login with userid and password is the login system available whenever no advanced login system (either Google or LDAP) is specified in the Scout config file. To enable it, comment out or remove the LDAP and GOOGLE lines mentioned above from your config. It is an un-secure system which is not recommended to use. This is also the login system available in the demo instance of Scout.</p>"},{"location":"admin-guide/loqusdb_integration/","title":"Loqusdb integration","text":"<p>Loqusdb is a tool to keep track of local observation of genomic variants. Local frequencies/observations has been shown to add value to the analysis of genomic data both for rare disease and cancer. Scout currently supports connections to Loqusdb via REST API, using the loqusdbapi software (recommended option), or by fetching data from a given instance of loqusdb via the CLI. Please note that in both cases loqusdb version &gt;= 2.5 needs to be installed.</p> <p>Once connected with a loqusdb instance, whenever a user clicks on a variant scout will query loqusdb for that variant and display the information given if the loqusdb settings are used as above. There will also be links to the other accessible cases where the variant can be found. A maximum of 10 cases will be displayed, however the total number of observations will be visible in numbers.</p> <p>One or more instances of loqusdb can be initialized when the Scout server is started by editing the LOQUSDB_SETTINGS in the Scout config file.</p>"},{"location":"admin-guide/loqusdb_integration/#option-1-setup-of-a-loqusdb-instance-executable-as-a-binary-file","title":"Option 1: setup of a loqusdb instance executable as a binary file","text":"<p>To avoid dependency conflicts loqusdb should be installed in an environment separate from scout. Install loqudb according to the instructions on the package homepage. This can be done using the same environment or another virtual environment, also the same mongodb process can be used for the loqus database however if large datasets(1000s of whole genomes) are expected it is preferable to keep loqusdb and scout in separate instances.</p>"},{"location":"admin-guide/loqusdb_integration/#config-parameters","title":"Config Parameters","text":"<ul> <li><code>id</code>: Id of configuration. Defaults to \"default\". Mandatory when configuring multiple instances.</li> <li><code>binary_path</code>: Path to LoqusDB binary. Mandatory.</li> <li><code>config_path</code> is alternative if not connecting to the default (which is <code>port=27017</code>, <code>host=localhost</code>). Optional.</li> </ul>"},{"location":"admin-guide/loqusdb_integration/#option-2-connecting-to-a-loqussbapi-instance-via-rest-api","title":"Option 2: connecting to a loqussbapi instance via REST API","text":"<p>Perhaps this option represents the easiest and the long-term supported option to establish a connection and run queries to loqusdb. Loqusdbapi should be running on a server with host and port reachable by the scout instance. Follow the instructions provided on the package home page to either install it or run it in a Docker container.</p>"},{"location":"admin-guide/loqusdb_integration/#configuring-the-loqusdb-connections-in-scout-using-the-config-file","title":"Configuring the loqusdb connections in Scout using the config file","text":"<p>Once a loqusdb instance is created via one one the two options (or both actually, since Scout supports the connection to multiple loqusdb instances), the <code>LOQUSDB_SETTINGS</code> parameter in the Scout config file (config.py) should be edited as shown in the following example:</p> <pre><code>LOQUSDB_SETTINGS = {\n  \"default\" : {\"binary_path\": \"/miniconda3/envs/loqus2.5/bin/loqusdb\", \"config_path\": \"/home/user/settings/loqus_default.yaml\"}, # Example of an executable loqusdb binary file\n  \"loqus_api\" : {\"api_url\": \"http://127.0.0.1:9000\"}, # Example or a loqusdb instance reachable via REST API,\n  ..\n}\n</code></pre> <p>The example above is showing the LOQUSDB_SETTINGS parameter as a dictionary containing 2 key/values, reflecting 2 eventual instances of loqusdb, one based on the executable binary file (option 1) and one reachable via REST API (option2). To reflect the infrastructure needs, it is possible to set as many connections to loqusdb instances as required.</p> <p>Please note that the key used to define each of these instances (in this case default and loqus_api) will be later used in Scout to switch among the available instances (Scout at the moment doesn't support using different loqusdb instance at the same time, and it will be only possible to use one at the time for each institute).</p> <p>Note also that regardless of the number of loqusdb instances (key/values present in the LOQUSDB_SETTINGS file), one dafault loqusdb instance should be present with key <code>default</code>. This entails that if you are connecting to only one loqusdb instance, then it should be named <code>default</code>.</p>"},{"location":"admin-guide/loqusdb_integration/#switching-between-loqusdb-instances-from-the-institute-settings-in-the-scout-browser","title":"Switching between loqusdb instances from the institute settings in the Scout browser","text":"<p>This part applies only if more than one loqusdb instance is connected to Scout using the <code>LOQUSDB_SETTINGS</code> parameter present in the Scout config file. As mentioned before, at the moment Scout support one loqusdb connection at the time for each single institute. The first time that the Scout browser is launched, all institutes will be set to use the default loqusdb instance. Configuring a different loqusdb instance than the default one is done at the institute level, and only admin users have the permissions to change these settings.</p>"},{"location":"admin-guide/loqusdb_integration/#configuring-institute-specific-loqusdb-instance-via-institute-settings","title":"Configuring institute-specific loqusdb instance via institute settings","text":"<p>From the institute page in the Scout browser, go to sidebar 'Settings'. Find 'LoqusDB id' and enter the configured id from config.py. Click Save. Your configuration is now active.</p> <p></p> <p>It is additionally possible to configure a loqusdb instance for a given institute using the command line. Example:</p> <pre><code>scout update institute  &lt;institute&gt; --loqusdb_id &lt;loqusdb_id&gt;\n</code></pre>"},{"location":"admin-guide/matchmaker_exchange_integration/","title":"Matchmaker Exchange integration","text":""},{"location":"admin-guide/matchmaker_exchange_integration/#matchmaker-exchange-integration","title":"Matchmaker Exchange integration","text":"<p>Starting from Scout release 4.4 the software can be configured to send patient data to a Matchmaker Exchange server. A Matchmaker server that is tested and known to work with Scout is patientMatcher, but any server which implements the standard endpoints described in the MME APIs can in theory be connected as well. It is worth mentioning that when using a MME server different than patientMatcher you will be able to export patient data to to Matchmaker, but it is not guaranteed that you will be able to modify the submission at a later stage or view matching results into Scout.</p>"},{"location":"admin-guide/matchmaker_exchange_integration/#basic-configuration-for-mme-integration","title":"Basic configuration for MME integration","text":"<p>Edit scout config file adding the following parameters:</p> <pre><code>MME_ACCEPTS = 'application/vnd.ga4gh.matchmaker.v1.0+json'\nMME_URL = 'base_url_of_MME_service'\nMME_TOKEN = 'security_token_accepted_by_MME'\n</code></pre> <p>Note that in order to accept and process Scout requests there should be already a registered client in the MME server database with the same security token that Scout is going to provide when creating requests. Parameter MME_ACCEPTS is specific for patientMatcher integration and should probably be modified according to the MME server being used.  </p>"},{"location":"admin-guide/matchmaker_exchange_integration/#modifying-user-roles-to-include-matchmaker-exchange-submitter-privilege","title":"Modifying user roles to include Matchmaker Exchange submitter privilege","text":"<p>You can grant users the privilege to add patients to Matchmaker and review eventual matches by adding a MME submitter role to the user object. To do so, run the following command:</p> <pre><code>scout update user -r mme_submitter -u scout_user_id\n</code></pre> <p>a mme_submitter role will be added in this way to the list of roles of the user object in database.</p>"},{"location":"admin-guide/panelapp_panels/","title":"Importing gene panels from PanelApp","text":"<p>Gene panels can be imported from PanelApp using the command line.</p> <p>The command to import/update all gene panels from PanelApp is the following:</p> <p><code>scout load panel --panel-app  --institute &lt;inst-id&gt; [--panel-app-confidence &lt;green|amber|red&gt;]</code></p> <p>The <code>--panel-app-confidence</code> option specifies the threshold of confidence for genes that should be added to the panel.</p> <p>According to PanelApp, the levels of confidence for a gene are the following: - Green = highest level of confidence; a gene from 3 or 4 sources. - Amber = intermediate; a gene from 2 sources. - Red = lowest level of confidence; 1 of the 4 sources or from other sources.</p> <p>Please note that when you create a PanalApp panel in Scout, the software uses the specified level as a threshold, and not as a filter, so you'll get the following:</p> <pre><code>`--panel-app-confidence green` collects only green genes from PanelApp\n`--panel-app-confidence amber` collects amber and green genes from PanelApp\n`--panel-app-confidence red` collects all genes from PanelApp\n</code></pre> <p>Also note that if you don't specify any confidence level with the <code>--panel-app-confidence option</code>, then only the <code>HighEvidence</code> (green) genes will be included in the panels.</p> <p>To create/update only one PanelApp panel, use the following command:</p> <p><code>scout load panel --panel-app  --institute &lt;inst-id&gt; --panel-id &lt;panel-id&gt; (--panel-app-confidence green|amber|red)</code>.</p> <p>For instance to create the <code>CAKUT</code> (id: 234) gene panel, containing amber + green genes, for an institute named cust000, the command would be:</p> <p><code>scout load panel --panel-app  --institute cust000 --panel-id 234 --panel-app-confidence amber</code></p> <p>When loading a panel from PanelApp, Scout is parsing the latest version of it that is present in the API. The document is a json file like this one:</p> <p>https://panelapp.genomicsengland.co.uk/api/v1/panels/234/?format=api</p> <p>Since the Panelapp gene panels import functionality in Scout is only supporting loading of genes, all eventual <code>regions</code> or <code>strs</code> present in the PanelApp json document will not be saved in the created panel.</p> <p>PanelApp panels in Scout can be updated any time by running the same command used for creating them.  When panels are already present in Scout, running the command will update panels that are not up-to-date with PanelApp and just overwrite those that already present with the newest version.</p>"},{"location":"admin-guide/panelapp_panels/#panelapp-green-genes-panel","title":"PanelApp green genes panel","text":"<p>As an admin, it is possible to create/update a gene panel containing green genes from PanelApp panels. The basic command to achieve this is the following:</p> <p><code>scout update panelapp-green -i &lt;institute&gt; (--signed-off) --force</code></p>"},{"location":"admin-guide/panelapp_panels/#command-line-step-selecting-panel-types","title":"Command Line Step: Selecting Panel Types","text":"<p>During this step, the command line will prompt you to select one or more panel types to filter the panels retrieved from the API.</p>"},{"location":"admin-guide/panelapp_panels/#available-panel-types","title":"Available Panel Types","text":"<p>At the time of writing, the following panel types are available:</p> <ol> <li>Actionable</li> <li>Additional Findings</li> <li>Cancer Germline 100k</li> <li>ClinGen Curated Genes</li> <li>Component of Super Panel</li> <li>GMS Cancer Germline Virtual</li> <li>GMS Rare Disease</li> <li>GMS Rare Disease Virtual</li> <li>GMS Signed-Off</li> <li>Rare Disease 100k</li> <li>Reference</li> <li>Research</li> <li>Submitted List</li> <li>Superpanel</li> <li>all - all types above</li> </ol>"},{"location":"admin-guide/panelapp_panels/#default-behavior","title":"Default Behavior","text":"<p>If no panel type is selected (i.e., the user presses Enter without input), Green Genes will be selected from the following default panel types: <code>3</code>, <code>4</code>, <code>6</code>, <code>7</code>, <code>8</code>, <code>9</code>, <code>10</code>.</p>"},{"location":"admin-guide/panelapp_panels/#include-all-available-panels","title":"Include all available panels","text":"<p>By typing <code>all</code> at the prompt, green genes will be collected from any panel available in PanelApp</p>"},{"location":"admin-guide/panelapp_panels/#important-note","title":"Important Note","text":"<p>The <code>--force</code> or (<code>-f</code>) parameter is required to create a new version of the gene panel if the number of green genes retrieved from the PanelApp server is lower than the number of genes in the older version of the panel. This ensures the panel is updated despite the reduction in gene count.</p> <p>If specified, the <code>--signed-off</code> (or simply <code>-s</code>) parameter will restrict the download of green genes to include only signed-off panels.</p>"},{"location":"admin-guide/reviewer_service/","title":"Scout REViewer Service integration","text":"<p>Scout-REViewer-service provides a way to integrate ExpansionHunter REViewer visualisation for short tandem repeats.</p>"},{"location":"admin-guide/reviewer_service/#installation","title":"Installation","text":"<p>Follow the build and installation instructions on available from the Scout REViewer Service repository.</p> <pre><code>git clone https://github.com/Clinical-Genomics/Scout-REViewer-service.git\n</code></pre> <p>Production ready Docker and Docker compose installation options are available for testing. Modify the <code>.env</code> file to point to your ExpansionHunter case files.</p> <p>The container, once started, will provide an HTTP interface on a selected port.</p>"},{"location":"admin-guide/reviewer_service/#configuration","title":"Configuration","text":"<p>Point Scout to the Scout-REViewer-service URL host and port by editing the following lines in your <code>scout.config</code>:</p> <pre><code># Connection details for Scout REViewer service\n# SCOUT_REVIEWER_URL = \"http://127.0.0.1:8000/reviewer\"\n</code></pre>"},{"location":"admin-guide/reviewer_service/#case-configuration-files","title":"Case configuration files","text":"<p>In your case load configuration file, provide paths to Expansion Hunter individual VCF, realignment bam-let files (not the regular sample full alignment <code>.cram</code> files) and if differing from the defaults given in the SRS configuration, reference genome and Expansion Hunter JSON catalog files. Please see Load Config File for parameter names and details.</p>"},{"location":"admin-guide/scripts/","title":"Scripts folder","text":""},{"location":"admin-guide/scripts/#genelist_to_panelpy","title":"genelist_to_panel.py","text":"<p>Used to print to terminal a gene panel based on a gene list.</p>"},{"location":"admin-guide/scripts/#transfer-archivepy","title":"transfer-archive.py","text":"<p>Used to migrate case info from an old archive to a newer one.</p>"},{"location":"admin-guide/scripts/#update_files_pathpy","title":"update_files_path.py","text":"<p>Used to change all paths in the database when moving cases's file from one server to another. The scripts checks if cases contain file paths pointing to location in the old server (--test option) and updates these paths to new paths on the new machine.</p> <p>Usage:  <code>bash python --db_uri mongodb_connection_uri -o /old/path/to/files -n /new/path/to/files</code></p> <p>options: --test : Use this flag to test the function -d: Use this flag to create a list of keys where old path is found</p>"},{"location":"admin-guide/scripts/#update_variant_panelspy","title":"update_variant_panels.py","text":"<p>Update variant panels.</p>"},{"location":"admin-guide/server/","title":"Running the server","text":"<p>This document will explain how we like to run Scout in both development and production settings.</p>"},{"location":"admin-guide/server/#config","title":"Config","text":"<p>In order to run the web server, it is usually necessary to provide a number of parameters. All available parameters should be specified in a python-formatted configuration file. This config file is passed as a parameter when the application is launched. The following example of a config file is is used for running the development server (read further down):</p> <pre><code># -*- coding: utf-8 -*-\nSECRET_KEY = \"this is not secret...\"\nREMEMBER_COOKIE_NAME = \"scout_remember_me\"  # Prevent session timeout when user closes browser\n# INSTANCE_NAME = \"Development\"  # Name will be displayed on the top navigation menu\n# INSTANCE_COLOR = \"#800000\"  # Color of the top navigation menu\n# SESSION_TIMEOUT_MINUTES = 60  # Minutes of inactivity before session times out\n\n# MONGO_URI = \"mongodb://127.0.0.1:27011,127.0.0.1:27012,127.0.0.1:27013/?replicaSet=rs0&amp;readPreference=primary\"\nMONGO_DBNAME = \"scout\"\n\nBOOTSTRAP_SERVE_LOCAL = True\nTEMPLATES_AUTO_RELOAD = True\n\nDEBUG_TB_INTERCEPT_REDIRECTS = False\n\n# Flask-mail: http://pythonhosted.org/flask-mail/\n# see: https://bitbucket.org/danjac/flask-mail/issue/3\nMAIL_SERVER = \"smtp.gmail.com\"\nMAIL_PORT = 587\nMAIL_USE_TLS = True\nMAIL_USE_SSL = False\n\n# Filename of accrediation bagde image in server/bluprints/public/static\n# If null no badge is displayed in scout\nACCREDITATION_BADGE = \"swedac-1926-iso17025.png\"\n\n# LDAP login Settings\n# Complete list of accepted parameters available here: https://github.com/rroemhild/flask-ldapconn\n# LDAP_HOST = \"localhost\" # Can also be named LDAP_SERVER\n# LDAP_PORT = 389\n# LDAP_BASE_DN = 'cn=admin,dc=example,dc=com # Can also be named LDAP_BINDDN\n# LDAP_USER_LOGIN_ATTR = \"mail\" # Can also be named LDAP_SEARCH_ATTR\n# LDAP_USE_SSL = False\n# LDAP_USE_TLS = True\n\n# Parameters required for Google Oauth 2.0 login\n# GOOGLE = dict(\n#    client_id=\"client.apps.googleusercontent.com\",\n#    client_secret=\"secret\",\n#    discovery_url=\"https://accounts.google.com/.well-known/openid-configuration\",\n# )\n\n# Chanjo database connection string - used by chanjo report to create coverage reports\n# SQLALCHEMY_DATABASE_URI = \"mysql+pymysql://test_user:test_passwordw@127.0.0.1:3306/chanjo\"\n\n# Configure gens service\n# GENS_HOST = \"127.0.0.1\"\n# GENS_PORT = 5000\n\n# Connection details for communicating with a rerunner service\n# RERUNNER_API_ENTRYPOINT = \"http://rerunner:5001/v1.0/rerun\"\n# RERUNNER_TIMEOUT = 10\n# RERUNNER_API_KEY = \"I am the Keymaster of Gozer\"\n\n# Matchmaker connection parameters\n# - Tested with PatientMatcher (https://github.com/Clinical-Genomics/patientMatcher) -\n# MME_ACCEPTS = \"application/vnd.ga4gh.matchmaker.v1.0+json\"\n# MME_URL = \"http://localhost:9020\"\n# MME_TOKEN = \"DEMO\"\n\n# Beacon connection settings\n# - Tested with cgbeacon2 (https://github.com/Clinical-Genomics/cgbeacon2) -\n# BEACON_URL = \"http://localhost:6000/apiv1.0\"\n# BEACON_TOKEN = \"DEMO\"\n\n# connection details for LoqusDB MongoDB database\n# Example with 2 instances of LoqusDB, one using a binary file and one instance connected via REST API\n# When multiple instances are available, admin users can modify which one is in use for a given institute from the admin settings page\n# LOQUSDB_SETTINGS = {\n#    \"default\" : {\"binary_path\": \"/miniconda3/envs/loqus2.5/bin/loqusdb\", \"config_path\": \"/home/user/settings/loqus_default.yaml\"},\n#    \"loqus_api\" : {\"api_url\": \"http://127.0.0.1:9000\"},\n# }\n\n# Connection details for Scout REViewer service\n# URL\n# SCOUT_REVIEWER_URL = \"http://127.0.0.1:8000/reviewer\"\n\n#\n# Cloud IGV tracks can be configured here to allow users to enable them on their IGV views.\n# CLOUD_IGV_TRACKS = [\n#    {\n#        \"name\": \"custom_public_bucket\",\n#        \"access\": \"public\",\n#        \"tracks\": [\n#            {\n#                \"name\": \"dbVar Pathogenic or Likely Pathogenic\",\n#                \"type\": \"variant\",\n#                \"format\": \"vcf\",\n#                \"build\": \"37\",\n#                \"url\": \"https://s3-eu-west-1.amazonaws.com/pfigshare-u-files/25777457/GRCh37.variant_call.clinical.pathogenic_or_likely_pathogenic.vcf.gz\",\n#                \"indexURL\": \"https://s3-eu-west-1.amazonaws.com/pfigshare-u-files/25777460/GRCh37.variant_call.clinical.pathogenic_or_likely_pathogenic.vcf.gz.tbi\",\n#            }\n#        ],\n#    },\n# ]\n\n# Chanjo-Report\nREPORT_LANGUAGE = \"en\"\nACCEPT_LANGUAGES = [\"en\", \"sv\"]\n\n# FEATURE FLAGS\nSHOW_CAUSATIVES = True\nSHOW_OBSERVED_VARIANT_ARCHIVE = True\nHIDE_ALAMUT_LINK = True\n\n# URL of a general web page where users can place orders for analyses or reruns\n# RERUN_URL = \"https://clinical.scilifelab.se/\"\n# Display case rerun monitoring toggle\nRERUN_MONITOR = True\n\n# OMIM API KEY: Required for downloading definitions from OMIM (https://www.omim.org/api)\n# OMIM_API_KEY = 'valid_omim_api_key'\n\n# Parameters for enabling Phenomizer queries\n# PHENOMIZER_USERNAME = \"test_user\"\n# PHENOMIZER_PASSWORD = \"test_password\"\n\n# Rank model link\nRANK_MODEL_LINK_PREFIX = \"https://raw.githubusercontent.com/Clinical-Genomics/reference-files/master/rare-disease/rank_model/rank_model_-v\"\nRANK_MODEL_LINK_POSTFIX = \"-.ini\"\nSV_RANK_MODEL_LINK_PREFIX = \"https://raw.githubusercontent.com/Clinical-Genomics/reference-files/master/rare-disease/rank_model/svrank_model_-v\"\nSV_RANK_MODEL_LINK_POSTFIX = \"-.ini\"\n</code></pre>"},{"location":"admin-guide/server/#minimal-config","title":"Minimal config","text":"<p>Unless you aim to install all subsystems that Scout can interact with, you are well advised to start by commenting out anything more than what you use. Try the default one in scout/scout/server/config.py - or start from the following:</p> <pre><code># minimal.flask.conf.py\n\n# to encrypt cookie data\nSECRET_KEY = 'makeThisSomethingNonGuessable'  # required\n\n# connection details for MongoDB\nMONGO_DBNAME = 'scout'                        # required\nMONGO_PORT = 27017\n</code></pre>"},{"location":"admin-guide/server/#development","title":"Development","text":"<p>Flask includes a decent server which works great for development. After you install Scout you can start the server with some relevant settings:</p> <pre><code># this line will help Flask find the server\nFLASK_APP=scout.server.auto \\\n# this will enable debug mode of Flask and reload the server on code changes\nFLASK_DEBUG=1 \\\n# this is a Scout specific variable that should point to the server config\nSCOUT_CONFIG=\"/full/path/to/flask.conf.py\" \\\nflask run\n</code></pre> <p>The server can also be started from the scout cli with the command <code>scout serve</code>. The default config file that will be used when no other configuration option is provided will be the one present under scout/server/config.py. To use an alternative flask config, you can use the <code>-f/ --flask_config</code> option. Example: <code>scout -f path/to/flask.conf.py serve</code>.</p>"},{"location":"admin-guide/server/#production","title":"Production","text":"<p>Now the built-in Flask server won't cut it anymore. We are a fan of using Gunicorn for running Python services. It's easy to setup and configure and handles things like multi-processing and SSL/HTTPS without problems. You can setup the server accordingly:</p> <pre><code>SCOUT_CONFIG=\"/full/path/to/flask.conf.py\" \\\ngunicorn \\\n    --workers=4 \\\n    --bind=\"HOST:PORT\" \\\n    --keyfile=\"/path/to/myserver.key\" \\\n    --certfile=\"/path/to/server.crt\" \\\n    scout.server.auto:app\n</code></pre> <p>Note that while it might still be necessary to provide a <code>SCOUT_CONFIG</code> environment variable pointing to python config file to run a full web server, some parameters like those used to connect to MongoDB (<code>MONGO_HOST</code>, <code>MONGO_DBNAME</code>, <code>MONGO_PORT</code>, <code>MONGO_USERNAME</code>, <code>MONGO_PASSWORD</code>, <code>MONGO_URI</code>) can be also be passed as environment variables. In that case they will have precedence over those provided in the config file.</p> <p>If you are running a larger environment, where this is one component, we encourage a reverse proxy configuration where Scout is served by Gunicorn, and reverse proxied by NGINX. Then NGINX will handle the secure communication.</p>"},{"location":"admin-guide/setup-scout/","title":"Setup","text":""},{"location":"admin-guide/setup-scout/#setup-scout","title":"Setup Scout","text":""},{"location":"admin-guide/setup-scout/#demo","title":"Demo","text":"<p>Once installed, you can setup Scout by running a few commands using the included command line interface. Given you have a MongoDB server listening on the default port (27017), this is how you would setup a fully working Scout demo:</p> <pre><code>scout setup demo\n</code></pre> <p>This will setup an instance of scout with a database called <code>scout-demo</code>. Now run</p> <pre><code>scout --demo serve\n</code></pre> <p>And play around with the interface. A user has been created with email clark.kent@mail.com so use that adress to get access</p>"},{"location":"admin-guide/setup-scout/#initialize-scout","title":"Initialize scout","text":"<p>To initialize a working instance with all genes, diseases etc run</p> <pre><code>scout setup database\n</code></pre> <p>for more info, run <code>scout --help</code></p>"},{"location":"admin-guide/setup-scout/#setting-up-users-login","title":"Setting up users login","text":"<p>Scout login system currently supports 1. Google login via OpenID Connect. Click here for instructions on how to set up a Google login system 1. Connection via Lightweight Directory Access Protocol (LDAP). Click [here](./login-system.md/##Login-using-Lightweight-Directory-Access-Protocol-(LDAP) for instructions on how to set up a LDAP login system. 1. Simple login - for operation tests or a trusted local environment only. Fallback - will operate if no other auth configuration is specified.</p>"},{"location":"admin-guide/updating-case/","title":"Updating an existing case using the command line interface","text":"<p>A case in the scout db can be updated after loading. Best practica involves making a new scout load config, and proceeding to upload with <code>scout load case -u my_new_config.yaml</code>, but occasionally a specific attribute can be altered instead with the <code>scout update case</code> command.</p> <p>``` Usage: scout update case [OPTIONS] [CASE_ID]</p> <p>Update a case in the database</p> <p>Options:   -n, --case-name TEXT           Search case by display name (institute ID                                  should also be provided)   -i, --institute TEXT           Case institute ID (case display name should                                  also be provided)   -c, --collaborator TEXT        Add a collaborator to the case   --fraser TEXT                  Path to clinical WTS OMICS outlier FRASER TSV                                  file to be added - NB variants are NOT loaded   --outrider TEXT                Path to clinical WTS OMICS outlier OUTRIDER                                  TSV file to be added - NB variants are NOT                                  loaded   --rna-genome-build [37|38]     RNA human genome build - should match RNA                                  alignment files and IGV tracks   --vcf PATH                     Path to clinical VCF file to be added - NB                                  variants are NOT loaded   --vcf-sv PATH                  path to clinical SV VCF file to be added   --vcf-str PATH                 Path to clinical STR VCF file to be added -                                  NB variants are NOT loaded   --vcf-cancer PATH              Path to clinical cancer VCF file to be added                                  - NB variants are NOT loaded   --vcf-cancer-sv PATH           Path to clinical cancer structural VCF file                                  to be added - NB variants are NOT loaded   --vcf-research PATH            Path to research VCF file to be added - NB                                  variants are NOT loaded   --vcf-sv-research PATH         Path to research VCF with SV variants to be                                  added   --vcf-cancer-research PATH     Path to research VCF with cancer variants to                                  be added - NB variants are NOT loaded   --vcf-cancer-sv-research PATH  Path to research VCF with cancer structural                                  variants to be added - NB variants are NOT                                  loaded   --vcf-mei PATH                 Path to clinical mei variants to be added -                                  NB variants are NOT loaded   --vcf-mei-research PATH        Path to research mei variants to be added -                                  NB variants are NOT loaded   --reupload-sv                  Remove all SVs and re upload from existing                                  files   --rankscore-treshold TEXT      Set a new rank score treshold if desired   --sv-rankmodel-version TEXT    Update the SV rank model version   --help                         Show this message and exit.  ```</p>"},{"location":"admin-guide/updating-individuals/","title":"Updating case individuals tracks using the command line.","text":"<p>After a case is loaded and saved in the database, some individual-specific keys can be modified without having to re-upload the entire case. These key/values are relative to the optional tracks available for the individual and must be set at the individual level (each of them specified for each individual).</p> <p>The command line command used to update individuals track is the following:</p> <pre><code>Usage: scout update individual [OPTIONS] [KEY] [VALUE]\n\n  Update information on individual level in Scout\n\n  UPDATE_DICT holds keys and type of value. If the value type is \"path\", and\n  most are, a check for file existence is performed.\n\n  If the key contains a dot (only one needed currently), keys for a dict type\n  value is assumed: e.g. \"reviewer.alignment\" -&gt; ind[\"reviewer\"][\"alignment\"]\n  (path value required)\n\nOptions:\n  -c, --case-id TEXT  Case id  [required]\n  -n, --ind TEXT      Individual display name\n  --help              Show this message and exit.\n</code></pre> <p>And the tracks that can be updated are the following: - assembly_alignment_path - bam_file - d4_file - rna_alignment_path - mt_bam - vcf2cytosure - paraphase_alignment_path - rhocall_bed - rhocall_wig - tiddit_coverage_wig - minor_allele_frequency_wig - upd_regions_bed - upd_sites_bed - rna_coverage_bigwig - splice_junctions_bed</p> <p>Additional sample descriptors: - subject_id - omics_sample_id</p> <p>Additional non-track individual data - bionano_access - chromograph_images - reviewer</p>"},{"location":"admin-guide/updating-individuals/#description-of-custom-individual-tracks","title":"Description of custom individual tracks","text":""},{"location":"admin-guide/updating-individuals/#dna-sequencing-alignment-files","title":"DNA-sequencing alignment files","text":"<p>The following files are used by the igv.js integrated browser to display sequence variation alignments. The igv.js browser can be opened by clicking on the relative link (button) present on variants page. The link is displayed only if at least one individual of the case contains one bam_file or mt_bam track saved.</p> key name key value bam_file path to a bam/cram alignment file mt_bam path to a downsampled mitochondrial bam/cram alignment file minor_allele_frequency_wig path to hificnv maf wig file rhocall_bed path to rhocall output bed file rhocall_wig path to rhocall output wig file tiddit_coverage_wig path to tiddit wig coverage file upd_regions_bed path to upd_regions_bed upd_sites_bed path to vcf2cytosure file <p><code>rhocall_bed</code> and <code>rhocall_wig</code> files are both obtained from rhocall, a software that calls and annotates autozygosity from VCF files.</p> <p><code>tiddit_coverage_wig</code> files are obtained from tiddit or HiFiCNV, software which in turn is used to call structural variants. Similarly, <code>minor_allele_frequency_wig</code> files are obtained from HiFiCNV, a software which is also used to call structural variants.</p> <p><code>upd_regions_bed</code> and <code>upd_sites_bed</code> files are created from VCF files using the upd tool.</p>"},{"location":"admin-guide/updating-individuals/#rna-sequencing-splice-junctions-files","title":"RNA-sequencing splice junctions files","text":"<p>These files are both required by the integrated splice junction track view of igv.js.</p> key name key value splice_junctions_bed path to An indexed junctions .bed.gz file obtained rna_coverage_bigwig path to coverage islands file generated from bam or cram files <p><code>splice_junctions_bed</code> is obtained from from STAR v2 aligner <code>*.SJ.out.tab</code> file and <code>rna_coverage_bigwig</code> contains coverage islands obtained from RNA-seq bam or cram alignments</p> <p>A link to the splice junction view is present on variants pages of cases with at least one individual with these files.</p>"},{"location":"admin-guide/updating-individuals/#vcf2cytosure-file","title":"vcf2cytosure file","text":"key name key value vcf2cytosure path to vcf2cytosure file <p>vcf2cytosure is a tool that converts a VCF with structural variations to the \u201c.CGH\u201d format used by the commercial CytoSure Interpret Software by OGT (Oxford Gene Technology). Once the individual is updated with this track, vcf2cytosure files will be available for download from the individuals table present on Scout's case page.</p>"},{"location":"admin-guide/updating-individuals/#sample-identifiers","title":"Sample identifiers","text":"key name key value subject_id Individual id for matching multiomics data and statistics omics_sample_id Individual id for matching multiomics data and statistics <p>Subject ids are unique identifiers (eg as produced by a hospital LIMS) denoting individuals, who may have multiple samples in Scout. Useful for individual level statistics and connecting multiomics data or multiple analyses and cases including the same individual, potentially with different samples.</p> <p>Omics sample ids can also be directly set. These correspond to the sample ids found in OMICS variant files, and directly identify the individual to whom the OMICS sample belongs. Useful for e.g. loading a combined DNA and RNA case.</p>"},{"location":"admin-guide/updating-individuals/#additional-individual-data-structured-dictionary-input","title":"Additional individual data - structured dictionary input","text":"<p>If the key contains a dot (only one needed currently), keys for a dict type value is assumed: e.g. <code>\"reviewer.alignment\"</code> -&gt; <code>ind[\"reviewer\"][\"alignment\"]</code>.</p>"},{"location":"admin-guide/updating-individuals/#bionano-access","title":"BioNano Access","text":"key name key value bionano_access.sample BioNano Sample ID bionano_access.project BioNano Project <p>See BioNano Access Integration.</p>"},{"location":"admin-guide/updating-individuals/#chromograph","title":"Chromograph","text":"key name key value chromograph_images.autozygous Path wildcard to files - exclude chromosome name chromograph_images.coverage Path wildcard to files - exclude chromosome name chromograph_images.upd_regions Path wildcard to files - exclude chromosome name chromograph_images.upd_sites Path wildcard to files - exclude chromosome name See e.g. User guide - Cases - Cytogenomics for a description of Chromograph."},{"location":"admin-guide/updating-individuals/#scout-reviewer-service","title":"Scout REViewer Service","text":"key name key value reviewer.alignment Path reviewer.alignment_index Path reviewer.vcf Path reviewer.catalog Path reviewer.reference Path reviewer.trgt Bool <p>See Admin guide - Scout REViewer Service for details on SRS.</p>"},{"location":"admin-guide/user_activity_monitoring/","title":"Logging users' activity","text":""},{"location":"admin-guide/user_activity_monitoring/#monitoring-users-activity-with-a-log-file","title":"Monitoring Users' Activity with a Log File","text":"<p>To ensure security and improve functionality, Scout provides the ability to log user activities, including interactions and navigation. This feature helps enhance platform performance and maintain security.</p> <p>By default, user activity logging is disabled. However, system administrators can enable this feature by setting the <code>USERS_ACTIVITY_LOG_PATH</code> parameter in the <code>config.py</code> file.</p>"},{"location":"admin-guide/user_activity_monitoring/#log-file-configuration","title":"Log File Configuration","text":"<p>The name of the log file is arbitrary, but ensure that the Scout software has the necessary permissions to write to the specified file path.</p>"},{"location":"admin-guide/user_activity_monitoring/#enabling-user-activity-logging","title":"Enabling User Activity Logging","text":"<p>Once the <code>USERS_ACTIVITY_LOG_PATH</code> parameter is set in the configuration file, all users will be automatically logged out. They will be required to log in again and must check a box indicating their consent for activity logging. Please note that no user\u2014regardless of login method (LDAP/OAuth2)\u2014can log in without agreeing to this.</p> <p></p>"},{"location":"admin-guide/user_activity_monitoring/#logged-information","title":"Logged Information","text":"<p>The information logged includes:</p> <ul> <li>User email</li> <li>Date and time of activity</li> <li>Specific domain endpoints visited or actions performed</li> </ul> <p>This logging ensures transparency and accountability while using the platform.</p>"},{"location":"admin-guide/containers/container-deploy/","title":"Deploy Scout using containers","text":"<ul> <li> Running Scout using the Dockerfile image </li> <li> Deploying using Systemd services </li> <li> Deploying using Kubernetes </li> </ul>"},{"location":"admin-guide/containers/container-deploy/#scout-dockerfile","title":"Scout Dockerfile","text":"<p>A Docker image for creating both backend and frontend containers is available on Docker Hub. Alternatively it is possible to build an image starting from the Dockerfile present in this repository. To build a Scout image on your local computer you need to install Docker.</p> <p>To build Scout locally, go to top-level Scout folder (where <code>Dockerfile</code> resides) and type:</p> <pre><code>docker build --tag scout .\n</code></pre> <p>Where <code>--tag &lt;name&gt;:&lt;tag&gt;</code> will name and optional tag the Docker Image.</p> <p>The container with the docker image contains only the app installation files and its required libraries. In order to work, the container must interact with a MongoDB database. This database could be either launched as another Docker image or could run as a mongod instance on your computer or on a remote server.</p>"},{"location":"admin-guide/containers/container-deploy/#running-a-scout-web-app-using-a-docker-image","title":"Running a Scout web app using a Docker image","text":"<p>Given a MongoDB instance running on localhost, port 27017, the Scout web app could be launched by directly pulling the image from Docker Hub. To launch the demo server run the following command:</p> <pre><code>docker run --net=host --rm --expose 5000 -p 5000:5000 clinicalgenomics/scout scout --host 127.0.0.1 -db scout-demo  serve --host 0.0.0.0\n</code></pre> <p>From a Mac machine the same command would be slightly different (the reason is described here):</p> <pre><code>docker run --platform=linux/amd64 --rm --expose 5000 -p 5000:5000 clinicalgenomics/scout scout --host docker.for.mac.localhost -db scout-demo  serve --host 0.0.0.0\n</code></pre>"},{"location":"admin-guide/containers/container-deploy/#anatomy-of-run-command","title":"Anatomy of Run Command","text":"<p>The basic structure of the run command is:</p> <pre><code>docker run &lt;image&gt; &lt;command&gt;\n</code></pre> <p>In our case image is scout. An additional number of arguments are added to open and forward networking ports and for convinience.</p> <ul> <li><code>--rm</code> will remove the container when it stops executing.</li> <li><code>--expose</code> expose port</li> <li><code>5000:5000</code> forward port to port on container</li> <li><code>clinicalgenomics/scout</code> name of Docker image to run as a container</li> <li><code>scout --host 127.0.0.1 -db scout-demo  serve --host 0.0.0.0</code> start Scout with arguments for networking and connecting to database</li> </ul>"},{"location":"admin-guide/containers/container-deploy/#running-command-line-instructions-on-the-fly-by-running-the-docker-container","title":"Running command line instructions on the fly by running the Docker container","text":"<p>Given a MongoDB instance running on localhost, port 27017, a Scout command line command could be launched in this way:</p> <pre><code>docker run (--net=host) --volume=\"path_to_config.py_on_your_machine\":/home/worker/configs/config.py --rm clinicalgenomics/scout scout --flask-config /home/worker/configs/config.py view cases\n</code></pre> <p>Note that in the above command we are mapping a specific custom config file present on the local machine to a new file <code>/home/worker/configs/config.py</code>, created in the Docker container.</p> <p>Make sure that the custom config file contains the correct settings to connect to your local database, for instance on a Mac machine, it should contain the following lines:</p> <pre><code>MONGO_HOST = \"docker.for.mac.localhost\" #127.0.0.1 for non-mac machines\nMONGO_DBNAME = \"scout-demo\"\n</code></pre>"},{"location":"admin-guide/containers/container-deploy/#opening-an-interactive-terminal-to-execute-command-line-instructions","title":"Opening an interactive terminal to execute command line instructions","text":"<p>To run an interactive terminal to execute the command line, type the following:</p> <pre><code>docker run -it --volume=\"path_to_config.py_on_your_machine\":/home/worker/configs/config.py --rm --entrypoint /bin/sh clinicalgenomics/scout\n</code></pre>"},{"location":"admin-guide/containers/container-deploy/#docker-tips-and-tricks","title":"Docker tips and tricks","text":""},{"location":"admin-guide/containers/container-deploy/#docker-compose","title":"Docker Compose","text":"<p>Docker can simplify the development of Scout as it offers a portable configuration-free environment with all dependancies included. The default <code>docker-compose.yml</code> file is designed for demoing and not for development. You can extend the included compose file with your own custom configuration to make it more development friendly. For more information on how to extend docker-compose files see docker docs. The following is an example configuration:</p> <pre><code>services:\n  mongodb:\n    volumes:\n      - ./volumes/mongodb/data:/data/db  #  make db persistent by storing data on host file system\n  scout-web:\n    environment:\n      FLASK_ENV: development  # set environment variables\n  command: scout --host mongodb serve --host 0.0.0.0  # not running on demo db\n</code></pre>"},{"location":"admin-guide/containers/container-deploy/#miscellaneous-tips","title":"Miscellaneous Tips","text":"<ul> <li>View all installed images together with onfo and names: <code>docker image -a</code></li> <li>View all containers: <code>docker container ls -a</code></li> <li>Stop a running image: <code>docker stop &lt;container name&gt;</code></li> </ul>"},{"location":"admin-guide/containers/kubernetes/","title":"Example deploying Scout using Kubernetes","text":"<p>Kubernetes is an open-source platform for managing containerized applications. This tutorial will show how to setup a virtual box containing a master and a work node on a local virtual machine using minikube and how to setup the necessary containers to run a MongoDB instance, a pod with the Scout command line and a pod with the Scout server on macOS. Alternatively, for macOS and Windows, consider  Docker Desktop which has builtin Kubernetes support. The default install locations for Docker Desktop do overlap with Homebrew hyperkit and minikube so it is easiest to pick one of the alternatives.</p>"},{"location":"admin-guide/containers/kubernetes/#requirements","title":"Requirements","text":"<ol> <li>Install hyperkit and minikube on your local machine (OS X 10.10.3 Yosemite or later):</li> </ol> <pre><code>brew install hyperkit\nbrew install minikube\n</code></pre> <p>The second command, brew install minikube, will install also the Kubernetes cli (kubectl). Minikube can be alternatively installed using another container manager, such as Podman or VMWare. More documentation is available here.</p>"},{"location":"admin-guide/containers/kubernetes/#installation-and-setup-of-the-database-and-config-files","title":"Installation and Setup of the database and config files","text":"<ol> <li>Start minikube kubernetes cluster inside hypervisor (hyperkit):</li> </ol> <pre><code>minikube start --vm-driver=hyperkit\n</code></pre> <ol> <li> <p>Note that all files described in this tutorial are available in the folder \"containers\", in the scout root directory.</p> </li> <li> <p>The file named \"secrets.yaml\" contains 2 files: one storing the secrets for the mongodb service (mongodb-secret) and one for the secrets of the Scout app (scout-secret). Secrets can also be stored in different files. In the example they're on the same file, separated by \"---\".</p> </li> </ol> <pre><code># mongodb secrets\napiVersion: v1\nkind: Secret\nmetadata:\n  name: mongodb-secret\ntype: Opaque\ndata:\n  mongodb-root-username: dXNlcm5hbWU= # base-64 encoded \"username\"\n  mongodb-root-password: cGFzc3dvcmQ= # base-64 encoded \"password\"\n</code></pre> <p>1.</p> <pre><code># scout secrets\napiVersion: v1\nkind: Secret\nmetadata:\n  name: scout-secret\ntype: Opaque\ndata:\n  scout-username: c2NvdXRVc2Vy # base-64 encoded \"scoutUser\"\n  scout-password: c2NvdXRQYXNzd29yZA== # base-64 encoded \"scoutPassword\"\n</code></pre> <p>This secret should be edited to include the real scout-username and scout-password. Note that these fields should be base-64 encoded. To encode these strings you can run the following command: <code>echo -n \"some string\" | base64</code></p> <ol> <li> <p>Create the above secrets with the command: <code>kubectl apply -f scout/containers/kubernetes/secrets.yaml</code></p> </li> <li> <p>Create s ConfigMap for passing setup parameters to Scout pods. This ConfigMap will contain all parameters specified by a python config file. Basic ConfigMap allowing to authenticate to mongodb:</p> </li> </ol> <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: scoutconfig\ndata:\n  config.py: |\n    MONGO_HOST=\"mongodb-service\"\n    MONGO_PORT= 27017\n    MONGO_DBNAME= \"scout-demo\"\n    MONGO_USERNAME= \"scoutUser\"\n    MONGO_PASSWORD= \"scoutPassword\"\n</code></pre> <p>The config parameters should be modified according to the MongoDB connection settings on the server.</p> <ol> <li> <p>Create the configmap with the command: <code>kubectl apply -f scout/containers/kubernetes/scout-configmap.yaml</code></p> </li> <li> <p>Create a Deployment for mongo and a relative service that will run on port 27017. Note that the example file (mongo.yaml) is running a lightweight version image of Mongo (vepo/mongo) and not the official Mongo image. This container can be replaced with any other application that serves a MongoDB using authentication. Run the Deployment and the service: <code>kubectl apply -f scout/containers/kubernetes/mongo.yaml</code></p> </li> </ol>"},{"location":"admin-guide/containers/kubernetes/#deploying-the-scout-command-line","title":"Deploying the Scout command line","text":"<p>To create a running container with the Scout command line can be used a Docker image stored either locally (in that case the Scout Dockerfile should be built first) or on the Docker Hub. This example pulls the latest from Docker Hub to build an interactive pod. Define a scout-cli.yaml file with the following content:</p> <pre><code># Scout pod for running cli commands\napiVersion: v1\nkind: Pod\nmetadata:\n  name: scout-cli\nspec:\n  containers:\n    - name: scout-cli\n      image: clinicalgenomics/scout\n      tty: true\n      volumeMounts:\n      - name: config-vol\n        mountPath: /config\n\n  volumes:\n  - name: config-vol\n    configMap:\n      name: scoutconfig\n</code></pre> <p>Note that the configMap representing the config file is mapped inside \"volumes\". This is necessary to make the content of the config file available to the pod.</p> <ol> <li> <p>Create the pod with the following command: <code>kubectl apply -f scout/containers/kubernetes/scout-cli.yaml</code></p> </li> <li> <p>You can launch a shell from this running container using the command: <code>kubectl exec -it scout-cli -- bash</code></p> </li> <li> <p>From inside the shell, you can run any scout-specific command. For instance to setup the demo database: <code>scout --flask-config /config/config.py setup demo</code> Note that for connecting to the mongo database it is necessary to provide the param --flask-config with the path to the mapped config file on the container.</p> </li> </ol>"},{"location":"admin-guide/containers/kubernetes/#deploying-the-scout-server","title":"Deploying the Scout server","text":"<p>The scout Deployment file (first file included in the scout-web.yaml example) contains the steps to pull the Scout image from Docker Hub, define a volume with the config file, and launching the server on port 5000:</p> <pre><code># Deployment document for Scout web server\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: scout-web-deployment\n  labels:\n    app: scout-web\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: scout-web\n  template:\n    metadata:\n      labels:\n        app: scout-web\n    spec:\n      volumes:\n      - name: config-vol\n        configMap:\n          name: scoutconfig\n      containers:\n      - name: scout-web # serve scout pages using scout-web service\n        image: clinicalgenomics/scout\n        volumeMounts:\n        - name: config-vol\n          mountPath: /config\n        ports:\n        - containerPort: 5000\n        command: [\"scout\"]\n        args: [\"--flask-config\", \"/config/config.py\", \"serve\", \"--host\", \"0.0.0.0\"]\n</code></pre> <p>The second file present in the configuration represents the service that makes the server available to applications outside the container (for example the web browser):</p> <pre><code># External service document\napiVersion: v1\nkind: Service\nmetadata:\n  name: scout-web-service\nspec:\n  selector:\n    app: scout-web\n  type: LoadBalancer\n  ports:\n    - protocol: TCP\n      port: 5000\n      targetPort: 5000\n      nodePort: 30000\n</code></pre> <ol> <li>create a Scout web server Deployment with the command: <code>kubectl apply -f scout/containers/kubernetes/scout-web.yaml</code></li> </ol>"},{"location":"admin-guide/containers/kubernetes/#overview-of-the-running-containers-and-starting-the-minikube-service","title":"Overview of the running containers and starting the minikube service","text":"<ol> <li>After the steps above a number of container should be running on the virtual machine. An overview of all containers together with accessory services and itams will be available using the command:</li> </ol> <pre><code>kubectl get all\n</code></pre> <ol> <li>Start the scout web app service using the command:</li> </ol> <pre><code>minikube service scout-web-service\n</code></pre> <p>This way the app will be accessible in the browser</p>"},{"location":"admin-guide/containers/systemd/","title":"Systemd services of Scout","text":"<ul> <li> Introduction </li> <li> General installation on a Linux distro</li> <li> Fixes for using Fedora CoreOS <ul> <li> Generating the igntion file </li> <li> Run fedora CoreOS using the ignition file </li> </ul> </li> <li> Alternative ways of running Scout </li> </ul>"},{"location":"admin-guide/containers/systemd/#requirements","title":"Requirements","text":"<ul> <li>podman version &gt;= 2.0.4</li> </ul>"},{"location":"admin-guide/containers/systemd/#introduction","title":"Introduction","text":"<p>Scout can be run by installing a few systemd unit files (the text files scout-*.service) into a Linux user's home directory. The Scout software and Mongodb software will then be run in containers from Dockerhub.</p> Systemd service Description scout-pod.service Runs a pod in which the other containers will be running scout-create-datadir.service Creates an empty directory that will be used by Mongodb to store data scout-mongo.service Runs Mongodb in the container docker.io/library/mongo scout-setup-demo.service Loads the demo data by running the container docker.io/clinicalgenomics/scout:latest scout-scout.service Serves the Scout webserver by running the container docker.io/clinicalgenomics/scout:latest <p>It is also possible to run the Scout systemd services in the same way but on a new Fedora CoreOS computer.</p> <p></p>"},{"location":"admin-guide/containers/systemd/#installation-into-the-home-directory-of-a-linux-user","title":"Installation into the home directory of a Linux user","text":"<p>In the Git repo root directory, run</p> <ol> <li>Copy the systemd unit files located under <code>scout/containers/systemd</code> to <code>~/.config/systemd/user</code></li> </ol> <pre><code>mkdir -p ~/.config/systemd/user\ncp scout/containers/systemd/scout-pod.service ~/.config/systemd/user\ncp scout/containers/systemd/scout-create-datadir.service ~/.config/systemd/user\ncp scout/containers/systemd/scout-mongo.service ~/.config/systemd/user\ncp scout/containers/systemd/scout-setup-demo.service ~/.config/systemd/user\ncp scout/containers/systemd/scout-scout.service ~/.config/systemd/user\n</code></pre> <ol> <li>Optional step If you would like to use a locally built scout container instead of the one from dockerhub, run</li> </ol> <pre><code>sed -i 's/docker.io\\/clinicalgenomics\\/scout:latest/localhost\\/scout/g' ~/.config/systemd/user/scout-setup-demo.service\nsed -i 's/docker.io\\/clinicalgenomics\\/scout:latest/localhost\\/scout/g' ~/.config/systemd/user/scout-scout.service\nsed -i '/TimeoutStartSec=/d' ~/.config/systemd/user/scout-setup-demo.service\nsed -i '/TimeoutStartSec=/d' ~/.config/systemd/user/scout-scout.service\n</code></pre> <p>3.</p> <pre><code>systemctl --user daemon-reload\nsystemctl --user enable scout-pod.service\n</code></pre>"},{"location":"admin-guide/containers/systemd/#usage","title":"Usage","text":"<pre><code>systemctl --user start scout-pod.service\nfirefox http://localhost:5000\n</code></pre> <p>To see the status of the services</p> <pre><code>systemctl --user status scout-pod.service scout-create-datadir.service scout-mongo.service scout-setup-demo.service scout-scout.service\n</code></pre> <p>If you would like the services to start automatically after a reboot of your computer, run</p> <pre><code>loginctl enable-linger $USER\n</code></pre> <p>If the above command should fail due to permission issues, run it as superuser (sudo).</p> <p></p>"},{"location":"admin-guide/containers/systemd/#using-fedora-coreos","title":"Using Fedora CoreOS","text":""},{"location":"admin-guide/containers/systemd/#generating-the-ignition-file-scoutign","title":"Generating the Ignition file scout.ign","text":"<p>To start Fedora CoreOS, the Ignition file scout.ign is needed. It is generated from from the input file <code>scout/containters/systemd/scout.fcc</code> with the command</p> <pre><code>podman run --rm -v ./systemd:/input:Z quay.io/coreos/fcct:release --pretty --strict -d /input /input/scout.fcc &gt; ./scout.ign\n</code></pre> <p>(run from the root directory of the Scout repository)</p> <p>Before generating scout.ign, please edit scout.fcc and replace the ssh public key with your ssh public key.</p> <p>It is possible to automate the generation of scout.ign with a GitHub Actions workflow so that it is downloadable from GitHub pages (e.g. https://&lt; username &gt;.github.io/scout/scout.ign)</p> <p>This GitHub Actions workflow generates such an Ignition file:</p> <pre><code>name: Run Fedora CoreOS Configuration Transpiler\non:\n  push:\n    branch:\n      - master\n\njobs:\n  run_fcct:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v5\n      - run: |\n          mkdir output\n      - uses: docker://quay.io/coreos/fcct:release\n        with:\n          args: --pretty --strict -d ./systemd -o output/scout.ign systemd/scout.fcc\n      - uses: actions/upload-artifact@v4\n        with:\n          name: scout.ign\n          path: output/scout.ign\n      - name: deploy\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          github_token: ${{ secrets.GITHUB_TOKEN }}\n          publish_dir: ./output\n</code></pre> <p>References: * https://github.com/coreos/fcct * https://github.com/coreos/fcct/blob/master/docs/specs.md</p> <p></p>"},{"location":"admin-guide/containers/systemd/#using-the-generated-ignition-file-to-run-fedora-coreos","title":"Using the generated Ignition file to run Fedora CoreOS","text":"<p>The Ignition file scout.ign can be used to run Scout in different ways:</p> <ul> <li>AWS</li> <li>Azure</li> <li>DigitalOcean</li> <li>Exoscale</li> <li>GCP</li> <li>libvirt</li> <li>QEMU</li> <li>VMware</li> <li>Vultr</li> <li>Run in Live mode from USB stick</li> <li>Install from USB stick</li> </ul> <p>Fedora CoreOS documentation: https://docs.fedoraproject.org/en-US/fedora-coreos/</p> <p>See for instance User guides -&gt; Provisioning Machines</p> <p></p>"},{"location":"admin-guide/containers/systemd/#run-scout-in-live-mode-in-ram-memory-from-a-usb-stick","title":"Run Scout in live mode in RAM memory from a USB stick","text":"<p>Download the Bare metal ISO from</p> <p>https://getfedora.org/en/coreos/download?tab=metal_virtualized&amp;stream=next</p> <p>Either stop grub in the early boot phase and append the kernel argument <code>ignition.config.url=https://example.com/scout.ign</code> (adjust URL)</p> <p>or alternatively embed the ignition file scout.ign into the ISO before writing it to the USB stick</p> <pre><code>cat scout.ign | coreos-installer iso embed file.iso\n</code></pre>"},{"location":"admin-guide/containers/systemd/#run-scout-on-aws","title":"Run Scout on AWS","text":"<p>Doc: https://docs.fedoraproject.org/en-US/fedora-coreos/provisioning-aws/</p> <p>A sketch (untested)</p> <pre><code>aws ec2 run-instances &lt;other options&gt; --image-id &lt;ami&gt; --user-data file://scout.ign\n</code></pre>"},{"location":"admin-guide/containers/systemd/#run-scout-in-a-vm-on-an-ubuntu-2004-host-with-virt-install","title":"Run Scout in a VM on an Ubuntu 20.04 host with virt-install","text":"<p>Assume you are logged in as the user mytest</p> <pre><code>mytest@laptop:~$  cat /etc/issue\nUbuntu 20.04.1 LTS \\n \\l\n\nmytest@laptop:~$\n</code></pre> <p>Download and decompress</p> <pre><code>mytest@laptop:~$ wget https://builds.coreos.fedoraproject.org/prod/streams/next/builds/32.20200901.1.0/x86_64/fedora-coreos-32.20200901.1.0-qemu.x86_64.qcow2.xz\nmytest@laptop:~$ unxz fedora-coreos-32.20200901.1.0-qemu.x86_64.qcow2.xz\n</code></pre> <p>Add the line</p> <pre><code> /home/mytest/scout.ign rk\n</code></pre> <p>for Apparmor</p> <pre><code>mytest@laptop:~$ sudo cat /etc/apparmor.d/libvirt/TEMPLATE.qemu\n#\n# This profile is for the domain whose UUID matches this file.\n#\n\n#include &lt;tunables/global&gt;\n\nprofile LIBVIRT_TEMPLATE flags=(attach_disconnected) {\n  #include &lt;abstractions/libvirt-qemu&gt;\n}\nmytest@laptop:~$ sudo nano /etc/apparmor.d/libvirt/TEMPLATE.qemu\nmytest@laptop:~$ sudo cat /etc/apparmor.d/libvirt/TEMPLATE.qemu\n#\n# This profile is for the domain whose UUID matches this file.\n#\n\n#include &lt;tunables/global&gt;\n\nprofile LIBVIRT_TEMPLATE flags=(attach_disconnected) {\n  #include &lt;abstractions/libvirt-qemu&gt;\n /home/mytest/scout.ign rk,\n}\nmytest@laptop:~$\n</code></pre> <pre><code>mytest@laptop:~$ virt-install --connect qemu:///system -n firsttest -r \"2048\" --os-variant=fedora31 --import --graphics=none --disk \"size=15,backing_store=/home/mytest/fedora-coreos-32.20200824.1.0-qemu.x86_64.qcow2\"         --qemu-commandline=\"-fw_cfg name=opt/com.coreos/config,file=/home/mytest/scout.ign\"\n</code></pre> <p>The IP address is printed on the screen the installation. Another way to list the IP address, is to run the command <code>virsh net-dhcp-leases default</code></p> <pre><code>mytest@laptop:~$ virsh net-dhcp-leases default\n Expiry Time           MAC address         Protocol   IP address           Hostname   Client ID or DUID\n------------------------------------------------------------------------------------------------------------\n 2020-09-02 21:57:10   52:54:00:88:3c:a3   ipv4       192.168.122.237/24   -          01:52:54:00:88:3c:a3\n</code></pre> <p>Download the Scout web page</p> <pre><code>mytest@laptop:~$ curl -s http://192.168.122.90:5000 | head -1\n&lt;!DOCTYPE html&gt;\nmytest@laptop:~$\n</code></pre>"},{"location":"admin-guide/containers/systemd/#erase-computer-and-install-scout-instead","title":"Erase computer and install Scout instead","text":"<p>:warning: This will erase the harddrive of the computer.</p> <p>In case you want to install to the drive /dev/sda append the kernel arguments</p> <ul> <li><code>coreos.inst.install_dev=/dev/sda</code></li> <li><code>coreos.inst.ignition_url=https://example.com/scout.ign</code></li> </ul>"},{"location":"admin-guide/containers/systemd/#add-users-to-scout","title":"Add users to Scout","text":"<p>A sketch (untested)</p> <p>1.</p> <pre><code>ssh -i ssh_private_key core@&lt;IPADDRESS OF FEDORA-COREOS-MACHINE&gt;\n</code></pre> <p>2.</p> <pre><code>podman exec scout-scout scout load user -i $INSTID -u $NAME -id $ADID -m $USERMAIL $ADMIN\n</code></pre> <p>or maybe</p> <pre><code>podman exec -ti scout-scout scout load user -i $INSTID -u $NAME -id $ADID -m $USERMAIL $ADMIN\n</code></pre>"},{"location":"admin-guide/display-data/cases/","title":"Display Cases from the database","text":"<p>Use CLI <code>scout view cases</code></p>"},{"location":"admin-guide/reference-sets/genes_transcripts/","title":"Downloading resources to build reference sets","text":"<p>For all of the ensembl downloads we choose filters chr 1-22, X, Y, MT and only genes with hgnc identifier</p>"},{"location":"admin-guide/reference-sets/genes_transcripts/#ensembl-genes","title":"Ensembl genes","text":"<p>We collect coordinate infromation about genes from ensembl. There are two gene files, one for each build in <code>scout/resources</code> these are named <code>ensembl_genes_37.tsv.gz</code> and <code>ensembl_genes_38.tsv.gz</code>.</p> <p>If for any reason an admin want to replace/update these files they are collected from ensembl BIOMART with the following choices made:</p> <ul> <li>Chromosome/scaffold name</li> <li>Gene stable ID</li> <li>Chromosome/scaffold name</li> <li>Gene start (bp)</li> <li>Gene end (bp)</li> </ul> <p>from EXTERNAL:</p> <ul> <li>HGNC ID</li> </ul> <p>The link between different resources are made via HGNC id which is the most stable gene identifier</p>"},{"location":"admin-guide/reference-sets/genes_transcripts/#ensembl-transcripts","title":"Ensembl transcripts","text":"<p>Same as above, we collect information about coordinates and refseq from ensembl. There are two files here as well: <code>ensembl_transcripts_37.tsv.gz</code> and <code>ensembl_transcripts_38.tsv.gz</code>.</p> <p>Those are collected by choosing the following information:</p> <ul> <li>Chromosome/scaffold name</li> <li>Gene stable ID</li> <li>Transcript stable ID</li> <li>Transcript start (bp)</li> <li>Transcript end (bp)</li> </ul> <p>from EXTERNAL:</p> <ul> <li>RefSeq mRNA ID</li> <li>RefSeq mRNA predicted ID</li> <li>RefSeq ncRNA ID</li> </ul>"},{"location":"admin-guide/reference-sets/genes_transcripts/#ensembl-exons","title":"Ensembl exons","text":"<p>Choose attributes then structures. Under GENE choose:</p> <ul> <li>Chromosome/scaffold name</li> <li>Gene stable ID</li> <li>Transcript stable ID</li> <li>Strand</li> <li>5' UTR start</li> <li>5' UTR end</li> <li>3' UTR start</li> <li>3' UTR end</li> </ul> <p>Under EXON choose:</p> <ul> <li>Exon region start (bp)</li> <li>Exon region start (bp)</li> <li>Exon rank in transcript</li> </ul> <p>Under FILTERS/Gene choose</p> <ul> <li>Limit to genes with HGNC Symbol ID(s)</li> </ul> <p>click results and then download</p>"},{"location":"admin-guide/reference-sets/genes_transcripts/#ensembl-genes-and-transcripts","title":"Ensembl genes and transcripts","text":"<p>Choose attributes then structures. Under GENE choose:</p> <ul> <li>Chromosome/scaffold name</li> <li>Gene stable ID</li> <li>Transcript stable ID</li> <li>Gene start (bp)</li> <li>Gene end (bp)</li> <li>Transcript start (bp)</li> <li>Transcript end (bp)</li> <li>Gene name</li> </ul> <p>Under EXTERNAL the External References choose:</p> <ul> <li>RefSeq mRNA ID</li> <li>RefSeq mRNA predicted ID</li> <li>RefSeq ncRNA ID</li> </ul> <p>Under FILTERS/Gene choose</p> <ul> <li>Limit to genes with HGNC Symbol ID(s)</li> </ul> <p>click results and then download</p>"},{"location":"blog/new-3.0/","title":"Whats new in 3.0?","text":""},{"location":"blog/new-3.0/#whats-new-in-30","title":"What's new in 3.0?","text":"<p>Posted: 11 April 2017</p> <p></p> <p>This updates includes a lot of optimizations to improve performance. We've made significant efforts to make sure the way we store information in the database will scale up with additional features in the future. Here are the highlights:</p>"},{"location":"blog/new-3.0/#more-responsive-interface","title":"More responsive interface","text":"<p>Loading pages in the web interface is now much faster. You will notice the case view and variants list show up almost instantly!</p>"},{"location":"blog/new-3.0/#easy-access-to-coverage-report-pdf","title":"Easy access to coverage report PDF","text":"<p>You can now download the coverage report as a PDF directly form the case page with one click!</p>"},{"location":"blog/new-3.0/#revamped-gene-panel-view","title":"Revamped gene panel view","text":"<p>When accessing a gene panel you will now see the information regarding disease causing transcripts, reduced penetrance etc. related to each gene. You can also handle updated to the panels directly from this interface. Just add, remove, edit existing genes and commit your changes to automatically update the panel.</p>"},{"location":"blog/new-3.0/#updated-variant-page","title":"Updated variant page","text":"<p>We've made some tweaks to the variant page like moving the OMIM inheritance model to the OMIM panel, linked to each phenotype.</p>"},{"location":"blog/new-3.0/#multiple-refseq-transcripts","title":"Multiple RefSeq transcripts","text":"<p>The HGNC based gene definitions have been updated. One key difference is that there we can now have multiple RefSeq transcripts per Ensembl transcript ID.</p>"},{"location":"blog/new-3.1/","title":"Whats new in 3.1?","text":""},{"location":"blog/new-3.1/#whats-new-in-31","title":"What's new in 3.1?","text":"<p>Posted: 27 April 2017</p> <p>This updates contains many bug fixes and a few new features.</p>"},{"location":"blog/new-3.1/#new-feature-cohort-tag","title":"New feature: cohort tag","text":"<p>We have introduced \"cohort tags\", where you can tag each case as belonging to one or several cohorts.</p> <p>Future release of Scout will include functionality to get statistics on selected cohorts or all cases. For instance, you will be able to get statistics on the number of samples within a cohort, how many are cases solved and which genes there were causative variants in. Or perhaps you want to know which phenotype terms are associated with a particular cohort.</p> <p>For now, the cohort tags are specific to CMMS, but we urge all user to supply to us their own set of tags to be used within the corresponding Scout instance. This applies to phenotype groups as well as we think this will be very useful in future to describe your cohorts clinically.</p>"},{"location":"blog/new-3.1/#new-feature-pip-distribution","title":"New feature: pip distribution","text":"<p>Scout is now installable via <code>pip</code>! This means installing the server and CLI is as simple as running:</p> <pre><code>pip install scout-browser\n</code></pre> <p>Everything to setup the server; genes, HPO terms, OMIM information, etc. is included in the distribution.</p>"},{"location":"blog/new-3.1/#bug-fixes","title":"Bug fixes","text":"<ul> <li>Compounds are now sorted on combined score</li> <li>The delivery report opens in a new tab</li> <li>A link from the variant page to the gene panel exists</li> <li>Cases are properly activated when variants are first viewed</li> <li>Fixed display of HGVS description</li> <li>Fixed issues with Sanger email</li> <li>Support for a new analysis type: TGA, Targeted Genome Analysis</li> <li>Fixed issue with filtering on 1000G frequency</li> </ul>"},{"location":"blog/new-3.2/","title":"Whats new in 3.2?","text":""},{"location":"blog/new-3.2/#whats-new-in-32","title":"What's new in 3.2?","text":"<p>Posted: 3 May 2017</p>"},{"location":"blog/new-3.2/#new-feature-frequency-links","title":"New feature: Frequency links","text":"<p>We have added several frequency resources links to the variant frequency table on the variants page.</p> <ul> <li> <p>Beacon: enabled searches in the global beacon network</p> <p>Note: this is only outgoing queries and does not expose any variants in Scout.</p> </li> <li> <p>GnomeAD: the new version of EXAC, which includes approximately 120,000 exomes and 15,000 genomes. We will include gnomeAD in the MIP analysis and the rank model in a future update, but the gnomeAD browser is available from Scout now.</p> </li> <li> <p>SweGen: frequencies from 1000 Swedish genomes sampled from the twin registry. Created by SciLifeLab.</p> </li> <li> <p>LocusDB family link: It is now possible to see in, which other families a variant in LocusDB were detected.</p> </li> </ul>"},{"location":"blog/new-3.2/#new-feature-upload-all-variants-for-a-region-or-a-gene","title":"New feature: Upload all variants for a region or a gene","text":"<p>We have done some work on the variant uploads for this release. This also means that we are now ready to accept requests to upload additional variants for a custom gene or a region. For now you can raise it by submitting a ticket in the ticketing system while we work out how to better integrate it in Scout.</p>"},{"location":"blog/new-3.2/#new-feature-upload-new-gene-panel","title":"New feature: Upload new gene panel","text":"<p>You can now upload a new gene panel directly in Scout. You will need a semi-colon (<code>;</code>) separated file following the format:</p> <pre><code>HGNC_symbol;HGNC_IDnumber;Disease_associated_transcript;Genetic_disease_model;Reduced_penetrance;Mosaicism;Clinical_db_gene_annotation\nANKS6;26724;NM_173551.3;AR;;;PEDHEP\nXPNPEP3;28052;NM_022098.3;AR;;;PEDHEP\nDCDC2;18141;NM_016356.4;AR;;;PEDHEP\nCLDN1;2032;NM_021101.4;AR;;;PEDHEP\n...\n</code></pre>"},{"location":"blog/new-3.3/","title":"Whats new in 3.3?","text":""},{"location":"blog/new-3.3/#whats-new-in-33","title":"What's new in 3.3?","text":"<p>Posted: 2 Aug 2017</p> <p>Hey Scout-users! It's time for a new update and with quite a few features this time \ud83d\ude03</p>"},{"location":"blog/new-3.3/#acmg-classifications","title":"ACMG classifications!","text":"<p>The flagship feature addition is the new ACMG classification interface. You can get to it from any variant. It will take you first to a page where you fill in evidence which Scout uses to calculate a classification - you can, however, override this later! We store a history of all classifications for a variant if it's updated later.</p> <p>Please try it out and get back to us with your feedback!</p>"},{"location":"blog/new-3.3/#new-users-view","title":"New users view","text":"<p>We've added a new views for displaying all users of Scout. You can see name, email, and which institutes they belong to if you need to contact someone. We also introduced a \"rank\" based on how much you interact with Scout! Check out how you are doing here: Scout Users.</p>"},{"location":"blog/new-3.3/#more-new-features","title":"More new features:","text":"<ol> <li>Cases are now listed by status in separate groups - only the latest 100 cases are listed!</li> <li>Upload of gene panel export</li> <li>Dynamic gene panel is back! You can now upload a list of HGNC symbols to do a temporary search</li> <li>Scout will now display exon as well as intron number in the Sanger email</li> <li>You can now filter variants on local observations in the SNV view and they will show up in the popup</li> <li>Scout will now display if a variant is in the PAR region or not</li> <li>You can now update the default gene panels directly in Scout - no need to rerun!</li> <li>We've added labels to the variant tags according to proposed example from CMMS</li> <li>If variant is in an autozygocity block it will now be displayed</li> </ol>"},{"location":"blog/new-3.3/#bug-fixes","title":"Bug fixes","text":"<ol> <li>A warning is now displayed is you search for a gene symbol that doesn't exist in Scout</li> <li>When filtering on frequencies, Scout now handles input as \"0,04\" and \"0.04\"</li> <li>We will now use coordinates instead of gene identifier when looking for overlapping SV/SNV variants</li> <li>Scout now correctly displays a notice if a variant has been commented on</li> <li>CLINSIG annotations are now properly displayed!</li> <li>We've fixed display of expected inheritance model on variant page</li> </ol>"},{"location":"blog/new-3.3/#future-updates","title":"Future updates","text":"<p>We have prepared additional features which will not immediately show up in Scout but might require e.g. an update to MIP.</p> <ol> <li>New cancer view: we've added rudimentary support for display cancer variants in Scout as a separate view much like the SV view.</li> <li>We've added support for displaying information from Peddy such as confirmed parenthood, sex, and predicted ancestry</li> </ol> <p>Hope you've had a great summer!</p>"},{"location":"blog/new-3.4/","title":"Whats new in 3.4?","text":""},{"location":"blog/new-3.4/#whats-new-in-34","title":"What's new in 3.4?","text":"<p>Posted: 19 Sep 2017</p> <p>Time for a new update - this time without any major changes</p>"},{"location":"blog/new-3.4/#new-features","title":"New features","text":"<ul> <li>Aggregate dashboard: view global statistics like how many cases have been solved in Scout?</li> <li>Pin and mark SV variants, thanks @dnil!</li> <li>Gene view: information is now displayed for both build GRCh37 and GRCh38</li> <li>you can now filter genes by HGNC id as well as HGNC symbol</li> <li>new popup with variant comments, thanks @dnil!</li> <li>we now store more information about previous analyses for every case like delivery report</li> <li>the gene panel update function has been improved and the documentation is also up-to-date!</li> </ul>"},{"location":"blog/new-3.4/#fixes","title":"Fixes","text":"<ul> <li>worked to improve the documentation in general</li> <li>fixed issue that made commenting on a variant fail</li> <li>cases will now change status from \"solved\" when unmarking causative</li> <li>fixed a bug with the ClinSig filter, thanks @dnil!</li> <li>the order of ACMG classification and criteria is now correct</li> <li>you can now toggle a selected ACMG classification on/off</li> <li>the OMIM inheritance concordance is now fixed</li> </ul>"},{"location":"blog/new-3.5/","title":"Whats new in 3.5?","text":""},{"location":"blog/new-3.5/#whats-new-in-35","title":"What's new in 3.5? \ud83c\udf41","text":"<p>Posted: 13 Nov 2017</p> <p>The November update includes the following highlights:</p>"},{"location":"blog/new-3.5/#new-features","title":"New features","text":"<ul> <li>You can now add an entirely NEW gene panel directly from Scout \ud83c\udd95</li> </ul> <ul> <li> <p>Scout now uploads ALL variants on the mitochondrial chromosome (MT) - independently of rank score</p> </li> <li> <p>Improvements to SV variant view:</p> </li> <li>New frequencies: ClinGen CGH and Decipher</li> <li>Callers are displayed under GT call table</li> <li>You can now tag (variant tag) and comment on SV variants</li> <li>Gene panels now are now displayed</li> <li> <p>\"n.d.\" (Not Determined) is now displayed when the variant length is unknown</p> </li> <li> <p>We now report if you filtered for a gene in the clinical list which isn't part of any gene panel</p> </li> </ul> <p></p>"},{"location":"blog/new-3.5/#bugfixes","title":"Bugfixes","text":"<ul> <li>Versions of transcripts are now kept for \"disease causing transcripts\" in the panels</li> <li>Ensembl transcript will now display in overview if no RefSeq transcript exists</li> <li>You can now reset the variant tag</li> <li>You can now filter variants on both HGNC ID and symbol</li> <li>We fixed an issue related to showing matching causative variants for a case</li> <li>Filtering on local observations will now include variant without any such annotations</li> </ul>"},{"location":"blog/new-4.0.0/","title":"Whats new in 4.0?","text":""},{"location":"blog/new-4.0.0/#whats-new-in-400","title":"What's new in 4.0.0? \ud83c\udf41","text":"<p>Posted: 15 June 2018</p> <p>This major update includes the following highlights:</p>"},{"location":"blog/new-4.0.0/#new-features","title":"New features","text":"<ul> <li>Finally!! There will always be a downloadable case report available at case page (great stuff @northwestwitch)\ud83e\udd84</li> </ul> <ul> <li> <p>Scout now uploads ALL variants from the mitochondrial chromosome (MT) - independently of rank score both for clinical and research variants</p> </li> <li> <p>Filter on spidex levels are now available</p> </li> <li> <p>Filter on chromosome is possible, mainly to get easy access to MT variants</p> </li> <li> <p>It is possible to produce a clinvar submission files from the case page that could be used to submit variants to clinvar</p> </li> <li> <p>All existing HPO terms now lives in scout. They should also be presented in a more relevant order when searched for</p> </li> <li> <p>Users can choose how many cases that should be displayed on case page (thanks @dnil \ud83d\udc1d)</p> </li> </ul>"},{"location":"blog/new-4.0.0/#bugfixes","title":"Bugfixes","text":"<ul> <li>Clinvar annotations are back!</li> <li>Compound links will work when all compounds are uploaded for a region</li> <li>Sanger order can be removed</li> <li>Polyphen annotation is back</li> </ul> <p>There are many more things that has been worked on \"under the hood\", we hope that you will have a better experience with Scout.</p>"},{"location":"blog/new-4.17/","title":"Whats new in 4.17?","text":""},{"location":"blog/new-4.17/#whats-new-in-417","title":"What's new in 4.17? \ud83c\udf41","text":"<p>Posted: 3 Jun 2020</p> <p>Minor release 4.17 and its patch (4.17.1) introduce the following new features/bugfixes:</p>"},{"location":"blog/new-4.17/#new-features","title":"New features","text":"<ul> <li>COSMIC badge shown in cancer variants</li> <li>Default gene-panel in non-cancer structural view in url (thanks @ViktorHy)</li> <li>Filter SNVs and SVs by cytoband coordinates (read  here  how to enable the functionality)</li> <li>Filter cancer SNV variants by alt allele frequency in tumor</li> <li>Correct genome build in UCSC link from structural variant page (much appreciated @ViktorHy)</li> </ul>"},{"location":"blog/new-4.17/#bugfixes","title":"Bugfixes","text":"<ul> <li>Bug in clinVar form when variant has no gene</li> <li>Bug when sharing cases with the same institute twice</li> <li>Page crashing when removing causative variant tag</li> <li>Do not default to GATK caller when no caller info is provided for cancer SNVs</li> </ul>"},{"location":"blog/new-4.17/#loading-chromosome-cytobands-to-use-them-in-variant-filtering","title":"Loading chromosome cytobands to use them in variant filtering","text":"<p>Cytoband files for genome builds GRCh37 and GRCh38 (37 and and 38 in Scout) are provided in resources folder. In order to use cytoband filtering in variants (SNV/Indels or structural variants), cytoband coordinates should be loaded to Scout database</p> <p>Cytoband database collection is automatically populated when a new Scout setup is initiated using the command:</p> <pre><code>scout setup database\n\n</code></pre> <p>To load cytobands in a Scout database already containing data, from the command line simply type:</p> <pre><code>scout load cytobands\n</code></pre>"},{"location":"blog/new-4.18/","title":"Whats new in 4.18?","text":""},{"location":"blog/new-4.18/#whats-new-in-418","title":"What's new in 4.18? \ud83c\udf41","text":"<p>Posted: 18 Jun 2020</p> <p>One of the most important changes introduced in this version is that we have switched from a Google login system based on Flask-OAuthlib to Authlib libraries. In order to support the new login system Scout administrators would need to modify the config settings as described in this updated guide.</p> <p>This is a complete list of all changes introduced in this new release:</p>"},{"location":"blog/new-4.18/#418","title":"[4.18]","text":""},{"location":"blog/new-4.18/#new-features","title":"New features","text":"<ul> <li>Filter cancer variants on cytoband coordinates</li> <li>Show dismiss reasons in a badge with hover for clinical variants</li> <li>Show an ellipsis if 10 cases or more to display with loqusdb matches</li> <li>A new blog post for version 4.17</li> <li>Tooltip to better describe Tumor and Normal columns in cancer variants</li> <li>Filter cancer SNVs and SVs by chromosome coordinates</li> <li>Default export of <code>Assertion method citation</code> to clinVar variants submission file</li> <li>Button to export up to 500 cancer variants, filtered or not</li> <li>Rename samples of a clinVar submission file</li> </ul>"},{"location":"blog/new-4.18/#bugfixes","title":"Bugfixes","text":"<ul> <li>Apply default gene panel on return to cancer variantS from variant view</li> <li>Revert to certificate checking when asking for Chanjo reports</li> <li><code>scout download everything</code> command failing while downloading HPO terms</li> </ul>"},{"location":"blog/new-4.18/#changes","title":"Changes","text":"<ul> <li>Turn tumor and normal allelic fraction to decimal numbers in tumor variants page</li> <li>Moved clinVar submissions code to the institutes blueprints</li> <li>Changed name of clinVar export files to FILENAME.Variant.csv and FILENAME.CaseData.csv</li> <li>Switched Google login libraries from Flask-OAuthlib to Authlib</li> </ul>"},{"location":"blog/new-4.19/","title":"Whats new in 4.19?","text":""},{"location":"blog/new-4.19/#whats-new-in-419","title":"What's new in 4.19? \ud83c\udf41","text":"<p>Posted: 8 July 2020</p> <p>The biggest difference from previous versions is a new institute page exposing in a clear way links to pages that before were a bit hidden in the structure of the portal. This will hopefully make the navigation more user friendly!</p> <p>This is a complete list of all changes introduced in this new release:</p>"},{"location":"blog/new-4.19/#419","title":"[4.19]","text":""},{"location":"blog/new-4.19/#added","title":"Added","text":"<ul> <li>Show internal ID for case</li> <li>Add internal ID for downloaded CGH files</li> <li>Export dynamic HPO gene list from case page</li> <li>Remove users as case assignees when their account is deleted</li> <li>Keep variants filters panel expanded when filters have been used</li> </ul>"},{"location":"blog/new-4.19/#fixed","title":"Fixed","text":"<ul> <li>Handle the ProxyFix ModuleNotFoundError when Werkzeug installed version is &gt;1.0</li> <li>General report formatting issues whenever case and variant comments contain extremely long strings with no spaces</li> </ul>"},{"location":"blog/new-4.19/#changed","title":"Changed","text":"<ul> <li>Created an institute wrapper page that contains list of cases, causatives, SNVs &amp; Indels, user list, shared data and institute settings</li> <li>Display case name instead of case ID on clinVar submissions</li> <li>Changed icon of sample update in clinVar submissions</li> </ul>"},{"location":"blog/new-4.20/","title":"Whats new in 4.20?","text":""},{"location":"blog/new-4.20/#whats-new-in-420","title":"What's new in 4.20?","text":"<p>Posted: August 18 2020</p> <p>This is a relatively small release justified by a fix to a problem affecting only the delivery of results to our users at Clinical Genomics, SciLifeLab Stockholm. Due to an update in our pipeline, cram alignments were not visible any more because the path to these files was replaced by the path to reduced mitochondrial alignments.</p> <p>This is fixed in this release.</p> <p>Scout version 4.20 contains additionally a number of new features. This is the complete list of changes introduced from the previous one:</p>"},{"location":"blog/new-4.20/#420","title":"[4.20]","text":""},{"location":"blog/new-4.20/#added","title":"Added","text":"<ul> <li>Display number of filtered variants vs number of total variants in variants page</li> <li>Search case by HPO terms</li> <li>Dismiss variant column in the variant tables.</li> <li>Black and pre-commit packages to dev requirements</li> </ul>"},{"location":"blog/new-4.20/#fixed","title":"Fixed","text":"<ul> <li>Bug occurring when rerun is requested twice</li> <li>Peddy info fields in the demo config file</li> <li>Added load config safety check for multiple alignment files for one individual</li> </ul>"},{"location":"blog/new-4.20/#changed","title":"Changed","text":"<ul> <li>Updated the documentation on how to create a new software release</li> <li>Genome build-aware cytobands coordinates</li> <li>Styling update of the Matchmaker card</li> <li>Select search type in case search form</li> </ul>"},{"location":"blog/new-4.34/","title":"Whats new in 4.34?","text":""},{"location":"blog/new-4.34/#whats-new-in-434","title":"What's new in 4.34?","text":"<p>Posted: May 17 2021</p> <p>This is a relatively large release, forced out by the need to fix a problem affecting gene panels with outdated gene symbols starting in v4.21.</p>"},{"location":"blog/new-4.34/#gene-panel-hgnc-symbol-search-bug","title":"Gene panel HGNC symbol search bug","text":"<p>The 4.21 update allowed freer use of gene panels as lists, as well as the application of the latest version of the panel to each case. HGNC symbols were previously handled by a separate mechanism, and subject to some validation checks. Regrettably, HGNC symbols were taken as correct from the panels. This led to a situation where if the gene symbol had been updated in HGNC but not on the latest panel version, variants in that gene could be missed on panel search. This is fixed in this release, and we now always use the HGNC id behind the scenes for panel searches as well as manually entered HGNC symbol searches.</p> <p>If you are on another instance than Solna, and want to check your database for panels, genes, cases and variants that could have been so compromised, please find a new script in the scripts directory that you can modify to reflect your deploy date of 4.21.</p>"},{"location":"blog/new-4.34/#other-features","title":"Other features","text":"<ul> <li>Flask2 has been released very recently, and the codebase was updated to support the new version</li> <li>Saved filters can now be locked, preventing accidental deletion. This will be useful also for e.g. cancer and other pre-prescribed triage schemes.</li> <li>Saved filters can now be marked audited, leaving a line in the case event audit log, as well as on the general report. The analyst can so mark what filters were applied and tried on the cases, communicating e.g. that both a stringent and less stringent quality filter has been tried,   or say both AD_denovo, homozygous recessive and compound recessive variants were indeed checked.</li> <li>Several features have been added to cancer filters and the cancer variantS view has been refurbished and harmonized between Lund and Solna. Expect more similar efforts in the next few releases!</li> </ul> <p>Scout version 4.34 contains additionally a number of new features. This is the complete list of changes introduced from the previous one:</p>"},{"location":"blog/new-4.34/#434-changelog","title":"[4.34] CHANGELOG","text":""},{"location":"blog/new-4.34/#added","title":"Added","text":"<ul> <li>Saved filter lock and unlock</li> <li>Filters can optionally be marked audited, logging the filter name, user and date on the case events and general report.</li> <li>Added <code>ClinVar hits</code> and <code>Cosmic hits</code> in cancer SNVs filters</li> <li>Added <code>ClinVar hits</code> to variants filter (rare disease track)</li> <li>Load cancer demo case in docker-compose files (default and demo file)</li> <li>Inclusive-language check using woke github action</li> <li>Add link to HmtVar for mitochondrial variants (if VCF is annotated with HmtNote)</li> <li>Grey background for dismissed compounds in variants list and variant page</li> <li>Pin badge for pinned compounds in variants list and variant page</li> <li>Support LoqusDB REST API queries</li> <li>Add a docker-compose-matchmaker under scout/containers/development to test matchmaker locally</li> <li>Script to investigate consequences of symbol search bug</li> </ul>"},{"location":"blog/new-4.34/#fixed","title":"Fixed","text":"<ul> <li>Make MitoMap link work for hg38 again</li> <li>Export Variants feature crashing when one of the variants has no primary transcripts</li> <li>Redirect to last visited variantS page when dismissing variants from variants list</li> <li>Improved matching of SVs Loqus occurrences in other cases</li> <li>Remove padding from the list inside (Matching causatives from other cases) panel</li> <li>Pass None to get_app function in CLI base since passing script_info to app factory functions was deprecated in Flask 2.0</li> <li>Fixed failing tests due to Flask update to version 2.0</li> <li>Speed up user events view</li> <li>Causative view sort out of memory error</li> <li>Use hgnc_id for gene filter query</li> <li>Typo in case controllers displaying an error every time a patient is matched against external MatchMaker nodes</li> <li>Do not crash while attemping an update for variant documents that are too big (&gt; 16 MB)</li> <li>Old STR causatives may not have HGNC symbols - fix sort lambda</li> </ul>"},{"location":"blog/new-4.34/#changed","title":"Changed","text":"<ul> <li>Remove parsing of case <code>genome_version</code>, since it's not used anywhere downstream</li> <li>Introduce deprecation warning for Loqus configs that are not dictionaries</li> <li>SV clinical filter no longer filters out sub 100 nt variants</li> <li>Count cases in LoqusDB by variant type</li> <li>Commit pulse repo badge temporarily set to weekly</li> <li>Sort ClinVar submissions objects by ascending \"Last evaluated\" date</li> <li>Refactored the MatchMaker integration as an extension</li> <li>Replaced some sensitive words as suggested by woke linter</li> <li>Documentation for load-configuration rewritten.</li> <li>Add styles to MatchMaker matches table</li> </ul>"},{"location":"blog/new-4.67/","title":"Whats new in 4.67?","text":""},{"location":"blog/new-4.67/#whats-new-in-467","title":"What's new in 4.67?","text":"<p>Posted: April 6 2023</p> <p>This is a small release but adressing a recent problem affecting the clinical filter in particular of structural variants. Since VEP introduced a few new SO terms for functional annotation, and we introduced them to Scout and MIP this autumn, sometimes new causative variants have not been found with the clinical filter. Unfortunately the term <code>splice_polypyrimidine_tract_variant</code> has a slightly higher score than <code>coding_sequence_variant</code> - which is in clinical filter - in combination with filtering on <code>most_severe_consequence</code> rather than all transcript consequence can lead to missing variants that should have been found. Recognising that <code>splice_polypyrimidine_tract_variant</code> is most often insignificant for an SNV but more important in an SV, we have introduced an SV specific SO severity list, that contains this term, into the clinical filter.</p>"},{"location":"blog/new-4.67/#other-features","title":"Other features","text":"<p>Scout version 4.67 contains additional new features. This is the complete list of changes introduced from the previous one:</p>"},{"location":"blog/new-4.67/#467-changelog","title":"[4.67] CHANGELOG","text":""},{"location":"blog/new-4.67/#added","title":"Added","text":"<ul> <li>Prepare to filter local SV frequency</li> </ul>"},{"location":"blog/new-4.67/#changed","title":"Changed","text":"<ul> <li>Clinical Filter for SVs includes <code>splice_polypyrimidine_tract_variant</code> as a severe consequence</li> <li>Clinical Filter for SVs includes local variant frequency freeze (\"old\") for filtering, starting at 30 counts</li> </ul>"},{"location":"blog/new-4.7.2/","title":"Whats new in 4.7.2?","text":""},{"location":"blog/new-4.7.2/#whats-new-in-472","title":"What's new in 4.7.2? \ud83c\udf41","text":"<p>Posted: 2 October 2019</p> <p>This minor update includes the following highlights:</p>"},{"location":"blog/new-4.7.2/#new-features","title":"New features","text":"<ul> <li>Show earlier ACMG classification in the variant list (Thanks @bjhall!)</li> </ul>"},{"location":"blog/new-4.7.2/#bugfixes","title":"Bugfixes","text":"<ul> <li>Fixed igv search not working due to igv.js dist 2.2.17</li> <li>Fixed searches for cases with a gene with variants pinned or marked causative.</li> <li>Load variant pages faster after fixing other causatives query :racing_car: :dash:</li> </ul>"},{"location":"blog/new-4.7.3/","title":"Whats new in 4.7.3?","text":""},{"location":"blog/new-4.7.3/#whats-new-in-473","title":"What's new in 4.7.3? \ud83c\udf41","text":"<p>Posted: 5 October 2019</p> <p>This minor update - possibly the last before switching to bootstrap4 - includes the following highlights:</p>"},{"location":"blog/new-4.7.3/#473","title":"[4.7.3]","text":""},{"location":"blog/new-4.7.3/#added","title":"Added","text":"<ul> <li>RankScore can be used with VCFs for vcf_cancer files</li> </ul>"},{"location":"blog/new-4.7.3/#fixed","title":"Fixed","text":"<ul> <li>Fix issue with STR view next page button not doing its one job.</li> <li>Fixed mitochondrial report bug for variants without genes</li> </ul>"},{"location":"blog/new-4.7.3/#deleted","title":"Deleted","text":"<ul> <li>Removed pileup as a bam viewing option. This is replaced by IGV</li> </ul>"},{"location":"blog/new-4.72/","title":"Whats new in 4.72?","text":""},{"location":"blog/new-4.72/#whats-new-in-472","title":"What's new in 4.72?","text":"<p>Posted: October 17 2023</p> <p>This crisp early autumn release contains some speedup to the case view (thank you @alkc) and case general report. There are also a few updates to variant loading, refactoring for library updates and to allow it small but important changes to the case load config file, especially if you use Custom case images.</p>"},{"location":"blog/new-4.72/#variant-loading-and-event-index-update","title":"Variant loading and event index update","text":"<p>Previous cases matching causative variants are now forced to load for new cases, regardless of the score threshold, much like Managed Variants and ClinVar P/LP/Conflicting annotated variants. To make this reasonalby fast we introduce a new event index.</p> <p>Scout admins! After installing the 4.72 update, update indices on the event collection:</p> <pre><code>scout index --update -c event\n</code></pre>"},{"location":"blog/new-4.72/#updated-dependency-requirements","title":"Updated dependency requirements","text":"<p>We have refactored a bit to avoid deprecated functionality, and are so unfreezeing a few dependencies, in particular pydantic and pymongo. If you deploy using docker, this should be a smooth ride. The same for bare metal, just remember to <code>pip install -U -r requirements.txt</code>.</p>"},{"location":"blog/new-4.72/#case-load-configuration-file-changes","title":"Case load configuration file changes","text":""},{"location":"blog/new-4.72/#custom-images","title":"Custom images","text":"<p>In response to a request from the Clinical Genomics facility in Lund, we have made adjustments to the keywords used for linking custom images to either the case page or a variant page. Specifically, we have replaced the previous keywords 'case' and 'str' found in the case config file with more descriptive and user-friendly terms: 'case_images' and 'str_variants_images'.</p> <p>Compatibility implications: - Cases loaded with old keywords will keep displaying images as before - All new cases uploaded are expected to use the new keywords in their config files - Old cases configuration files will cease to work, and you'd need to switch to the new keywords in order to perform a case upload</p>"},{"location":"blog/new-4.72/#genome-build-check","title":"Genome build check","text":"<p>We have updated the validation process for case configuration files to now require a mandatory entry for the genome build. You can specify the genome build for case analysis using either the 'genome_build' or 'human_genome_build' keyword, with the accepted values included in this list: 37, 38, '37', '38'. While 'GRCh37' and 'GRCh38' genome build values will be accepted, it's important to note that they will be automatically converted to their standard counterparts '37' or '38' when saving the case object into the database.</p>"},{"location":"blog/new-4.72/#full-rna-alignment-view","title":"Full RNA alignment view","text":"<p>A new key at the sample level is available, <code>rna_alignment_path</code>. Any RNA alignment cram/bam file added will be visible on the RNA IGV views, together with any other previous RNA tracks, like splice junctions. The file index is expected at the same location.</p>"},{"location":"blog/new-4.72/#other-features","title":"Other features","text":"<p>Scout version 4.72 contains additional new features. This is the complete list of changes introduced from the previous one:</p>"},{"location":"blog/new-4.72/#472-changelog","title":"[4.72] CHANGELOG","text":""},{"location":"blog/new-4.72/#added","title":"Added","text":"<ul> <li>A GitHub action that checks for broken internal links in docs pages</li> <li>Link validation settings in mkdocs.yml file</li> <li>Load and display full RNA alignments on alignment viewer</li> <li>Genome build check when loading a case</li> <li>Extend event index to previous causative variants and always load them</li> </ul>"},{"location":"blog/new-4.72/#fixed","title":"Fixed","text":"<ul> <li>Documentation nav links for a few documents</li> <li>Slightly extended the BioNano Genomics Access integration docs</li> <li>Loading of SVs when VCF is missing the INFO.END field but has INFO.SVLEN field</li> <li>Escape protein sequence name (if available) in case general report to render special characters correctly</li> <li>CaseS HPO term searches for multiple terms works independent of order</li> <li>CaseS search regexp should not allow backslash</li> <li>CaseS cohort tags can contain whitespace and still match</li> <li>Remove diagnoses from cases even if OMIM term is not found in the database</li> <li>Parsing of disease-associated genes</li> </ul>"},{"location":"blog/new-4.72/#changed","title":"Changed","text":"<ul> <li>Column width adjustment on caseS page</li> <li>Use Python 3.11 in tests</li> <li>Update some github actions</li> <li>Upgraded Pydantic to version 2</li> <li>Case validation fails on loading when associated files (alignments, VCFs and reports) are not present on disk</li> <li>Case validation fails on loading when custom images have format different then [\"gif\", \"svg\", \"png\", \"jpg\", \"jpeg\"]</li> <li>Custom images keys <code>case</code> and <code>str</code> in case config yaml file are renamed to <code>case_images</code> and <code>srt_variants_images</code></li> <li>Simplify and speed up case general report code</li> <li>Speed up case retrieval in case_matching_causatives</li> <li>Upgrade pymongo to version 4</li> <li>When updating disease terms, check that all terms are consistent with a DiseaseTerm model before dropping the old collection</li> <li>Better separation between modules loading HPO terms and diseases</li> </ul>"},{"location":"features/hpo/","title":"HPO phenotypes","text":"<p>For every case you have the opportunity to add related HPO phenotype terms to describe the phenotype of the patient(s). This structured data can then be used in some interesting ways. You access all these features from the case page.</p>"},{"location":"features/hpo/#hpo-gene-panel","title":"HPO gene panel","text":"<p>Every HPO term is linked to a set of genes. It it interesting to see which genes that overlap with your phenotype terms. To generate such a list, locate the \"HPO panel\" button. You can optionally select which terms to include by using the check boxes next to the HPO terms.</p> <p>By default only genes matching every selected HPO term is returned. This setting can be customized by entering the minimum number of HPO terms a gene is required to overlap.</p> <p>The panel is only stored until a user regenerates the panel!</p> <p>The generated panel will show up just below under \"HPO gene panel\".</p>"},{"location":"features/hpo/#phenomizer-diseases","title":"Phenomizer diseases","text":"<p>The second option is to use the same HPO terms as input to the Phenomizer service. This will use you selected phenotypes to look up possible OMIM diseases. You will be presented with all hits on a new page where you can select which diseases to proceed with.</p> <p>Phenomizer associates a P-value with each disease which tells you something about the likelihood of each disease match. You can also see which genes are associated with every disease in the last column.</p> <p>When you've made your selection, click \"Select\" at the bottom of the table. Scout will then store all the associated genes and list them in the \"HPO gene panel\" list on the \"case\" page.</p>"},{"location":"user-guide/","title":"Scout user guide","text":"<p>Scout is a web-based visualizer for VCF-files. It helps to manage multiple patient cases in a unified and intuitive interface. Users can collaborate with other clinicians sharing comments and findings across your team.</p>"},{"location":"user-guide/#overview","title":"Overview","text":"<ul> <li>Getting Started</li> <li>General Usage</li> <li>Pages</li> <li>Institutes</li> <li>Users</li> <li>Cases</li> <li>Variants</li> <li>Genes</li> <li>Gene Panels</li> <li>Annotations</li> <li>ACMG criterias</li> <li>Dashboard</li> </ul>"},{"location":"user-guide/acmg-criterias/","title":"Evidence of pathogenecity","text":""},{"location":"user-guide/acmg-criterias/#very-strong","title":"Very Strong","text":""},{"location":"user-guide/acmg-criterias/#pvs1","title":"PVS1","text":"<p>Null variant (nonsense, frameshift, canonical \u00b11 or 2 splice sites, initiation  codon, single or multiexon deletion) in a gene where LOF is a known mechanism of disease</p> <p>Caveats:</p> <ul> <li>Beware of genes where LOF is not a known disease mechanism (e.g., GFAP, MYH7)</li> <li>Use caution interpreting LOF variants at the extreme 3\u2032 end of a gene</li> <li>Use caution with splice variants that are predicted to lead to exon skipping but leave the remainder of the  protein intact</li> <li>Use caution in the presence of multiple transcripts</li> </ul>"},{"location":"user-guide/acmg-criterias/#strong","title":"Strong","text":""},{"location":"user-guide/acmg-criterias/#ps1","title":"PS1","text":"<p>Same amino acid change as a previously established pathogenic variant regardless of nucleotide change Example: Val\u2192Leu caused by either G&gt;C or G&gt;T in the same codon</p> <p>Caveat: Beware of changes that impact splicing rather than at the amino acid/protein level</p>"},{"location":"user-guide/acmg-criterias/#ps2","title":"PS2","text":"<p>De novo (both maternity and paternity confirmed) in a patient with the disease and no family history.</p> <p>Note: Confirmation of paternity only is insufficient. Egg donation, surrogate motherhood, errors in embryo transfer, and so on, can contribute to nonmaternity.</p>"},{"location":"user-guide/acmg-criterias/#ps3","title":"PS3","text":"<p>Well-established in vitro or in vivo functional studies supportive of a damaging effect on the gene or gene product.</p> <p>Note: Functional studies that have been validated and shown to be reproducible and robust in a clinical diagnostic laboratory setting are considered the most well established.</p>"},{"location":"user-guide/acmg-criterias/#ps4","title":"PS4","text":"<p>The prevalence of the variant in affected individuals is significantly increased compared with the prevalence in controls.</p> <p>Note 1: Relative risk or OR, as obtained from case\u2013control studies, is &gt;5.0, and the confidence interval around the estimate of relative risk or OR does not include 1.0. See the article for detailed guidance.</p> <p>Note 2: In instances of very rare variants where case\u2013control studies may not reach statistical significance, the prior observation of the variant in multiple unrelated patients with the same phenotype, and its absence in controls, may be used as moderate level of evidence.</p>"},{"location":"user-guide/acmg-criterias/#moderate","title":"Moderate","text":""},{"location":"user-guide/acmg-criterias/#pm1","title":"PM1","text":"<p>Located in a mutational hot spot and/or critical and well-established functional domain (e.g., active site of an enzyme) without benign variation.</p>"},{"location":"user-guide/acmg-criterias/#pm2","title":"PM2","text":"<p>Absent from controls (or at extremely low frequency if recessive) (Table 6) in Exome Sequencing Project, 1000 Genomes Project, or Exome Aggregation Consortium</p> <p>Caveat: Population data for insertions/deletions may be poorly called by next-generation sequencing.</p>"},{"location":"user-guide/acmg-criterias/#pm3","title":"PM3","text":"<p>For recessive disorders, detected in trans with a pathogenic variant</p> <p>Note: This requires testing of parents (or offspring) to determine phase.</p>"},{"location":"user-guide/acmg-criterias/#pm4","title":"PM4","text":"<p>Protein length changes as a result of in-frame deletions/insertions in a nonrepeat region or stop-loss variants.</p>"},{"location":"user-guide/acmg-criterias/#pm5","title":"PM5","text":"<p>Novel missense change at an amino acid residue where a different missense change determined to be pathogenic has been seen before.</p> <p>Example: Arg156His is pathogenic; now you observe Arg156Cys Caveat: Beware of changes that impact splicing rather than at the amino acid/protein level. PM6 Assumed de novo, but without confirmation of paternity and maternity</p>"},{"location":"user-guide/acmg-criterias/#supporting","title":"Supporting","text":""},{"location":"user-guide/acmg-criterias/#pp1","title":"PP1","text":"<p>Cosegregation with disease in multiple affected family members in a gene definitively known to cause the disease.</p> <p>Note: May be used as stronger evidence with increasing segregation data</p>"},{"location":"user-guide/acmg-criterias/#pp2","title":"PP2","text":"<p>Missense variant in a gene that has a low rate of benign missense variation and in which missense variants are a common mechanism of disease.</p>"},{"location":"user-guide/acmg-criterias/#pp3","title":"PP3","text":"<p>Multiple lines of computational evidence support a deleterious effect on the gene or gene product  (conservation, evolutionary, splicing impact, etc.).</p> <p>Caveat: Because many in silico algorithms use the same or very similar input for their predictions, each algorithm should not be counted as an independent criterion. PP3 can be used only once in any evaluation of a variant.</p>"},{"location":"user-guide/acmg-criterias/#pp4","title":"PP4","text":"<p>Patient\u2019s phenotype or family history is highly specific for a disease with a single genetic etiology.</p>"},{"location":"user-guide/acmg-criterias/#pp5","title":"PP5","text":"<p>Reputable source recently reports variant as pathogenic, but the evidence is not available to the laboratory to perform an independent evaluation.</p>"},{"location":"user-guide/acmg-criterias/#evidence-of-benign-impact","title":"Evidence of benign impact","text":""},{"location":"user-guide/acmg-criterias/#stand-alone","title":"Stand-alone","text":""},{"location":"user-guide/acmg-criterias/#ba1","title":"BA1","text":"<p>Allele frequency is &gt;5% in Exome Sequencing Project, 1000 Genomes Project, or Exome Aggregation Consortium.</p>"},{"location":"user-guide/acmg-criterias/#strong_1","title":"Strong","text":""},{"location":"user-guide/acmg-criterias/#bs1","title":"BS1","text":"<p>Allele frequency is greater than expected for disorder (see Table 6)</p>"},{"location":"user-guide/acmg-criterias/#bs2","title":"BS2","text":"<p>Observed in a healthy adult individual for a recessive (homozygous), dominant (heterozygous), or X-linked (hemizygous) disorder, with full penetrance expected at an early age.</p>"},{"location":"user-guide/acmg-criterias/#bs3","title":"BS3","text":"<p>Well-established in vitro or in vivo functional studies show no damaging effect on protein function or splicing.</p>"},{"location":"user-guide/acmg-criterias/#bs4","title":"BS4","text":"<p>Lack of segregation in affected members of a family</p> <p>Caveat: The presence of phenocopies for common phenotypes (i.e., cancer, epilepsy) can mimic lack of segregation among affected individuals. Also, families may have more than one pathogenic variant contributing to an autosomal dominant disorder, further confounding an apparent lack of segregation.</p>"},{"location":"user-guide/acmg-criterias/#supporting_1","title":"Supporting","text":""},{"location":"user-guide/acmg-criterias/#bp1","title":"BP1","text":"<p>Missense variant in a gene for which primarily truncating variants are known to cause disease.</p>"},{"location":"user-guide/acmg-criterias/#bp2","title":"BP2","text":"<p>Observed in trans with a pathogenic variant for a fully penetrant dominant gene/disorder or observed in cis with a pathogenic variant in any inheritance pattern.</p>"},{"location":"user-guide/acmg-criterias/#bp3","title":"BP3","text":"<p>In-frame deletions/insertions in a repetitive region without a known function.</p>"},{"location":"user-guide/acmg-criterias/#bp4","title":"BP4","text":"<p>Multiple lines of computational evidence suggest no impact on gene or gene product (conservation, evolutionary, splicing impact, etc.).</p> <p>Caveat: Because many in silico algorithms use the same or very similar input for their predictions, each algorithm cannot be counted as an independent criterion. BP4 can be used only once in any evaluation of a variant.</p>"},{"location":"user-guide/acmg-criterias/#bp5","title":"BP5","text":"<p>Variant found in a case with an alternate molecular basis for disease.</p>"},{"location":"user-guide/acmg-criterias/#bp6","title":"BP6","text":"<p>Reputable source recently reports variant as benign, but the evidence is not available to the laboratory to perform an independent evaluation.</p>"},{"location":"user-guide/acmg-criterias/#bp7","title":"BP7","text":"<p>A synonymous (silent) variant for which splicing prediction algorithms predict no impact to the splice consensus sequence nor the creation of a new splice site AND the nucleotide is not highly conserved.</p>"},{"location":"user-guide/acmg-criterias/#modifying-criteria-strength","title":"Modifying criteria strength","text":"<p>The ACMG criteria allow for modifying the weight of different criteria based on the strength of the evidence, or certain modifying information, with a lab manager's professional judgement. A common, well documented application is to downgrade <code>PVS1</code> variants (Tayoun et al, Human mutation 2019). Another would be the application of a modified segregation in the family based on different levels of evidence. Or the recognition that variants sometimes do not meet the strict frequency criteria of <code>PM2</code>, <code>BA1</code> or <code>BS1</code> but that a tendency could warrant a modified <code>PM2_Supporting</code> or <code>BS1_Supporting</code> (Harrison et al Curr Prot Hum Genet 2019, PMID: 31479589)[https://pubmed.ncbi.nlm.nih.gov/31479589/].</p> <p>We apply the modification nomenclature introduced by the ClinGen variant interpretation working group in 2017 Compare e.g. the Baylor approved criteria.</p>"},{"location":"user-guide/annotations/","title":"Annotations","text":"<p>This page will describe what is displayed in scout, what the different annotations mean and how they are parsed from the vcf file.</p>"},{"location":"user-guide/annotations/#frequencies","title":"Frequencies","text":""},{"location":"user-guide/annotations/#1000g","title":"1000G","text":"<p>The frequency from the 1000G population database.</p>"},{"location":"user-guide/annotations/#1000g_max_af","title":"1000G_MAX_AF","text":"<p>The maximum allele frequency of all populations in the 1000G population database.</p>"},{"location":"user-guide/annotations/#exac","title":"ExAC","text":"<p>The frequency from the ExAC population database.</p>"},{"location":"user-guide/annotations/#exac_max_af","title":"ExAC_MAX_AF","text":"<p>The maximum allele frequency of all populations ExAC population database. </p>"},{"location":"user-guide/annotations/#severity","title":"Severity","text":""},{"location":"user-guide/annotations/#cadd-score","title":"CADD score","text":"<p>The Combined Annotation Dependent Depletion(CADD) score. A prediction of the deleterioussness for a variant.</p>"},{"location":"user-guide/annotations/#sift","title":"SIFT","text":"<p>The SIFT) prediction for how a variation affects the protein.</p>"},{"location":"user-guide/annotations/#polyphen","title":"PolyPhen","text":"<p>The PolyPhen) prediction for how a variation affects the protein.</p>"},{"location":"user-guide/annotations/#conservation","title":"Conservation","text":""},{"location":"user-guide/annotations/#gerp","title":"Gerp","text":"<p>The Genomic Evolutionary Rate Profiling(GERP) conservation string. An estimation of how conserved this position is.</p>"},{"location":"user-guide/annotations/#phastcons","title":"phastCons","text":"<p>The PHASTcons conservation string.</p>"},{"location":"user-guide/annotations/#phylop","title":"phylop","text":"<p>The phylop 100 way predicted conservation string.</p>"},{"location":"user-guide/annotations/#external-id","title":"External ID","text":""},{"location":"user-guide/annotations/#cosmic","title":"COSMIC","text":"<p>A matching exact CHROM, POS, REF, ALT from vcf with Catalogue Of Somatic Mutations In Cancer (COSMIC). A link to COSMIC if a matching COSMIC variant is found.</p>"},{"location":"user-guide/cases/","title":"Cases","text":""},{"location":"user-guide/cases/#cases","title":"Cases","text":"<p>This page displays the list of active cases for a particular institute. Each item links to the detailed view for that case. You can filter the list by typing into the search box above the list.</p> <p>A quick link to get straight to the list of all clinical variants is also displayed. To indicate what cases have recently been added/updated, a \"last updated\" date is also displayed.</p> <p>Sometimes you will also see a cyan colored dot to the left of the case ID. This is an indicator that there's been some recent activity in the case such as a new comment.</p> <p>Your name will be tagged for each case that is assigned to you. For cases that are assigned to other people you will see a tag \"ASSIGNED\".</p> <p>In the search field you can enter search terms to limit the list displayed. Entering a user name shows only cases assigned to that user. A case- or sample id will return only cases with matches to those ids.</p> <p>A search starting with \"HP:\", e.g. \"HP:0002664\" will return cases with exactly matching HPO phenotype terms.</p> <p>A search starting with \"synopsis:\", e.g. \"synopsis:epilepsy\" will return cases with free text matches to the string following \"synopsis:\".</p>"},{"location":"user-guide/cases/#case","title":"Case","text":"<p>This is the detailed view of one individual case. The intended use is to give a concise overview of the family under investigation and show recent activity related to the case.</p>"},{"location":"user-guide/cases/#case-report-page","title":"Case report page","text":"<p>It can be visualized by clicking on the 'Visualize report' link on the left sidebar present on the case view. The case report contains a phenotype info panel as well as an overview of the gene panels used for the analysis. This page is showing also any variant users have been interacting with when working with the case: causative variants, variants pinned as candidates, ACMG or otherwise manually classified variants, as well as variants with any comment field. At the bottom of the report page the 'Dismissed variants' panel lists all variants that have been dismissed, with the reason(s) why they were rejected as candidates. By clicking on the top right button the case report can be exported and saved into a PDF file.</p>"},{"location":"user-guide/cases/#pinned-variants","title":"Pinned variants","text":"<p>There's a list of \"Strong candidates\" on the page. This list is curated by the collaborators and consists of \"pinned\" variants from the variants list. This feature can be used to mark variants of particular interest that you might want to highlight to other users. Pinned variants for cases with at least one assigned HPO phenotype can be used to produce Clinvar submission files (See more under \"Variant\").</p>"},{"location":"user-guide/cases/#matching-causatives","title":"Matching causatives","text":"<p>The case page shows a list of matching causative variants from other cases in a foldable tab. By default only the number of matches is displayed. The user can click to open the tab and expose links to the variant in the case where it has been marked causative.</p>"},{"location":"user-guide/cases/#managed-variants","title":"Managed variants","text":"<p>The case page shows a list of matching managed variants from other cases in a foldable tab. By default only the number of matches is displayed. The user can click to open the tab and expose a list of managed variants found in the case.</p>"},{"location":"user-guide/cases/#misc","title":"Misc.","text":"<p>The case page also displays a simple wiki-style synopsis on the current case that can be used to communicate information on the case to collaborators. The synopsis and other fields on the case page can be populated directly on load - see the admin section.</p> <p>Rank model version shows which rank model that has been used to rank the variants in the case</p> <p>The \"Activity\" feed is a reverse chronological list of events and comments related to the case. Examples of events include comments, status updates, assignments, Sanger sequencing orders etc.</p>"},{"location":"user-guide/cases/#cytogenomics","title":"Cytogenomics","text":"<p>The case page contains three (admin configuration optional) cytogenomics applications: Gens, Chromograph and vcf2cytosure. Gens integration is available via the \"View CN profile\" button on the case page as well as the \"Copy number profile\" links under SV variant summary on each SV variant page. Chromograph integration can be found under the Images cards on the case page. Chromograph will display ideograms, genome coverage from TIDDIT (orange graph), autozygosity from rhocall (gray bars) and UPD calls from UPD.py. UPD calls are colored deep red for maternal UPD candidate regions, light pink for maternal heterodisomy calls, deep blue for paternal UPD, light blue for paternal heterodisomy and beige for unspecific isodisomy or deletion calls.</p> <p></p> <p>Vcf2cytosure files can be accessed from the individuals table, where a download link arrow appears in the CGH column if it is available.</p>"},{"location":"user-guide/cases/#actions","title":"Actions","text":"<p>There are a few actions you can take on this page.</p> <p>Adopt case: By clicking the button next to \"Adopt\" you can assign yourself to a case. More than one person can be assigned to a case, e.g. if multiple professions or institutes are involved in analysis. If you have assigned yourself to a case you can click your name to \"unassign\".</p> <p>The case can be moved to \"Research\" which means all variants will be made visible for the entire exome. Clicking \"Open research\" will notify the administrators of the site. The user agrees that she is reponsible to have acquired an informed consent relevant for this action. This will also be logged as a new event in the case log.</p> <p>Edit case synopsis: The case sysnopsis can be edited in a format known as [Markdown][markdown]. Just click \"EDIT\" to open the editor view. When you are finished click \"SAVE\" to save changes or \"CANCEL\" to abort.</p> <p>Comment: You can leave comments in the activity log by writing a message in the input box next to the feed. Click \"COMMENT\" to submit the comment.</p>"},{"location":"user-guide/cases/#matchmaker-exchange-integration","title":"Matchmaker Exchange integration","text":"<p>Starting with release 4.4, Scout offers integration for patient data sharing via Matchmaker Exchange. General info about Matchmaker and patient matching could be found in this paper.</p> <p>Authorized users (contact Scout admins if you wish to start sharing cases using this network!) will have access to a Matchmaker submission form present on the case page: </p>"},{"location":"user-guide/cases/#requisites-to-share-patient-data-using-matchmaker-mme","title":"Requisites to share patient data using Matchmaker (MME):","text":"<ul> <li>There must be at least one HPO term specified at the case level AND/OR one pinned variant.</li> <li>A maximum number of 3 variants can be exported to Matchmaker Exchange for a case.</li> <li>Submitting users are willing to be contacted (via email) by users from external Matchmaker nodes in case of positive patient matching.</li> <li>Matchmaker Exchange network discourages the submission of variants which are already known to case a certain phenotype and welcomes instead the submission of novel or unknown but strongly suspected variants for the condition.</li> </ul>"},{"location":"user-guide/cases/#patient-sharing-options","title":"Patient sharing options","text":"<ul> <li>Including patient gender is optional</li> <li>Including an HPO term is required if there is no pinned variant at the case level</li> <li>Including OMIM diagnosis is not mandatory, but could be of help to the matching algorithm when looking for similar patients on MME.</li> <li>Submitting users can decide to share specific variant data (chromosome, position, specific change, zygosity) or only gene name. Providing complete information will of course improve matching power.</li> </ul> <p>Submitted patients can be modified or removed from Matchmaker any time from the Scout case page.</p> <p>From the same interface, by clicking on 'match against', users will be able to run matches against Scout patients already submitted to Matchmaker or patients present in connected external nodes: </p> <p>By clicking on 'Matches', users can review the submitted data for a case (Patient Overview tab) and all positive match results for a case against patients from external nodes (External Matches) or other Scout patients in Matchmaker server (Internal Matches): </p> <p>Matches will be ordered by date and each single match object will display matching patients by score, from the highest (most similar to the case) to the lowest(least similar to the case).</p>"},{"location":"user-guide/dashboard/","title":"Dashboard","text":"<p>There is a dashboard available in the top left menu. The purpose of this one is to collect statistics of cases/institutes/variants in scout. The default is to show information for the whole instance. A user can also see specific information for the institute/institutes that they can access. We will here describe in more detail what the numbers mean.</p> <p></p>"},{"location":"user-guide/dashboard/#basic-statistics","title":"Basic statistics","text":""},{"location":"user-guide/dashboard/#wgs-samples","title":"Wgs samples","text":"<p>The number of samples in all cases that have the analysis tag WGS (Whole Genome Sequencing). Note that there will probably be more samples than cases.</p>"},{"location":"user-guide/dashboard/#wes-samples","title":"Wes samples","text":"<p>The number of samples in all cases that have the analysis tag WES (Whole Exome Sequencing).</p>"},{"location":"user-guide/dashboard/#all-cases","title":"All cases","text":"<p>Total number of cases in database</p>"},{"location":"user-guide/dashboard/#tagged-cases","title":"Tagged cases","text":"<p>The rest of the boxes shows how many cases there are with the different statuses and fraction of all. E.g. if all cases = 100 and 10 are archived the fraction will be 10%</p>"},{"location":"user-guide/dashboard/#pedigree-information","title":"Pedigree information","text":"<p>Displays how many cases that there are of different family sizes. Everything with more than 3 individuals is grouped  into the 'Many' category.</p>"},{"location":"user-guide/dashboard/#cases-with","title":"Cases with...","text":"<p>Some more detailed information about cases.</p>"},{"location":"user-guide/dashboard/#phenotype-terms","title":"Phenotype terms","text":"<p>Number of cases that have at least one phenotype term</p> <p>Similar for the following.</p>"},{"location":"user-guide/dashboard/#variants","title":"Variants","text":""},{"location":"user-guide/dashboard/#validation-ordered","title":"Validation ordered","text":"<p>Number of variants with validation ordered. This number could be higher that Cases with validation ordered since one case could have multiple variants where validation is ordered.</p>"},{"location":"user-guide/dashboard/#validated-true-positive","title":"Validated True Positive","text":"<p>Number of variants that are validated True positive. Fraction is #True positive/(#True positive + #False positive)</p>"},{"location":"user-guide/dashboard/#validated-false-positive","title":"Validated False Positive","text":"<p>Similar to the above</p>"},{"location":"user-guide/defining-scorescheme/","title":"Score scheme","text":"<p>How to score a variant is defined in a .ini file wich is written in a specific way. The file is divided in sections, the first section is mandatory and is named <code>Version</code></p>"},{"location":"user-guide/defining-scorescheme/#version","title":"Version","text":"<p>The file has to start with some meta data that looks like:</p> <pre><code>[Version]\n        version = 0.1\n        name = rank_model_test\n</code></pre> <p>This is important so the user can backtrack which file that was used for a specific analysis.</p>"},{"location":"user-guide/defining-scorescheme/#categories","title":"Categories","text":"<p>The Score is built by adding scores from different functions where each function has to belong to a category. The idea with this is that one might not always want to score each function individually, for example if we look at allele frequencies we are most interested in that any of the frequencies are above a certain threshold. If one frequency is low and another high we just want to use the score for the high frequency.</p> <p>A category has a name and a category rule, the different rules are <code>min, max, sum</code>.</p> <p>so this section could look like:</p> <pre><code>[Categories]\n    [[allele_frequency]]\n        category_aggregation = min\n\n [[Protein_prediction]]\n     category_aggregation = sum\n</code></pre>"},{"location":"user-guide/defining-scorescheme/#score-functions","title":"Score functions","text":"<p>The following sections in the file will represent score functions. Each function has variables to describe what field in the vcf file that is used, which category it belongs to, what data type we could expect, how the annotation is separated and what the rule is if there are multiple annotations.</p> <p>Example:</p> <pre><code>[FILTER]\n    field = FILTER\n    data_type = string\n    category = Variant_call_quality_filter\n    record_rule = min\n    separators = ';',\n    description = The filters for the variant\n</code></pre> <p>so the mandatory sections are:</p> <pre><code>field = #Any of the vcf fields\ndata_type = # 'integer','float','flag','character','string'\ncategory = # Any of the categories described above\nrecord_rule = # min, max\nseparators = # A list of separators\n</code></pre> <p>If field is <code>INFO</code> we also have to describe what <code>INFO</code>-key to use with</p> <pre><code>info_key = # Any of the info keys\n</code></pre>"},{"location":"user-guide/genes/","title":"Genes and transcripts","text":"<p>Scout stores information about genes and transcripts. The information is collected from a couple of resources, these can be updated manually if desired. Definition of what genes that exists and their correct id and symbols are collected from HGNC. Unfortunately HGNC does only maintain a distribution for GRCh38, at this time (mid 2018) there are many resources that lack support for build 38 so many investigators still use build 37. We therefore load two gene sets, one for each build.</p>"},{"location":"user-guide/genes/#genes-with-missing-refseq-transcripts","title":"Genes with missing RefSeq transcripts","text":"<p>There is a issue where this problem is discussed here, please read that since it is important. When we first look at all genes we could see the following:</p> <p><code>Nr of genes: 33578</code> <code>Nr without transcripts: 11048</code></p> <p>So 1/3 of all genes are missing any refseq transcript. This came out as a high number at first, after some thought one might realise that many of these genes are not protein coding etc.</p> <p>If we look at disease causing genes from OMIM there are 16 genes that are missing refseq id for any transcript in ensembl build 37, 7 genes in build 38.</p> <p>The genes in OMIM without refseq transcripts in build 37 are the following:</p> <pre><code>TTC25\nPTPRQ\nSRD5A2\nPIGY\nFGF16\nTRAC\nPADI6\nGDF1\nTUBB3\nIGHG2\nIGHM\nIGKC\nFCGR2C\nKMT2B\nNEFL\nNR2E3\n</code></pre> <p>In the gene panels there are one more gene outside OMIM wihtout refseq transcripts: <code>MAP3K14</code></p> <p>We will here look at all these genes in detail:</p>"},{"location":"user-guide/genes/#ttc25","title":"TTC25","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 HG185_PATCH ENSG00000260703 TTC25 ENST00000569427 - 37 HG185_PATCH ENSG00000260703 TTC25 ENST00000561994 - 37 HG185_PATCH ENSG00000260703 TTC25 ENST00000569541 NM_031421 37 HG185_PATCH ENSG00000260703 TTC25 ENST00000565052 - 37 17 ENSG00000204815 TTC25 ENST00000593239 - 37 17 ENSG00000204815 TTC25 ENST00000591658 - 37 17 ENSG00000204815 TTC25 ENST00000585530 - 37 17 ENSG00000204815 TTC25 ENST00000377540 - --- --- --- --- --- --- 38 17 ENSG00000204815 TTC25 ENST00000593239 - 38 17 ENSG00000204815 TTC25 ENST00000591658 - 38 17 ENSG00000204815 TTC25 ENST00000377540 NM_031421 38 17 ENSG00000204815 TTC25 ENST00000377540 NM_031421 38 17 ENSG00000204815 TTC25 ENST00000585530 -"},{"location":"user-guide/genes/#ptprq","title":"PTPRQ","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 12 ENSG00000139304 PTPRQ ENST00000551042 - 37 12 ENSG00000139304 PTPRQ ENST00000547376 - 37 12 ENSG00000139304 PTPRQ ENST00000551573 - 37 12 ENSG00000139304 PTPRQ ENST00000526956 - 37 12 ENSG00000139304 PTPRQ ENST00000547485 - 37 12 ENSG00000139304 PTPRQ ENST00000551624 - 37 12 ENSG00000139304 PTPRQ ENST00000547881 - 37 12 ENSG00000139304 PTPRQ ENST00000549355 - 37 12 ENSG00000139304 PTPRQ ENST00000266688 - --- --- --- --- --- --- 38 12 ENSG00000139304 PTPRQ ENST00000623635 - 38 12 ENSG00000139304 PTPRQ ENST00000551042 - 38 12 ENSG00000139304 PTPRQ ENST00000547376 - 38 12 ENSG00000139304 PTPRQ ENST00000551573 - 38 12 ENSG00000139304 PTPRQ ENST00000614701 NM_001145026 38 12 ENSG00000139304 PTPRQ ENST00000547485 - 38 12 ENSG00000139304 PTPRQ ENST00000551624 - 38 12 ENSG00000139304 PTPRQ ENST00000547881 - 38 12 ENSG00000139304 PTPRQ ENST00000549355 - 38 12 ENSG00000139304 PTPRQ ENST00000616559 XM_017019274"},{"location":"user-guide/genes/#srd5a2","title":"SRD5A2","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 2 ENSG00000049319 SRD5A2 ENST00000405650 - 37 2 ENSG00000049319 SRD5A2 ENST00000233139 - --- --- --- --- --- --- 38 2 ENSG00000277893 SRD5A2 ENST00000622030 NM_000348 <p>Here we can see that two transcripts has been merged to one and been given a refseq identifier. Most probable one of the old transcripts match the new one. We can not be sure if variants are missed here.</p>"},{"location":"user-guide/genes/#pigy","title":"PIGY","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 4 ENSG00000255072 PIGY ENST00000527353 - --- --- --- --- --- --- 38 4 ENSG00000255072 PIGY ENST00000527353 - <p>Here the transcript is identical for both builds so we dear to guess that we do not miss any variants.</p>"},{"location":"user-guide/genes/#fgf16","title":"FGF16","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 X ENSG00000196468 FGF16 ENST00000439435 - 37 HG1426_PATCH ENSG00000268853 FGF16 ENST00000600602 - --- --- --- --- --- --- 38 X ENSG00000196468 FGF16 ENST00000439435 NM_003868 <p>The refseq transcript exists in build 37 but is missing the refseq identifier. We would NOT miss any variants here.</p>"},{"location":"user-guide/genes/#trac","title":"TRAC","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 14 ENSG00000229164 TRAC ENST00000478163 - --- --- --- --- --- --- 38 14 ENSG00000277734 TRAC ENST00000611116 - <p>Transcripts have different ENS ids in both builds but are most probably the same. No refseq identifier for any build.</p>"},{"location":"user-guide/genes/#padi6","title":"PADI6","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 1 ENSG00000256049 PADI6 ENST00000434762 - 37 1 ENSG00000256049 PADI6 ENST00000358481 - --- --- --- --- --- --- 38 1 ENSG00000276747 PADI6 ENST00000619609 NM_207421 38 CHR_HG2095_PATCH ENSG00000280949 PADI6 ENST00000625380 NM_207421 <p>Unclear what happens here...</p>"},{"location":"user-guide/genes/#gdf1","title":"GDF1","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 19 ENSG00000130283 GDF1 ENST00000247005 - --- --- --- --- --- --- 38 19 ENSG00000130283 GDF1 ENST00000247005 - <p>Same transcripts, no refseq in both builds. No variants will be missed here</p>"},{"location":"user-guide/genes/#tubb3","title":"TUBB3","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 16 ENSG00000198211 TUBB3 ENST00000556922 - --- --- --- --- --- --- 38 16 ENSG00000258947 TUBB3 ENST00000555810 - 38 16 ENSG00000258947 TUBB3 ENST00000554444 NM_001197181 38 16 ENSG00000258947 TUBB3 ENST00000556565 - 38 16 ENSG00000258947 TUBB3 ENST00000315491 NM_006086 38 16 ENSG00000258947 TUBB3 ENST00000553656 - 38 16 ENSG00000258947 TUBB3 ENST00000556536 - 38 16 ENSG00000258947 TUBB3 ENST00000554116 - 38 16 ENSG00000258947 TUBB3 ENST00000554927 - 38 16 ENSG00000258947 TUBB3 ENST00000557262 - 38 16 ENSG00000258947 TUBB3 ENST00000557490 - 38 16 ENSG00000258947 TUBB3 ENST00000555576 - 38 16 ENSG00000258947 TUBB3 ENST00000554336 - 38 16 ENSG00000258947 TUBB3 ENST00000555609 - 38 16 ENSG00000258947 TUBB3 ENST00000553967 - 38 16 ENSG00000258947 TUBB3 ENST00000625617 - <p>This is very unclear, it goes from one to many transcripts between the builds. Hard to say if variants are missed here.</p>"},{"location":"user-guide/genes/#ighg2","title":"IGHG2","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 14 ENSG00000211893 IGHG2 ENST00000390545 - 37 HG1592_PATCH ENSG00000270895 IGHG2 ENST00000603473 --- --- --- --- --- --- 38 CHR_HSCHR14_3_CTG1 ENSG00000274497 IGHG2 ENST00000621803 - 38 14 ENSG00000211893 IGHG2 ENST00000641095 - 38 14 ENSG00000211893 IGHG2 ENST00000390545 - <p>No refseq in any build. Same transcripts in both builds except a new one in a patch. No variants would be missed here.</p>"},{"location":"user-guide/genes/#ighm","title":"IGHM","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 14 ENSG00000211899 IGHM ENST00000390559 - 37 HG1592_PATCH ENSG00000271541 IGHM ENST00000605693 - --- --- --- --- --- --- 37 CHR_HSCHR14_3_CTG1 ENSG00000282657 IGHM ENST00000626472 - 37 14 ENSG00000211899 IGHM ENST00000637539 - 37 14 ENSG00000211899 IGHM ENST00000390559 - <p>Same as above, no variants missing here</p>"},{"location":"user-guide/genes/#igkc","title":"IGKC","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 2 ENSG00000211592 IGKC ENST00000390237 - --- --- --- --- --- --- 38 2 ENSG00000211592 IGKC ENST00000390237 - <p>Same in both builds. No variants would be missing here</p>"},{"location":"user-guide/genes/#fcgr2c","title":"FCGR2C","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 1 ENSG00000244682 FCGR2C ENST00000502411 - 37 1 ENSG00000244682 FCGR2C ENST00000496692 - 37 1 ENSG00000244682 FCGR2C ENST00000466542 - 37 1 ENSG00000244682 FCGR2C ENST00000465075 - 37 1 ENSG00000244682 FCGR2C ENST00000473530 - 37 1 ENSG00000244682 FCGR2C ENST00000473712 - 37 1 ENSG00000244682 FCGR2C ENST00000482226 - 37 1 ENSG00000244682 FCGR2C ENST00000467903 - 37 1 ENSG00000244682 FCGR2C ENST00000507374 - 37 1 ENSG00000244682 FCGR2C ENST00000508651 - 37 1 ENSG00000244682 FCGR2C ENST00000543859 - --- --- --- --- --- --- 38 1 ENSG00000244682 FCGR2C ENST00000502411 - 38 1 ENSG00000244682 FCGR2C ENST00000496692 - 38 1 ENSG00000244682 FCGR2C ENST00000466542 - 38 1 ENSG00000244682 FCGR2C ENST00000465075 - 38 1 ENSG00000244682 FCGR2C ENST00000473530 - 38 1 ENSG00000244682 FCGR2C ENST00000473712 - 38 1 ENSG00000244682 FCGR2C ENST00000482226 - 38 1 ENSG00000244682 FCGR2C ENST00000467903 - 38 1 ENSG00000244682 FCGR2C ENST00000507374 - 38 1 ENSG00000244682 FCGR2C ENST00000508651 - 38 1 ENSG00000244682 FCGR2C ENST00000611236 - 38 1 ENSG00000244682 FCGR2C ENST00000543859 NR_047648 <p>Most probably no variants would be missing here. All transcripts seems to be correct between the builds.</p>"},{"location":"user-guide/genes/#kmt2b","title":"KMT2B","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 19 ENSG00000105663 KMT2B ENST00000606995 - 37 19 ENSG00000105663 KMT2B ENST00000607650 - 37 19 ENSG00000105663 KMT2B ENST00000592092 - 37 19 ENSG00000105663 KMT2B ENST00000585476 - 37 19 ENSG00000105663 KMT2B ENST00000586308 - --- --- --- --- --- --- 38 19 ENSG00000272333 KMT2B ENST00000420124 NM_014727 38 19 ENSG00000272333 KMT2B ENST00000606995 - 38 19 ENSG00000272333 KMT2B ENST00000592092 - 38 19 ENSG00000272333 KMT2B ENST00000585476 - 38 19 ENSG00000272333 KMT2B ENST00000586308 - <p>Here the transcript <code>ENST00000607650</code> in build 37 have probably changed id to <code>ENST00000420124</code> and been given a refseq identifier.</p>"},{"location":"user-guide/genes/#nefl","title":"NEFL","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 8 ENSG00000104725 NEFL ENST00000221169 - --- --- --- --- --- --- 38 8 ENSG00000277586 NEFL ENST00000610854 NM_006158 38 8 ENSG00000277586 NEFL ENST00000615973 - 38 8 ENSG00000277586 NEFL ENST00000639464 - 38 8 ENSG00000277586 NEFL ENST00000619417 - <p>This is unclear, probably ENST00000221169 has been renamed to ENST00000610854 and been given a refseq identifier.</p>"},{"location":"user-guide/genes/#nr2e3","title":"NR2E3","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 15 ENSG00000031544 NR2E3 ENST00000561604 - 37 15 ENSG00000031544 NR2E3 ENST00000567496 - 37 15 ENSG00000031544 NR2E3 ENST00000562839 - 37 15 ENSG00000031544 NR2E3 ENST00000562925 - 37 15 ENSG00000031544 NR2E3 ENST00000563709 - 37 15 ENSG00000031544 NR2E3 ENST00000398840 - 37 15 ENSG00000031544 NR2E3 ENST00000326995 - --- --- --- --- --- --- 38 15 ENSG00000278570 NR2E3 ENST00000621736 - 38 15 ENSG00000278570 NR2E3 ENST00000617575 NM_014249 38 15 ENSG00000278570 NR2E3 ENST00000621098 NM_016346 38 15 ENSG00000278570 NR2E3 ENST00000563709 - <p>This is unclear. We might miss variants here</p>"},{"location":"user-guide/genes/#map3k14","title":"MAP3K14","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 17 ENSG00000006062 MAP3K14 ENST00000587332 - 37 17 ENSG00000006062 MAP3K14 ENST00000592267 - 37 17 ENSG00000006062 MAP3K14 ENST00000586644 - 37 17 ENSG00000006062 MAP3K14 ENST00000344686 - 37 17 ENSG00000006062 MAP3K14 ENST00000376926 - --- --- --- --- --- --- 38 17 ENSG00000006062 MAP3K14 ENST00000344686 NM_003954 38 17 ENSG00000006062 MAP3K14 ENST00000640087 - 38 17 ENSG00000006062 MAP3K14 ENST00000592267 - 38 17 ENSG00000006062 MAP3K14 ENST00000586644 - 38 17 ENSG00000006062 MAP3K14 ENST00000617331 - 38 17 ENSG00000006062 MAP3K14 ENST00000376926 - 38 CHR_HSCHR17_2_CTG5 ENSG00000282637 MAP3K14 ENST00000633437 - 38 CHR_HSCHR17_2_CTG5 ENSG00000282637 MAP3K14 ENST00000634016 - <p>Here one of the transcripts have been given a refseq identifier in build 38, that transcript exists in build 37 so no variants would be missed here.</p>"},{"location":"user-guide/getting-started/","title":"Getting started with Scout","text":"<p>Scout is a web-based visualizer for VCF-files. It helps to manage multiple patient cases in a unified and intuitive interface. Users can collaborate with other clinicians sharing comments and findings across your team.</p>"},{"location":"user-guide/getting-started/#institutes-cases-variants","title":"Institutes, Cases, Variants","text":"<p>Scout has a few levels of abstraction to deal with the data it presents. Institutes contain multiple cases and group users into teams. Cases are a unit that is analysed together, usually the same as a family or a tumor/normal sample - they all share a subset of called variants. Variants are individual genotype calls across a single case.</p> <p>[insert screenshot here]</p> <p>A case is an interesting concept worth expanding on. Given the context of diagnosing a Mendelian disorder, a case represents the investigation of typically a single family and the quest to find a single disease causing mutation.</p> <p>As such there are some added features that try to support this process:</p> <ul> <li>a case can be assigned to a user to delegate responsibility</li> <li>various variants can be pinned as worth looking at for the whole team</li> <li>a feed keeps track of any case related activity in one single place</li> </ul> <p>A lot of time has been spent on the layout for the big list of variants as well as the single variant detail view. They are meant to give a quick overview to enable efficient scanning of the information. It is also in this direction they will evolve in the future.</p>"},{"location":"user-guide/institutes/","title":"Institutes","text":"<p>Scout was made as a centralized tool where multiple users from different customers could work against the same instance. Institutes is a way to separate sensitive information from the users. Each case has to have a institute as owner. A user belongs to an institute and in that way restricted to see only the cases owned by that institute. So one instance of scout can have one or many institutes. Each institute could be the owner of multiple cases and have multiple users attached. Each institute has to have a unique identifier, <code>institute_id</code>.</p>"},{"location":"user-guide/institutes/#settings","title":"Settings","text":"<p>From the Settings page, users and admins can set the institute display name, Sanger order email recipients, default coverage cutoff for reports, default frequency cutoff for the institutes clinical variants filter.</p> <p>In the menu \"Gene panels available for filtering\", users can check zero or more of the institutes panels to always be available as panel options on the variantS filter. Note that all cases may not have been processed bioinformatically to return variants from all genes in the clinical setting. If so the search will still return a message saying the gene was not among the clinical genes for the case. Consider opening the case for research or ordering a rerun.</p> <p>New phenotype groups can be added from this page. Such custom phenotype groups can then be selected from the case page.</p> <p>Available patient cohorts can be edited. Select or deselect existing ones, or type new free text labels to create new cohorts.</p> <p>Users with admin privileges can also select the LoqusDB instance to use for local observations from a menu of those configured on Scout startup - see admin guide - loqusdb.</p>"},{"location":"user-guide/institutes/#causatives","title":"Causatives","text":"<p>The causatives page lists all variants marked causative for the institutes cases. Use arrows to sort by column, and the buttons to copy a simplified version or export to Excel.</p>"},{"location":"user-guide/pages/","title":"Pages","text":"<p>Scout can be logically separated into a number of pages with different responsibility and purpose. The core pages include institues, cases, case, variants, and variant.</p> <p>This document describes each page, it's purpose, function, and intended use.</p>"},{"location":"user-guide/pages/#index","title":"Index","text":"<p>The \"landing page\". This is your default view where all users who aren't logged in will arrive at. It's main purpose is to introduce potentially new users to the website. It also allows you to sign in.</p>"},{"location":"user-guide/pages/#sign-up","title":"Sign up","text":"<p>New users have to apply for access prior to logging in the first time. The team leaders for each institute are required to sign off on new users.</p>"},{"location":"user-guide/pages/#sign-in","title":"Sign in","text":"<p>We have chosen to use Google OAuth for the signup process. This means that you click on a button on the first page which launches the OAuth process. When the user is returned, you will see your customized welcome page.</p> <p>We also use separate <code>@clinicalgenomics.se</code> accounts to be able to enforce 2-factor authentication.</p>"},{"location":"user-guide/pages/#welcome-page","title":"Welcome page","text":"<p>This is the first page a you see after logging in. Notice your first name in the upper right corner. You can also access the list of institutes you belong to.</p>"},{"location":"user-guide/pages/#institute-selection","title":"Institute selection","text":"<p>Users can belong to multiple institutes. Each institutes defines what cases can be viewed by the user. If you only belong to a single institute you will be redirected automatically to Cases.</p>"},{"location":"user-guide/pages/#cases-page","title":"Cases page","text":"<p>An overview of the cases that belongs to an institute and status for the cases.</p>"},{"location":"user-guide/pages/#variants-page","title":"Variants page","text":"<p>A list of the variants with some relevant information. Variants are grouped into SNVs, SVs, and STRs. Variants can have a separate clinical and research list. A cancer / somatic variant view is also available.</p>"},{"location":"user-guide/pages/#detailed-variant-page","title":"Detailed variant page","text":"<p>When choosing a variant the detailed variant information is displayed</p>"},{"location":"user-guide/pages/#gene-panels","title":"Gene Panels","text":"<p>Page to investigate and manipulating gene panels.</p>"},{"location":"user-guide/pages/#managed-variants","title":"Managed variants","text":"<p>Managed variants allows users to add variants of interest to follow. Variants can be added manually or loaded from a csv file. Managed variants are always loaded if encountered during VCF file parsing, and will be highlighted on the case page as well as on the variant page. The list of managed variants shown on the managed variants page can be filtered. Mark the variant category - snv, sv, cancer and cancer_sv are managed separately. No links to actual observations or cases are found from the Managed variants page.</p> <p>A valid managed variants <code>.csv</code> file can look like this:</p> <pre><code>chromosome;position;end;reference;alternative;category;sub_category;description\n14;76548781;76548781;CTGGACC;G;snv;indel;IFT43 indel test\n17;48696925;48696925;G;T;snv;snv;CACNA1G intronic test\n7;124491972;124491972;C;A;snv;snv;POT1 test snv\n</code></pre>"},{"location":"user-guide/panels/","title":"Gene Panels","text":"<p>This page describes gene panels, how they are annotated and how they are used in scout.</p>"},{"location":"user-guide/panels/#general","title":"General","text":"<p>Scout is developed to be used in a clinical setting and therefore gene panels is a central concept. The gene panels describes a set of genes with additional information that is often associated with a disease or a disease group. A case can then be associated with one or several gene panels.</p> <p>Gene panels containing custom genes can be directly created by Scout users in Scout's dedicated Gene Panels page. The following section describes how a user can create or update a gene panel from Scout.</p> <p>Gene panels can additionally be imported from PanelApp using the command line. Since this task must be performed by a system admin, it will be described in the admin section of the guide.</p>"},{"location":"user-guide/panels/#custom-panels-file-format","title":"Custom panels: file format","text":"<p>The gene panel is a tab or semicolon (;)-separated text file with an optional header that describes the columns and one line for each gene entry. You must use the same delimiter for the whole file. Ideally do not use the delimiter characters in other places in the file. Consult with an admin if you need to use the delimiter characters in other fields for help with escaping them or ensuring a higher priority separator is used on a previous line.</p> <p>The columns that will be used by scout are the following. Please note that if you do not include a header, the order of the columns can't be changed</p> <ul> <li>hgnc_id(int) This identifies the gene. Mandatory</li> <li>hgnc_symbol(str) This is used for coherence check when humans look at the file. Optional</li> <li>disease_associated_transcripts(str) ','-separated list of manually curated transcripts. Optional</li> <li>genetic_disease_models(str) ','-separated list of manually curated inheritance patterns that are followed for a gene. Optional</li> <li>mosaicism(str) If a gene is known to be associated with mosaicism this is annotated. Optional</li> <li>reduced_penetrance(str) If a gene is known to have reduced penetrance this is annotated. Optional</li> <li>database_entry_version(str) The database entry version is a way to track when a a gene was added or modified. Optional</li> </ul> <p>Each gene in a gene panel have to be identified with a HGNC id.</p>"},{"location":"user-guide/panels/#custom-panels-optional-header","title":"Custom panels: optional header","text":"<p>There is also an option to include all information about a panel in the header of the file. This could make uploading easier, just a matter of taste. In this case include a header with metadata, each of these lines are key-value separated by <code>=</code>. The meta data lines should start with <code>##</code></p> <p>Example:</p> <pre><code>##panel_id=panel1\n##institute=cust000\n##version=1.0\n##date=2016-12-09\n##display_name=Test panel\n#hgnc_id    hgnc_symbol\n7481    MT-TF\n...\n...\n...\n</code></pre>"},{"location":"user-guide/panels/#custom-panels-notes-on-entries","title":"Custom panels: notes on entries","text":"<ul> <li>hgnc_id: has valid HGNC id. Please check that a gene with the give HGNC ID exists in Scout in the available genome build. If for instance Scout is using genome build GRCh37 and a user tries to save a gene only available in genome build GRCh38 the upload of the panel will fail.</li> <li>genetic_disease_models A comma-separated list of inheritance models. Any standard model (AR,AD,XR,XD,MT,X,Y) will be saved under <code>inheritance_models</code>. Models different from standard models will be saved as <code>custom_inheritance_models</code>.</li> <li>mosaicism Any entry here will be interpreted as true</li> <li>reduced_penetrance Any entry here will be interpreted as true</li> <li>database_entry_version This should refer to a earlier version of the panel</li> </ul>"},{"location":"user-guide/panels/#custom-panels-uploading-a-new-gene-panel-version","title":"Custom panels: uploading a new gene panel version","text":"<p>You can upload a text file in Scout to update an existing gene panel. It should follow the format specified in this file: panel-example. This file is <code>;</code> (semicolon) separated. Tab is also an accepted file separator.</p> <p>You can also use this example Excel template as a starting point. When you are ready to update the gene panel simply:</p> <ol> <li>choose \"Save as...\" in Excel and select \"tab delimited Text\" as the format</li> <li>fill out the form in Scout and upload the file to update your gene panel</li> </ol> <p>When creating a new panel it is very important that it does not contain blank lines.</p>"},{"location":"user-guide/panels/#custom-panels-upload-from-interface","title":"Custom panels: upload from interface","text":"<p>Choose the menu in top left corner, click <code>Gene Panel</code>. Then under 'new panel' the user can point to a file and fill in name and display name.</p>"},{"location":"user-guide/panels/#custom-panels-upload-with-cli-admins-only","title":"Custom panels: upload with CLI (admins only)","text":"<p>When uploading from CLI there are more options. Use <code>scout load panel --help</code> for more information.</p>"},{"location":"user-guide/users/","title":"Users","text":"<p>A user represents an individual with access to all cases that belongs to the same institute(s) that the user does. From the main menu in scout one can access a users page that displays all existing users in the scout instance and ranks them based on how many actions they have performed.</p>"},{"location":"user-guide/users/#create-a-user","title":"Create a user","text":"<p>Users are created through the CLI with command <code>scout load user</code>. Please see the <code>--help</code> argument for more information. Email is used as user identification. A user can be admin which means that they have access to all institutes in the instance.</p> <p>Example:</p> <pre><code>&gt;scout load user --user-mail john@doe.com --admin --institute-id cust000 --user-name \"John Doe\"\n</code></pre> <p>A user can also have access to multiple institutes without being admin.</p> <p>Example:</p> <pre><code>&gt;scout load user -m john@doe.com -i cust000 -i cust001 -u \"John Doe\"\n</code></pre>"},{"location":"user-guide/users/#delete-a-user","title":"Delete a user","text":"<p>Users can be deleted from the CLI.</p> <p>Example:</p> <pre><code>&gt;scout delete user --mail john@doe.com\n</code></pre>"},{"location":"user-guide/users/#update-a-user","title":"Update a user","text":"<p>It is possible to update existing users from the command line. It is possible to add or remove admin rights and to add or remove access to institutes.</p> <p>Examples:</p> <p>Give admin rights</p> <pre><code>&gt;scout update user -u john@doe.com --update-role admin\n</code></pre> <p>Remove admin rights</p> <pre><code>&gt;scout update user -u john@doe.com --remove-admin\n</code></pre> <p>Add access to institutes</p> <p>Institutes has to exist in database</p> <pre><code>&gt;scout update user -u john@doe.com --add-institute cust003 --add-institute cust004\n</code></pre> <p>Remove access from institutes</p> <pre><code>&gt;scout update user -u john@doe.com --remove-institute cust001 --remove-institute cust002\n</code></pre>"},{"location":"user-guide/using-scout/","title":"Pinning a variant","text":"<p>If you find a variant that seems interesting enough that you believe someone should follow it up, you could consider \"pinning it\" to the case. This means that it will show up for all users to see in the case view along other pinned variants.</p> <p>A variant can be pinned by anyone and likewise unpinned by anyone (not just the person who originally pinned it). The activity log will store records of who did what for future reference, however.</p>"},{"location":"user-guide/using-scout/#mark-causative","title":"Mark Causative","text":"<p>A variant is marked causative when it is confirmed to be disease causing in a case. The variant will show up on the case page as causative variant. A case can have multiple causative variants. When a variant is marked causative, Scout will remember the variant so when when entering a new case Scout will indicate if a variant that was previously marked causative within the same institute exists in the particular case.</p>"},{"location":"user-guide/using-scout/#dismissing-a-variant","title":"Dismissing a variant","text":"<p>Conversely, often it is possible to judge a variant highly unlikely to cause the patients phenotype, for one of many reasons. Perhaps it is too common locally, is of LoF type in a gene where only GoF mutation has been described in disease, lacks genotype-phenotype correlation in the case of broad panels or has no obvious conceptual impact on the protein generated. The user can choose one or more reasons to dismiss the variant. Dismissed variants are grayed out on variants display, and shown as dismissed in the case report.</p>"},{"location":"user-guide/using-scout/#mark-a-variant-as-mosaic","title":"Mark a variant as mosaic","text":"<p>Variants can be marked as mosaic. There are some different alternatives on the variant page depending on the situation.</p>"},{"location":"user-guide/using-scout/#sending-sanger-email","title":"Sending Sanger email","text":"<p>It's possible to send an email to a user defined email address with information regarding a variant for Sanger validation. You can access this functionality through the variant detail view in the upper right hand corner.</p>"},{"location":"user-guide/using-scout/#local-frequency-database","title":"Local Frequency Database","text":"<p>This is not really a local frequency database but rather an indication if we have seen a variant before and in what form. It should work as a guide to exclude variants that exists due to artifacts in the sequencing process or if it as been observed in any of the earlier cases. Variants are added to the database in the following way:</p> <ul> <li>For each case we pick one affected individual</li> <li>Variants are filtered out based on if they are common or have a very low call quality</li> <li>The remaining variants are stored in loqusdb</li> </ul> <p>Each time the user looks at a variant scout will ask locusdb how many times it has been seen across all cases from all institutes (obs.), how many times it has been seen in a homozygous state (homo.) and how many cases these numbers are based on (tot.).</p>"},{"location":"user-guide/variants/","title":"Variants","text":""},{"location":"user-guide/variants/#variants","title":"Variants","text":"<p>The big list of variants. This page serves as an overview of all data and annotations for a single case. It's meant to allow you to skim through many variants ordered by the ranking.</p> <p>The first couple of columns are meant to give you a sense of place in the overall ranked list. The \"Rank\" column is especially useful after applying various filters.</p> <p>Filters can be saved for reuse. A modal prompt will ask you for a name when you click \"Save filter\". Each user shares filters with the other users in their institute. Selecting a filter from the filter select box and pressing \"Load\" causes the saved filter settings to be recovered. Pressing \"Audit filter\" will store a mention of the triage in the case event log, and will also make the filter name appear below the case comments section on the general report. This way the user can remember what filters have been tried, and communicate what analysis has been performed to another medical professional reading the report. Proper naming of filters is important for this to be effective. Filters can be deleted by pressing \"Delete filter\". Filters can be locked by use of the padlock button to avoid them being deleted. A locked filter can only be unlocked by the person who locked it.</p> <p>Hovering over both \"1000 Genomes\" (frequency) and \"CADD score\" (severity) columns will reveal additional metrics in a popup.</p> <p>Hovering over \"Inheritance models\" will pop up a list of all possible compounds if the variants follows this pattern.</p> <p>At the bottom of the list you will find a button to load the next batch of variants in the list. To return to the previous batch of variants, just press the browser back button.</p> <p>It's also possible to filter the variants using a number of different criteria. Open the filters panel by clicking the \"filter\" icon in the top right. Here you can fill in form and click \"Filter variants\" to update the list. This is also the place where you switch gene lists.</p>"},{"location":"user-guide/variants/#hotkeys-available-on-all-variants-pages","title":"Hotkeys available on all variantS pages","text":"<p>Some variants hotkeys are sensitive to which row you currently hovering over. - <code>d</code> for checking Dismiss checkbox on current row - <code>v</code> for opening a Variant on current row (open the variant, typically in a new <code>_blank</code> tab) Others give you quick access to a given function. - <code>c</code> Clinical filter - <code>f</code> Filter variants - <code>g</code> focus input on the Gene symbol field, un-collapsing filter if needed - <code>b</code> toggle dismiss Bar</p>"},{"location":"user-guide/variants/#variant","title":"Variant","text":"<p>This is the most complex view with a lot of related data presented to the user in a compact way. A lot of thought went into the design of the layout so here it the imagined workflow.</p>"},{"location":"user-guide/variants/#toolbar","title":"Toolbar","text":"<p>Two options are added to the right side of the menu:</p> <ul> <li>Send Sanger email to an institute related email address.</li> <li>Pin the current variant as interesting so that it shows up in the case view.</li> <li>Mark variant as causative. This is only to be used when a variant is confirmed to be causative - it will set the case to \"solved\" automatically.</li> </ul>"},{"location":"user-guide/variants/#fixed-header","title":"Fixed header","text":"<p>Introduces the basic facts of the variant that the user is often referring back to. As an example you need to refer back to the chromosome when assessing possible inheritance models.</p>"},{"location":"user-guide/variants/#summary","title":"Summary","text":"<p>This is the first a user looks at when assesing the variant.</p> <ul> <li>Rank score/CADD score</li> <li>Disease gene model, possible inheritance models, OMIM model</li> <li>Frequencies</li> <li>CLINSIG number</li> </ul>"},{"location":"user-guide/variants/#sv-frequency-svdb","title":"SV frequency - SVDB","text":"<p>Structural variant database freqency is annotated with SVDB, using a clustering algorithm DBSCAN. Variant type and chromosome are exact, but start and end positions for matches are approximate, and depend on previous cases from the database. In a region with multiple, inexactly positioned events, matching will be more relaxed than if only tightly clustered variants with near similar start and end coordinates have been found. Databases include research cases from Clinical genetics (WGS at NGI), clinical cases with arrayCGH (benign or pathogenic collections), Decipher, SweGen and local cases.</p>"},{"location":"user-guide/variants/#details","title":"Details","text":"<p>see Annotations</p>"},{"location":"user-guide/variants/#functional-annotation","title":"Functional Annotation","text":"<p>This is the worst functional impact of all transcripts</p>"},{"location":"user-guide/variants/#autozygous-region","title":"Autozygous region","text":"<p>Length and quality of an autozygous region spanning the variant, as returned by rhocall.</p>"},{"location":"user-guide/variants/#clinvar-submission-of-pinned-variants","title":"Clinvar submission of pinned variants","text":"<p>Single nucleotide variants, indels, insertions, as well as larger structural variants can be used to create submissions to Clinvar, a free public database of phenotype-genotype associations. One of more pinned variants for a case with assigned phenotype might be used from the Clinvar submission page to create comma separated file to be used in the submission process. The Scout submission form mirrors the fields on the Clinvar submission spreadsheets. Optional case data for one or more pinned variants can also be generated and uploaded together with the variants during the file submission. Prior registration of a user and a submitting organization to the Clinvar portal is required to submit data to the Clinvar database.</p>"},{"location":"user-guide/variants/#region-annotation","title":"Region Annotation","text":"<p>This is the region of the most severe functional impact</p>"},{"location":"user-guide/variants/#gt-call","title":"GT Call","text":""},{"location":"user-guide/variants/#variant-callers","title":"Variant Callers","text":"<p>Badges below the GT Call table show the variant caller responsible for the calls and their filter status. A variant with Pass status passed all the filters from its variant callers, whereas a Filtered call was detected by the caller but not deemed passing filter quality.</p>"},{"location":"user-guide/variants/#snvs-and-indels","title":"SNVs and indels","text":""},{"location":"user-guide/variants/#gatk","title":"GATK","text":""},{"location":"user-guide/variants/#freebayes","title":"FreeBayes","text":""},{"location":"user-guide/variants/#samtools","title":"SAMtools","text":""},{"location":"user-guide/variants/#svs","title":"SVs","text":"<p>SVs are structural variants, balanced or unbalanced chromosomal abberrations. Size filtering can be done either to show only variants longer than the given size, or shorter if the \"Length shorter than\" checkbox is activated. When the checkbox is ticked, queries are also inclusive of non-existing annotations e.g. SV events without size. Note that some BNDs, like interchromosomal translocations are given with a very large (larger than chromosome) size instead.</p> <p>Scout supports viewing general SVs as encoded in the VCF format specification. Some sample callers that we have worked with include:</p>"},{"location":"user-guide/variants/#tiddit","title":"TIDDIT","text":"<p>TIDDIT Locally developed structural variant caller that uses discordant read pair detection and supplementary alignments for split reads from the bam file to call structural variations, including deletions, duplications, inversions and translocations (BND). The number of supporting links is used to call the reliability of the call. Read depth information is used to infer the variant type as well as zygosity where possible. Delivers exact breakpoints when possible. Sensitivity for clinically relevant deletions is 100%, balanced events lower but at a best-in-class &gt;80%. Be advised to consider zygosity calls from balanced events as highly uncertain.</p> <p>Jesper Eisfeldt, Francesco Vezzi, Pall Olason, Daniel Nilsson, Anna Lindstrand TIDDIT, an efficient and comprehensive structural variant caller for massive parallel sequencing data F1000Research 2017, 6:664</p>"},{"location":"user-guide/variants/#cnvnator","title":"CNVnator","text":"<p>CNVnator Well established read depth aware CNV caller. Infers deletions and duplications from binning read depth. Will call inexact boundaries for the events. Effectively 100% sensitivity for large CNVs in accessible regions. Be wary if CNVnator did not call your large unbalanced variant - that may indicate a false positive. Comparatively decent zygosity-calls from v0.3.3.</p> <p>Abyzov A, Urban AE, Snyder M, Gerstein M. CNVnator: an approach to discover, genotype, and characterize typical and atypical CNVs from family and population genome sequencing. Genome Res. 2011 Jun;21(6):974-84.</p>"},{"location":"user-guide/variants/#manta","title":"Manta","text":"<p>Manta: Internationally well used de-facto standard for structural variant calling. Uses discordant read pairs and split read graphs to call variants. Comparatively good sensitivity for insertions. Specificity is not always optimal. Be adviced of potential false positive calls of long range connectivity, in particular when in conflict with callers that rely more on read-depth.</p> <p>Chen, X. et al. (2016) Manta: rapid detection of structural variants and indels for germline and cancer sequencing applications. Bioinformatics, 32, 1220-1222. Be advised to consider zygosity calls from balanced events as uncertain.</p>"},{"location":"user-guide/variants/#delly","title":"Delly","text":"<p>Delly The long standing, well known and decently performing tool Delly uses discordant read-pairs and split reads to call structural variants. Calls made are reliable from &gt;300bp, but also sports an effective indel detection mode for sub-readlength indels. As with manta, Specificity is not always optimal. Be adviced of potential false positive calls of long range connectivity, in particular when in conflict with callers that rely more on read-depth. Be advised to consider zygosity calls as uncertain.</p> <p>Tobias Rausch, Thomas Zichner, Andreas Schlattl, Adrian M. Stuetz, Vladimir Benes, Jan O. Korbel. Delly: structural variant discovery by integrated paired-end and split-read analysis. Bioinformatics 2012 28: i333-i339.</p>"},{"location":"user-guide/variants/#strs","title":"STRs","text":"<p>Scout supports viewing STRs, Short Tandem Repeats, initially only for a clinical panel.</p> <p>Tested callers include:</p>"},{"location":"user-guide/variants/#expansionhunter","title":"ExpansionHunter","text":"<p>ExpansionHunter Longer-than-readlength analysis of STR sites. Requires a pre-made panel file noting the location of target sites to analyze, then rapidly analyses bam files. Dolzenko et al Detection of long repeat expansions from PCR-free whole-genome sequence data.</p>"},{"location":"user-guide/variants/#annotating-strs","title":"Annotating STRs","text":"<p>The out put files of expansion hunter if preferably annotated with stranger before loaded into scout.</p>"},{"location":"user-guide/variants/#compounds-top-20","title":"Compounds (top 20)","text":"<p>Only interesting when the compound inheritance pattern is required, the list can be very long but is by default cropped to the top 20 highest ranked ones as shown in the heading.</p>"},{"location":"user-guide/variants/#managed-variants","title":"Managed variants","text":""},{"location":"user-guide/variants/#managed-variants-upload-file-format","title":"Managed variants upload file format","text":"<p>The managed variants text file is a tab or semicolon (;)-separated text file with a mandatory header that describes the columns and one line for each gene entry. You must use the same delimiter for the whole file. Ideally do not use the delimiter characters in other places in the file. Consult with an admin if you need to use the delimiter characters in other fields for help with escaping them or ensuring a higher priority separator is used on a previous line. Initial lines starting with <code>##</code> are considered comments and are ignored. The first other line starting with <code>#</code>, or the first line in the file is treated as the header line.</p> <p>The columns that will be used by Scout are the following. - chromosome(str) Chromosome name. Mandatory - position(int) Start position. Mandatory - end(int) End position. Optional - reference(str) Reference sequence Mandatory Use for SVs is only exact. - alternative(str) Alternative sequence Mandatory Use for SVs is only exact. - category(str) One of \"snv\", \"sv\", \"cancer\" or \"cancer_sv\" Mandatory - sub_category(str) Sub category of variant. For \"snv\" and \"cancer\" this is either \"snv\" or \"indel\". For \"sv\" and \"cancer_sv\" this is one of \"ins\", \"del\", \"dup\", \"cnv\", \"inv\" or \"bnd\". Mandatory - build(str) Defaults to \"37\". Optional - description(str) Free text description of the variant. Classification status, evidence and references are appropriate, and if applicable affected gene(s), protein consequences and alternative variant names. Optional - maintainer(str) Placeholder, replaced by the current uploading user. Optional placeholder - institutes(list(str)) Placeholder, replaced with the current uploading user institutes. Optional placeholder</p> <p>Example:</p> <pre><code>## Managed variants from some reliable source\n#chromosome;position;end;reference;alternative;category;sub_category;description\n14;76548781;76548781;CTGGACC;G;snv;indel;IFT43 indel test\n17;48696925;48696925;G;T;snv;snv;CACNA1G intronic test\n7;124491972;124491972;C;A;snv;snv;POT1 test snv\n</code></pre>"}]}